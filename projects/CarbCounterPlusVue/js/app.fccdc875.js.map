{"version":3,"file":"js/app.fccdc875.js","mappings":"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","sources":["webpack://carbcounter-plus-vue/./src/App.vue?9c8c","webpack://carbcounter-plus-vue/./src/components/AppHeader.vue?cdbd","webpack://carbcounter-plus-vue/src/components/AppHeader.vue","webpack://carbcounter-plus-vue/./src/components/AppHeader.vue?6144","webpack://carbcounter-plus-vue/./src/components/AppHeader.vue","webpack://carbcounter-plus-vue/src/App.vue","webpack://carbcounter-plus-vue/./src/App.vue?facb","webpack://carbcounter-plus-vue/./src/App.vue","webpack://carbcounter-plus-vue/./src/views/AppHome.vue?8c70","webpack://carbcounter-plus-vue/./src/components/MenuButton.vue?cbef","webpack://carbcounter-plus-vue/src/components/MenuButton.vue","webpack://carbcounter-plus-vue/./src/components/MenuButton.vue?5c78","webpack://carbcounter-plus-vue/./src/components/MenuButton.vue","webpack://carbcounter-plus-vue/src/views/AppHome.vue","webpack://carbcounter-plus-vue/./src/views/AppHome.vue?2d71","webpack://carbcounter-plus-vue/./src/views/AppHome.vue","webpack://carbcounter-plus-vue/./src/views/CarbCalc.vue?a288","webpack://carbcounter-plus-vue/./src/components/DropdownInput.vue?b391","webpack://carbcounter-plus-vue/src/components/DropdownInput.vue","webpack://carbcounter-plus-vue/./src/components/DropdownInput.vue?8637","webpack://carbcounter-plus-vue/./src/components/DropdownInput.vue","webpack://carbcounter-plus-vue/./src/components/CarbTotal.vue?a8c6","webpack://carbcounter-plus-vue/src/components/CarbTotal.vue","webpack://carbcounter-plus-vue/./src/components/CarbTotal.vue?820a","webpack://carbcounter-plus-vue/./src/components/CarbTotal.vue","webpack://carbcounter-plus-vue/./src/components/CarbList.vue?8532","webpack://carbcounter-plus-vue/src/components/CarbList.vue","webpack://carbcounter-plus-vue/./src/components/CarbList.vue?439f","webpack://carbcounter-plus-vue/./src/components/CarbList.vue","webpack://carbcounter-plus-vue/src/views/CarbCalc.vue","webpack://carbcounter-plus-vue/./src/views/CarbCalc.vue?107c","webpack://carbcounter-plus-vue/./src/views/CarbCalc.vue","webpack://carbcounter-plus-vue/./src/views/DoseCalc.vue?c409","webpack://carbcounter-plus-vue/./src/components/NumberInput.vue?f52f","webpack://carbcounter-plus-vue/src/components/NumberInput.vue","webpack://carbcounter-plus-vue/./src/components/NumberInput.vue?724d","webpack://carbcounter-plus-vue/./src/components/NumberInput.vue","webpack://carbcounter-plus-vue/./src/components/DosageResults.vue?5cd8","webpack://carbcounter-plus-vue/./src/components/DosageResult.vue?36fc","webpack://carbcounter-plus-vue/src/components/DosageResult.vue","webpack://carbcounter-plus-vue/./src/components/DosageResult.vue?035d","webpack://carbcounter-plus-vue/./src/components/DosageResult.vue","webpack://carbcounter-plus-vue/./src/classes/CarbRatio.js","webpack://carbcounter-plus-vue/src/components/DosageResults.vue","webpack://carbcounter-plus-vue/./src/components/DosageResults.vue?bb6f","webpack://carbcounter-plus-vue/./src/components/DosageResults.vue","webpack://carbcounter-plus-vue/src/views/DoseCalc.vue","webpack://carbcounter-plus-vue/./src/views/DoseCalc.vue?7b0a","webpack://carbcounter-plus-vue/./src/views/DoseCalc.vue","webpack://carbcounter-plus-vue/./src/views/Settings.vue?7510","webpack://carbcounter-plus-vue/./src/components/RatioInput.vue?1911","webpack://carbcounter-plus-vue/src/components/RatioInput.vue","webpack://carbcounter-plus-vue/./src/components/RatioInput.vue?9765","webpack://carbcounter-plus-vue/./src/components/RatioInput.vue","webpack://carbcounter-plus-vue/./src/components/SelectInput.vue?0328","webpack://carbcounter-plus-vue/src/components/SelectInput.vue","webpack://carbcounter-plus-vue/./src/components/SelectInput.vue?f8f7","webpack://carbcounter-plus-vue/./src/components/SelectInput.vue","webpack://carbcounter-plus-vue/./src/components/SubmitButton.vue?f64e","webpack://carbcounter-plus-vue/src/components/SubmitButton.vue","webpack://carbcounter-plus-vue/./src/components/SubmitButton.vue?d841","webpack://carbcounter-plus-vue/./src/components/SubmitButton.vue","webpack://carbcounter-plus-vue/src/views/Settings.vue","webpack://carbcounter-plus-vue/./src/views/Settings.vue?f7c9","webpack://carbcounter-plus-vue/./src/views/Settings.vue","webpack://carbcounter-plus-vue/./src/router.js","webpack://carbcounter-plus-vue/./src/carbs.js","webpack://carbcounter-plus-vue/./src/classes/CarbAmount.js","webpack://carbcounter-plus-vue/./src/classes/Carb.js","webpack://carbcounter-plus-vue/./src/classes/CarbCategory.js","webpack://carbcounter-plus-vue/./src/store/carbcalc/index.js","webpack://carbcounter-plus-vue/./src/store/dosecalc/index.js","webpack://carbcounter-plus-vue/./src/classes/Unit.js","webpack://carbcounter-plus-vue/./src/classes/CarbUnit.js","webpack://carbcounter-plus-vue/./src/classes/BGUnit.js","webpack://carbcounter-plus-vue/./src/store/settings/index.js","webpack://carbcounter-plus-vue/./src/store/index.js","webpack://carbcounter-plus-vue/./src/registerServiceWorker.js","webpack://carbcounter-plus-vue/./src/main.js","webpack://carbcounter-plus-vue/webpack/bootstrap","webpack://carbcounter-plus-vue/webpack/runtime/chunk loaded","webpack://carbcounter-plus-vue/webpack/runtime/define property getters","webpack://carbcounter-plus-vue/webpack/runtime/global","webpack://carbcounter-plus-vue/webpack/runtime/hasOwnProperty shorthand","webpack://carbcounter-plus-vue/webpack/runtime/publicPath","webpack://carbcounter-plus-vue/webpack/runtime/jsonp chunk loading","webpack://carbcounter-plus-vue/webpack/startup"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('AppHeader'),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('nav',[_c('div',{staticClass:\"top\"},[(_vm.$route.name !== 'Home')?_c('img',{staticClass:\"menu-toggle\",attrs:{\"src\":require(\"@/assets/svgs/hamburger.svg\"),\"alt\":\"Toggle Menu\",\"height\":\"40\",\"width\":\"40\"},on:{\"click\":_vm.toggleMenu}}):_vm._e(),_c('router-link',{staticClass:\"logo\",attrs:{\"to\":\"/\"}},[_c('img',{staticClass:\"logo__img\",attrs:{\"src\":require(\"@/assets/svgs/logo.svg\"),\"alt\":\"Home\"}})])],1),(_vm.$route.name !== 'Home')?_c('div',{ref:\"menu\",staticClass:\"menu hide\"},[_c('router-link',{staticClass:\"bg-blue\",attrs:{\"to\":\"/carbcalc\"}},[_vm._v(\"CarbCalc\")]),_c('router-link',{staticClass:\"bg-green\",attrs:{\"to\":\"/dosecalc\"}},[_vm._v(\"DoseCalc\")]),_c('router-link',{staticClass:\"bg-pink\",attrs:{\"to\":\"/settings\"}},[_vm._v(\"Settings\")])],1):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <nav>\n    <div class=\"top\">\n      <img\n        v-if=\"$route.name !== 'Home'\"\n        class=\"menu-toggle\"\n        src=\"@/assets/svgs/hamburger.svg\"\n        alt=\"Toggle Menu\"\n        height=\"40\"\n        width=\"40\"\n        @click=\"toggleMenu\"\n      />\n      <router-link to=\"/\" class=\"logo\"\n        ><img class=\"logo__img\" src=\"@/assets/svgs/logo.svg\" alt=\"Home\"\n      /></router-link>\n    </div>\n    <div v-if=\"$route.name !== 'Home'\" ref=\"menu\" class=\"menu hide\">\n      <router-link class=\"bg-blue\" to=\"/carbcalc\">CarbCalc</router-link>\n      <router-link class=\"bg-green\" to=\"/dosecalc\">DoseCalc</router-link>\n      <router-link class=\"bg-pink\" to=\"/settings\">Settings</router-link>\n    </div>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: \"AppHeader\",\n  methods: {\n    toggleMenu: function () {\n      if (this.$refs.menu.classList.contains(\"hide\")) {\n        this.$refs.menu.classList.remove(\"hide\");\n      } else {\n        this.$refs.menu.classList.add(\"hide\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/scss/variables.scss\";\n\nnav {\n  display: flex;\n  flex-flow: column nowrap;\n  background-color: #fff;\n  padding: 1rem;\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #ddd;\n    padding: 0.2rem 0.5rem;\n    border: none;\n    flex: 1;\n    color: #fff;\n    font-size: 1.2rem;\n    text-decoration: none;\n\n    &:focus,\n    &.router-link-exact-active {\n      outline: 1px solid black;\n    }\n\n    &.bg-blue {\n      background-color: $blue;\n\n      &:hover {\n        background-color: lighten($color: $blue, $amount: 10);\n      }\n    }\n\n    &.bg-green {\n      background-color: $green;\n\n      &:hover {\n        background-color: lighten($color: $green, $amount: 10);\n      }\n    }\n\n    &.bg-pink {\n      background-color: $pink;\n\n      &:hover {\n        background-color: lighten($color: $pink, $amount: 10);\n      }\n    }\n  }\n}\n\n.top {\n  display: flex;\n  gap: 1rem;\n  flex-flow: row nowrap;\n  align-items: center;\n}\n\n.logo {\n  flex: 0;\n  margin: 0 auto;\n  background-color: transparent;\n\n  &.router-link-exact-active {\n    outline: none;\n  }\n}\n\n.logo__img {\n  height: #{\"max(5vh, 3rem)\"};\n}\n\n.menu {\n  display: flex;\n  flex-flow: column nowrap;\n  gap: 0.5rem;\n}\n\n@media screen and (max-width: 420px) {\n  .menu {\n    height: 8.125rem;\n    margin-top: 1rem;\n    overflow: hidden;\n    transition: height 0.5s cubic-bezier(0, 0, 0.45, 1),\n      opacity 0.3s 0.1s cubic-bezier(0, 0, 0, 0.9),\n      margin-top 0.1s cubic-bezier(0, 0, 0.2, 0);\n  }\n\n  .menu.hide {\n    height: 0;\n    margin-top: 0;\n    opacity: 0;\n    transition: height 0.5s cubic-bezier(0, 0, 0.45, 1),\n      opacity 0.4s cubic-bezier(0, 0, 0, 0.9),\n      margin-top 0.3s 0.2s cubic-bezier(0, 0, 0.8, 1);\n  }\n}\n\n@media screen and (min-width: 420px) {\n  nav {\n    gap: 1rem;\n  }\n\n  .menu {\n    flex-flow: row nowrap;\n    height: 3rem;\n  }\n\n  .top {\n    justify-content: center;\n  }\n\n  .menu-toggle {\n    display: none;\n  }\n\n  .menu.hide {\n    display: flex;\n  }\n}\n\n@media screen and (min-width: 600px) {\n  nav {\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .menu {\n    flex: 1;\n    max-width: #{\"max(30%, 45rem)\"};\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AppHeader.vue?vue&type=template&id=da4320de&scoped=true&\"\nimport script from \"./AppHeader.vue?vue&type=script&lang=js&\"\nexport * from \"./AppHeader.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AppHeader.vue?vue&type=style&index=0&id=da4320de&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"da4320de\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <AppHeader />\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport AppHeader from \"@/components/AppHeader.vue\";\nexport default {\n  components: {\n    AppHeader,\n  },\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/scss/variables.scss\";\n\n:root {\n  font-size: #{\"clamp(1rem, 1.6vw, 1.5rem)\"};\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  background: $yellow;\n  margin: 0;\n}\n\nbutton {\n  background-color: #fff;\n  border: none;\n  font-size: 1.2rem;\n  height: 3rem;\n  padding: 0 1rem;\n\n  &.bg-blue,\n  &.bg-green,\n  &.bg-pink {\n    color: #fff;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: #ddd;\n  }\n}\n\nlabel,\nlegend {\n  display: block;\n  font-size: 1.2rem;\n  font-weight: bold;\n  text-align: left;\n  margin: 0;\n}\n\nfieldset {\n  padding: 0;\n  border: none;\n  margin: 0;\n}\n\nselect,\ninput {\n  background: #ddd;\n  border: none;\n  font-size: 1.125rem;\n  height: 1.5rem;\n  margin-top: 0.5rem;\n  outline: none;\n  width: 100%;\n}\n\n#app {\n  min-height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  font-family: \"Montserrat\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\n.view-container {\n  width: $container-width;\n  min-width: 320px;\n  margin: 0 auto;\n  padding: 0 1rem 1rem;\n}\n\n.bg-blue {\n  background-color: $blue;\n\n  &:hover,\n  &:focus {\n    background-color: lighten($color: $blue, $amount: 10);\n  }\n}\n\n.bg-green {\n  background-color: $green;\n\n  &:hover,\n  &:focus {\n    background-color: lighten($color: $green, $amount: 10);\n  }\n}\n\n.bg-pink {\n  background-color: $pink;\n\n  &:hover,\n  &:focus {\n    background-color: lighten($color: $pink, $amount: 10);\n  }\n}\n\n.text-blue {\n  color: $blue;\n}\n\n.text-green {\n  color: $green;\n}\n\n.text-pink {\n  color: $pink;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=15b626ff&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"view-container home\"},[_c('div',{staticClass:\"menu\"},[_c('MenuButton',{attrs:{\"title\":\"CarbCalc\",\"color\":\"blue\",\"svg\":require('@/assets/svgs/carbcalc.svg')}}),_c('MenuButton',{attrs:{\"title\":\"DoseCalc\",\"color\":\"green\",\"svg\":require('@/assets/svgs/dosecalc.svg')}}),_c('MenuButton',{attrs:{\"title\":\"Settings\",\"color\":\"pink\",\"svg\":require('@/assets/svgs/settings.svg')}}),_c('span',{staticClass:\"version\"},[_vm._v(\"Carb Counter+: v0.5.0\")])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('router-link',{staticClass:\"menu-button\",class:_vm.colorClass,attrs:{\"to\":_vm.title.toLowerCase()}},[_c('img',{attrs:{\"src\":_vm.svg}}),_vm._v(\" \"+_vm._s(_vm.title)+\" \")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <router-link\n    class=\"menu-button\"\n    :class=\"colorClass\"\n    :to=\"title.toLowerCase()\"\n  >\n    <img :src=\"svg\" />\n    {{ title }}\n  </router-link>\n</template>\n\n<script>\nexport default {\n  name: \"MenuButton\",\n  props: {\n    title: {\n      type: String,\n      default: \"Menu Item\",\n    },\n    color: {\n      default: \"blue\",\n      validator: function (value) {\n        // The value must match one of these strings\n        return [\"blue\", \"green\", \"pink\"].indexOf(value) !== -1;\n      },\n    },\n    svg: {\n      type: String,\n      default: \"\",\n    },\n  },\n  computed: {\n    colorClass: function () {\n      return \"bg-\" + this.color;\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.menu-button {\n  display: flex;\n  flex-flow: column nowrap;\n  flex: 1 0 auto;\n  padding: 1.25rem;\n  justify-content: center;\n  align-items: center;\n  margin: 0.625rem;\n  color: #fff;\n  text-decoration: none;\n  font-size: 1.5rem;\n  gap: 0.5em;\n\n  &:hover,\n  &:focus {\n    outline: 1px solid black;\n  }\n\n  img {\n    width: 5em;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MenuButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MenuButton.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MenuButton.vue?vue&type=template&id=d06402a8&scoped=true&\"\nimport script from \"./MenuButton.vue?vue&type=script&lang=js&\"\nexport * from \"./MenuButton.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MenuButton.vue?vue&type=style&index=0&id=d06402a8&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d06402a8\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"view-container home\">\n    <div class=\"menu\">\n      <MenuButton\n        title=\"CarbCalc\"\n        color=\"blue\"\n        :svg=\"require('@/assets/svgs/carbcalc.svg')\"\n      />\n      <MenuButton\n        title=\"DoseCalc\"\n        color=\"green\"\n        :svg=\"require('@/assets/svgs/dosecalc.svg')\"\n      />\n      <MenuButton\n        title=\"Settings\"\n        color=\"pink\"\n        :svg=\"require('@/assets/svgs/settings.svg')\"\n      />\n      <span class=\"version\">Carb Counter+: v0.5.0</span>\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\nimport MenuButton from \"@/components/MenuButton.vue\";\n\nexport default {\n  name: \"AppHome\",\n  components: {\n    MenuButton,\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.home {\n  display: flex;\n  flex-flow: column nowrap;\n  flex: 1 1 auto;\n  height: 100%;\n  padding: 1rem;\n}\n\n.menu {\n  display: flex;\n  flex-flow: row wrap;\n  width: 100%;\n  padding: 0.625rem;\n  margin: auto;\n  background-color: #fff;\n}\n\n.version {\n  align-self: flex-end;\n  flex: none;\n  width: 100%;\n  font-size: 0.875rem;\n}\n\n@media screen and (min-width: 600px) {\n  .menu {\n    flex: none;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AppHome.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AppHome.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AppHome.vue?vue&type=template&id=635036ee&scoped=true&\"\nimport script from \"./AppHome.vue?vue&type=script&lang=js&\"\nexport * from \"./AppHome.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AppHome.vue?vue&type=style&index=0&id=635036ee&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"635036ee\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"view-container\"},[_c('h1',[_vm._v(\"Carb Calculator\")]),_c('div',{staticClass:\"selectgroup\"},[(!_vm.customCarb)?_c('input',{attrs:{\"id\":\"searchTerm\",\"type\":\"text\",\"placeholder\":\"Enter a search term\"},domProps:{\"value\":_vm.searchTerm},on:{\"input\":_vm.search}}):_vm._e(),(!_vm.customCarb)?_c('DropdownInput',{attrs:{\"id\":\"selectedCategoryName\",\"value\":_vm.selectedCategoryName,\"empty-string\":\"Select a Category\",\"list\":_vm.categoriesList},on:{\"change\":_vm.selectedCategoryNameChange}}):_vm._e(),(_vm.selectedCategoryName)?_c('DropdownInput',{attrs:{\"id\":\"selectedCarbName\",\"value\":_vm.selectedCarbName,\"empty-string\":\"Select a Carb\",\"list\":_vm.carbsList},on:{\"change\":_vm.selectedCarbNameChange}}):_vm._e(),(_vm.selectedCarbName)?_c('DropdownInput',{attrs:{\"id\":\"selectedAmountName\",\"value\":_vm.selectedAmountName,\"empty-string\":\"Select an Amount\",\"list\":_vm.amountsList},on:{\"change\":_vm.selectedAmountNameChange}}):_vm._e(),(_vm.customCarb)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.customCarbName),expression:\"customCarbName\"}],attrs:{\"type\":\"text\",\"placeholder\":\"Enter custom name (optional)\"},domProps:{\"value\":(_vm.customCarbName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.customCarbName=$event.target.value}}}):_vm._e(),(!_vm.selectedCategoryName)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.customCarb),expression:\"customCarb\"}],attrs:{\"type\":\"number\",\"placeholder\":\"Or enter custom value\"},domProps:{\"value\":(_vm.customCarb)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.customCarb=$event.target.value}}}):_vm._e()],1),_c('button',{staticClass:\"bg-blue\",on:{\"click\":_vm.add}},[_vm._v(\"Add to list\")]),_c('CarbTotal',{attrs:{\"total\":_vm.total}}),_c('CarbList')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.list.length !== 0)?_c('select',{on:{\"change\":_vm.input}},[_c('option',{attrs:{\"selected\":\"\"}},[_vm._v(_vm._s(_vm.emptyString))]),(_vm.list[0].class === 'CarbCategory')?_vm._l((_vm.list),function(category){return _c('optgroup',{key:category.uuid,attrs:{\"label\":category.name}},_vm._l((category.subcategories),function(subcategory){return _c('option',{key:subcategory.uuid,domProps:{\"value\":subcategory.name}},[_vm._v(\" \"+_vm._s(subcategory.name)+\" \")])}),0)}):(_vm.list[0].class === 'Carb')?_vm._l((_vm.list),function(item){return _c('option',{key:item.uuid,domProps:{\"value\":item.name}},[_vm._v(\" \"+_vm._s((item.variant ? item.variant + \", \" : \"\") + item.name)+\" \")])}):(_vm.list[0].class === 'CarbAmount')?_vm._l((_vm.list),function(item){return _c('option',{key:item.uuid,domProps:{\"value\":item.name}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])}):_vm._e()],2):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <select v-if=\"list.length !== 0\" @change=\"input\">\n    <option selected>{{ emptyString }}</option>\n    <template v-if=\"list[0].class === 'CarbCategory'\">\n      <optgroup\n        v-for=\"category in list\"\n        :key=\"category.uuid\"\n        :label=\"category.name\"\n      >\n        <option\n          v-for=\"subcategory in category.subcategories\"\n          :key=\"subcategory.uuid\"\n          :value=\"subcategory.name\"\n        >\n          {{ subcategory.name }}\n        </option>\n      </optgroup>\n    </template>\n    <option\n      v-for=\"item in list\"\n      v-else-if=\"list[0].class === 'Carb'\"\n      :key=\"item.uuid\"\n      :value=\"item.name\"\n    >\n      {{ (item.variant ? item.variant + \", \" : \"\") + item.name }}\n    </option>\n    <option\n      v-for=\"item in list\"\n      v-else-if=\"list[0].class === 'CarbAmount'\"\n      :key=\"item.uuid\"\n      :value=\"item.name\"\n    >\n      {{ item.name }}\n    </option>\n  </select>\n</template>\n\n<script>\nexport default {\n  name: \"DropdownInput\",\n  props: {\n    value: {\n      type: [String],\n      default: \"\",\n    },\n    emptyString: { type: String, default: \"Select an option\" },\n    list: {\n      type: Array,\n      default: () => [],\n    },\n  },\n  methods: {\n    input: function ($event) {\n      const value =\n        $event.target.value !== this.emptyString ? $event.target.value : \"\";\n      this.$emit(\"change\", value);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DropdownInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DropdownInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DropdownInput.vue?vue&type=template&id=2517048e&scoped=true&\"\nimport script from \"./DropdownInput.vue?vue&type=script&lang=js&\"\nexport * from \"./DropdownInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2517048e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('span',{staticClass:\"stat\"},[_c('span',{staticClass:\"number\"},[_vm._v(_vm._s(_vm.total.toFixed(1)))]),_c('span',{staticClass:\"unit\"},[_vm._v(_vm._s(_vm.carbUnit.name))])]),_c('a',{staticClass:\"button bg-green\",attrs:{\"href\":\"#/dosecalc/\"},on:{\"click\":_vm.calculateDosage}},[_vm._v(\" Calculate Dosage \")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container\">\n    <span class=\"stat\">\n      <span class=\"number\">{{ total.toFixed(1) }}</span>\n      <span class=\"unit\">{{ carbUnit.name }}</span>\n    </span>\n    <a href=\"#/dosecalc/\" class=\"button bg-green\" @click=\"calculateDosage\">\n      Calculate Dosage\n    </a>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CarbTotal\",\n  props: {\n    total: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    carbUnit: function () {\n      return this.$store.getters[\"settings/carbUnit\"];\n    },\n  },\n  methods: {\n    calculateDosage($event) {\n      $event.preventDefault();\n\n      this.$store.commit(\"dosecalc/update\", {\n        property: \"carbs\",\n        index: this.total,\n      });\n\n      this.$router.push(\"dosecalc\");\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/scss/variables.scss\";\n\n.container {\n  background: #fff;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0.5rem 2rem;\n  margin: 1rem auto;\n\n  .button {\n    color: #fff;\n    text-decoration: none;\n    margin-left: 1rem;\n    padding: 0.5rem 1rem;\n  }\n}\n\n.stat {\n  color: $blue;\n  font-size: 3rem;\n\n  .number {\n    font-weight: 700;\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CarbTotal.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CarbTotal.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CarbTotal.vue?vue&type=template&id=f0caab18&scoped=true&\"\nimport script from \"./CarbTotal.vue?vue&type=script&lang=js&\"\nexport * from \"./CarbTotal.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CarbTotal.vue?vue&type=style&index=0&id=f0caab18&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f0caab18\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('span',{staticClass:\"amount\"},[_vm._v(_vm._s(_vm.items.length)+\" items in list\")]),_vm._l((_vm.items),function(item){return _c('div',{key:item.index,staticClass:\"item\"},[_c('div',{staticClass:\"item-info\"},[_c('p',[_c('b',{staticClass:\"item-subcategory\"},[_vm._v(_vm._s(item.subcategory))]),_c('br'),_c('span',{staticClass:\"item-name\"},[_vm._v(_vm._s(item.name))])]),_c('span',{staticClass:\"item-amount\"},[_vm._v(_vm._s(item.amount))])]),_c('button',{on:{\"click\":function($event){return _vm.remove($event, item)}}},[_vm._v(\"X\")])])})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container\">\n    <span class=\"amount\">{{ items.length }} items in list</span>\n    <div v-for=\"item in items\" :key=\"item.index\" class=\"item\">\n      <div class=\"item-info\">\n        <p>\n          <b class=\"item-subcategory\">{{ item.subcategory }}</b>\n          <br />\n          <span class=\"item-name\">{{ item.name }}</span>\n        </p>\n        <span class=\"item-amount\">{{ item.amount }}</span>\n      </div>\n      <button @click=\"remove($event, item)\">X</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"CarbList\",\n  computed: {\n    items: function () {\n      return this.$store.state.carbcalc.selectedItems;\n    },\n    carbUnit: function () {\n      return this.$store.getters[\"settings/carbUnit\"];\n    },\n  },\n  methods: {\n    remove: function (event, item) {\n      this.$store.commit(\"carbcalc/removeItem\", item);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/scss/variables.scss\";\n\n.container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.item {\n  display: flex;\n  flex: 0;\n  align-items: center;\n  margin: 0.25rem 0;\n  padding: 1rem;\n  flex-flow: row nowrap;\n  background-color: #fff;\n}\n\n.item-info {\n  display: flex;\n  flex: 1;\n  flex-flow: wrap;\n  align-items: center;\n}\n\n.item-subcategory {\n  font-weight: bold;\n  flex: 1 0 auto;\n}\n\n.item-name {\n  color: $green;\n  font-weight: bold;\n  flex: 0 1 auto;\n  padding: 0 1rem;\n}\n\n.item-amount {\n  color: $green;\n  flex: 0 1 auto;\n  margin: 0 auto;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CarbList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CarbList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CarbList.vue?vue&type=template&id=7ff81340&scoped=true&\"\nimport script from \"./CarbList.vue?vue&type=script&lang=js&\"\nexport * from \"./CarbList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CarbList.vue?vue&type=style&index=0&id=7ff81340&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7ff81340\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"view-container\">\n    <h1>Carb Calculator</h1>\n    <div class=\"selectgroup\">\n      <input\n        v-if=\"!customCarb\"\n        id=\"searchTerm\"\n        type=\"text\"\n        placeholder=\"Enter a search term\"\n        :value=\"searchTerm\"\n        @input=\"search\"\n      />\n      <DropdownInput\n        v-if=\"!customCarb\"\n        id=\"selectedCategoryName\"\n        :value=\"selectedCategoryName\"\n        empty-string=\"Select a Category\"\n        :list=\"categoriesList\"\n        @change=\"selectedCategoryNameChange\"\n      />\n      <DropdownInput\n        v-if=\"selectedCategoryName\"\n        id=\"selectedCarbName\"\n        :value=\"selectedCarbName\"\n        empty-string=\"Select a Carb\"\n        :list=\"carbsList\"\n        @change=\"selectedCarbNameChange\"\n      />\n      <DropdownInput\n        v-if=\"selectedCarbName\"\n        id=\"selectedAmountName\"\n        :value=\"selectedAmountName\"\n        empty-string=\"Select an Amount\"\n        :list=\"amountsList\"\n        @change=\"selectedAmountNameChange\"\n      />\n      <input\n        v-if=\"customCarb\"\n        v-model=\"customCarbName\"\n        type=\"text\"\n        placeholder=\"Enter custom name (optional)\"\n      />\n      <input\n        v-if=\"!selectedCategoryName\"\n        v-model=\"customCarb\"\n        type=\"number\"\n        placeholder=\"Or enter custom value\"\n      />\n    </div>\n    <button class=\"bg-blue\" @click=\"add\">Add to list</button>\n    <CarbTotal :total=\"total\" />\n    <CarbList />\n  </div>\n</template>\n\n<script>\nimport DropdownInput from \"@/components/DropdownInput\";\nimport CarbTotal from \"@/components/CarbTotal\";\nimport CarbList from \"@/components/CarbList\";\n\nexport default {\n  name: \"CarbCalc\",\n  components: {\n    DropdownInput,\n    CarbTotal,\n    CarbList,\n  },\n  data: function () {\n    return {\n      selectedAmountName: \"\",\n      selectedCarbName: \"\",\n      selectedCategoryName: \"\",\n      customCarb: \"\",\n      customCarbName: \"\",\n    };\n  },\n  computed: {\n    searchTerm: function () {\n      return this.$store.getters[\"carbcalc/searchTerm\"];\n    },\n    categoriesList: function () {\n      return this.$store.getters[\"carbcalc/categoriesList\"];\n    },\n    selectedCategory: function () {\n      const subCategories = this.categoriesList.reduce(\n        (accumulator, current) => accumulator.concat(current.subcategories),\n        []\n      );\n\n      return subCategories.find(\n        (category) => category.name === this.$data.selectedCategoryName\n      );\n    },\n    carbsList: function () {\n      const selectedCategory = this.selectedCategory;\n\n      if (selectedCategory) {\n        return selectedCategory.carbs;\n      }\n\n      return [];\n    },\n    selectedCarb: function () {\n      return this.carbsList.find(\n        (carb) => carb.name === this.$data.selectedCarbName\n      );\n    },\n    amountsList: function () {\n      const selectedCarb = this.selectedCarb;\n\n      if (selectedCarb) {\n        return selectedCarb.amounts;\n      }\n\n      return [];\n    },\n    selectedAmount: function () {\n      return this.amountsList.find(\n        (amount) => amount.name === this.$data.selectedAmountName\n      );\n    },\n    carbUnit: function () {\n      return this.$store.getters[\"settings/carbUnit\"];\n    },\n    total: function () {\n      return this.$store.getters[\"carbcalc/total\"];\n    },\n    items: function () {\n      return this.$store.state.carbcalc.selectedItems;\n    },\n  },\n  methods: {\n    add: function () {\n      let amount = this.$data.customCarb\n          ? this.$data.customCarb + this.carbUnit.name\n          : \"\",\n        amountMultiplier = this.carbUnit.value,\n        carbs = this.$data.customCarb,\n        subcategory = \"\",\n        name = this.$data.customCarbName\n          ? this.$data.customCarbName\n          : \"Custom Entry\";\n\n      if (this.selectedAmount) {\n        amount = this.selectedAmount.name;\n        amountMultiplier = this.selectedAmount.value;\n        subcategory = this.selectedCategory.name;\n        name = this.selectedCarb.name;\n        carbs = this.selectedCarb.carb;\n      }\n\n      const item = {\n        amount,\n        amountMultiplier,\n        carbs,\n        subcategory,\n        name,\n      };\n\n      if (amount) {\n        this.$store.commit(\"carbcalc/addItem\", item);\n      }\n    },\n    selectedCategoryNameChange: function (value) {\n      this.selectedCategoryName = value;\n      this.$data.selectedCarbName = \"\";\n      this.selectedCarbNameChange(\"\");\n    },\n    selectedCarbNameChange: function (value) {\n      this.$data.selectedCarbName = value;\n      this.selectedAmountNameChange(\"\");\n    },\n    selectedAmountNameChange: function (value) {\n      this.$data.selectedAmountName = value;\n    },\n    search: function ($event) {\n      this.$store.commit(\"carbcalc/search\", $event.target.value);\n      this.selectedCategoryNameChange(\"\");\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\nbutton {\n  display: block;\n  margin: 0 auto;\n}\n\n.selectgroup {\n  background: #fff;\n  padding: 0 0.5rem 0.5rem;\n  margin: 1rem auto;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CarbCalc.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./CarbCalc.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./CarbCalc.vue?vue&type=template&id=6dc9b71f&scoped=true&\"\nimport script from \"./CarbCalc.vue?vue&type=script&lang=js&\"\nexport * from \"./CarbCalc.vue?vue&type=script&lang=js&\"\nimport style0 from \"./CarbCalc.vue?vue&type=style&index=0&id=6dc9b71f&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6dc9b71f\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"view-container\"},[_c('h1',[_vm._v(\"Dosage Calculator\")]),_c('NumberInput',{attrs:{\"id\":\"glucose\",\"title\":\"Blood Glucose\",\"color\":\"blue\",\"unit\":_vm.BGUnit.name,\"step\":0.1,\"value\":_vm.glucose},on:{\"input\":_vm.updateNumberInput}}),_c('NumberInput',{attrs:{\"id\":\"carbs\",\"title\":\"Carbohydrates\",\"color\":\"green\",\"unit\":_vm.carbUnit.name,\"step\":1,\"value\":_vm.carbs},on:{\"input\":_vm.updateNumberInput}}),_c('DosageResults',{attrs:{\"carb-ratio\":_vm.carbRatio,\"target\":_vm.target,\"correction-result\":_vm.correctionResult,\"ratio-result\":_vm.ratioResult,\"result-total\":_vm.resultTotal}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('label',{class:'text-' + _vm.color,attrs:{\"for\":\"this.id\"}},[_vm._v(_vm._s(_vm.title))]),_c('div',{staticClass:\"input-wrapper\"},[_c('input',{attrs:{\"id\":\"this.id\",\"type\":\"number\",\"step\":_vm.step},domProps:{\"value\":_vm.computedValue},on:{\"input\":_vm.input}}),_c('p',{staticClass:\"unit\",domProps:{\"innerHTML\":_vm._s(_vm.unit)}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container\">\n    <label :class=\"'text-' + color\" for=\"this.id\">{{ title }}</label>\n    <div class=\"input-wrapper\">\n      <input\n        id=\"this.id\"\n        type=\"number\"\n        :step=\"step\"\n        :value=\"computedValue\"\n        @input=\"input\"\n      />\n      <!-- eslint-disable-next-line vue/no-v-html -->\n      <p class=\"unit\" v-html=\"unit\"></p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"NumberInput\",\n  props: {\n    title: {\n      type: String,\n      default: \"Label\",\n    },\n    color: {\n      default: \"\",\n      validator: function (value) {\n        return value === \"\" || [\"blue\", \"green\", \"pink\"].indexOf(value) !== -1;\n      },\n    },\n    id: {\n      type: String,\n      default: \"\",\n    },\n    value: {\n      type: Number,\n      default: 0,\n    },\n    unit: {\n      type: String,\n      default: \"\",\n    },\n    step: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    computedValue: function () {\n      return Number(this.value.toFixed(1));\n    },\n  },\n  methods: {\n    input: function ($event) {\n      this.$emit(\"input\", {\n        id: this.id,\n        value: $event.target.value,\n      });\n    },\n    clamp: function (value, min, max) {\n      return Math.min(Math.max(min, value), max);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/scss/variables.scss\";\n\n.container {\n  background: #fff;\n  padding: 0.5rem;\n  margin: 1rem auto;\n}\n\n.input-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.unit {\n  font-weight: bold;\n  margin: 0.5rem 0 0 0.5rem;\n  white-space: nowrap;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NumberInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NumberInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NumberInput.vue?vue&type=template&id=23836e37&scoped=true&\"\nimport script from \"./NumberInput.vue?vue&type=script&lang=js&\"\nexport * from \"./NumberInput.vue?vue&type=script&lang=js&\"\nimport style0 from \"./NumberInput.vue?vue&type=style&index=0&id=23836e37&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"23836e37\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('h2',{staticClass:\"text-pink\"},[_vm._v(\"Insulin Dose\")]),_c('DosageResult',{attrs:{\"title\":\"Carb Coverage\",\"color\":\"green\",\"value\":_vm.ratioResult,\"unit\":\"IU\",\"ratio\":_vm.carbRatio.view}}),_c('DosageResult',{attrs:{\"title\":\"Correctional\",\"color\":\"blue\",\"value\":_vm.correctionResult,\"unit\":\"IU\",\"target\":_vm.target}}),_c('DosageResult',{attrs:{\"title\":\"Total\",\"color\":\"pink\",\"value\":_vm.resultTotal,\"unit\":\"IU\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrapper\"},[_c('p',{class:'title ' + 'text-' + _vm.color},[_vm._v(\" \"+_vm._s(_vm.title)+\" \"),(_vm.ratio)?_c('span',[_vm._v(\"(Ratio \"+_vm._s(_vm.ratio)+\")\")]):_vm._e(),(_vm.target)?_c('span',[_vm._v(\"(Target \"+_vm._s(_vm.target)+\")\")]):_vm._e()]),_c('p',{staticClass:\"result\"},[_c('span',{class:'stat ' + 'text-' + _vm.color},[_vm._v(_vm._s(_vm.returnValue))]),_c('span',{staticClass:\"unit\"},[_vm._v(_vm._s(_vm.unit))])]),_c('small',[_vm._v(_vm._s(_vm.rounded)+\" (rounded)\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"wrapper\">\n    <p :class=\"'title ' + 'text-' + color\">\n      {{ title }}\n      <span v-if=\"ratio\">(Ratio {{ ratio }})</span>\n      <span v-if=\"target\">(Target {{ target }})</span>\n    </p>\n    <p class=\"result\">\n      <span :class=\"'stat ' + 'text-' + color\">{{ returnValue }}</span>\n      <span class=\"unit\">{{ unit }}</span>\n    </p>\n    <small>{{ rounded }} (rounded)</small>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"DosageResult\",\n  props: {\n    title: {\n      type: String,\n      default: \"Total\",\n    },\n    color: {\n      default: \"blue\",\n      validator: function (value) {\n        return [\"blue\", \"green\", \"pink\"].indexOf(value) !== -1;\n      },\n    },\n    value: {\n      type: Number,\n      default: 0,\n    },\n    unit: {\n      type: String,\n      default: \"IU\",\n    },\n    ratio: {\n      default: \"\",\n      validator: function (value) {\n        return value === \"\" || /\\d:\\d/.test(value);\n      },\n    },\n    target: {\n      type: Number,\n      default: 0,\n    },\n  },\n  computed: {\n    returnValue: function () {\n      return Math.max(0, this.value);\n    },\n    rounded: function () {\n      return Math.round(this.value);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.wrapper {\n  text-align: left;\n}\n\n.title {\n  margin-bottom: 0.25em;\n}\n\n.result {\n  margin: 0;\n}\n\n.stat {\n  font-size: 3em;\n  font-weight: bold;\n}\n\n.unit {\n  font-weight: bold;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DosageResult.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DosageResult.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DosageResult.vue?vue&type=template&id=12f922aa&scoped=true&\"\nimport script from \"./DosageResult.vue?vue&type=script&lang=js&\"\nexport * from \"./DosageResult.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DosageResult.vue?vue&type=style&index=0&id=12f922aa&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"12f922aa\",\n  null\n  \n)\n\nexport default component.exports","/**\n * Class representing a ratio of insulin to carbohydrates\n */\nexport default class carbRatio {\n  constructor(insulin, carb) {\n    this.insulin = insulin;\n    this.carbs = carb;\n    this.value = carb / insulin;\n    this.view = insulin + \":\" + carb;\n  }\n\n  simplify() {\n    let numerator = this.insulin;\n    let denominator = this.carbs;\n\n    for (let i = numerator; i > 0; i--) {\n      if (!(numerator % i) && !(denominator % i)) {\n        numerator = numerator / i;\n        denominator = denominator / i;\n      }\n    }\n\n    this.insulin = numerator;\n    this.carbs = denominator;\n  }\n\n  convert(previousCarbUnitValue, newCarbUnitValue) {\n    let carbs = this.carbs;\n\n    if (previousCarbUnitValue === 1) {\n      carbs = this.carbs / newCarbUnitValue;\n    } else {\n      carbs = (this.carbs * previousCarbUnitValue) / newCarbUnitValue;\n    }\n\n    this.carbs = carbs;\n\n    return this;\n  }\n}\n","<template>\n  <div class=\"container\">\n    <h2 class=\"text-pink\">Insulin Dose</h2>\n    <DosageResult\n      title=\"Carb Coverage\"\n      color=\"green\"\n      :value=\"ratioResult\"\n      unit=\"IU\"\n      :ratio=\"carbRatio.view\"\n    />\n    <DosageResult\n      title=\"Correctional\"\n      color=\"blue\"\n      :value=\"correctionResult\"\n      unit=\"IU\"\n      :target=\"target\"\n    />\n    <DosageResult title=\"Total\" color=\"pink\" :value=\"resultTotal\" unit=\"IU\" />\n  </div>\n</template>\n\n<script>\nimport DosageResult from \"../components/DosageResult\";\nimport CarbRatio from \"../classes/CarbRatio.js\";\n\nexport default {\n  name: \"DosageResults\",\n  components: {\n    DosageResult,\n  },\n  props: {\n    carbRatio: CarbRatio,\n    target: {\n      type: Number,\n      default: 0,\n    },\n    correctionResult: { type: Number, default: 0 },\n    ratioResult: {\n      type: Number,\n      default: 0,\n    },\n    resultTotal: {\n      type: Number,\n      default: 0,\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\nh2 {\n  font-size: 1.2rem;\n  text-align: left;\n  margin: 0;\n}\n\n.container {\n  background: #fff;\n  padding: 0.5rem;\n  margin: 1rem auto;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DosageResults.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DosageResults.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DosageResults.vue?vue&type=template&id=0c11f7c7&scoped=true&\"\nimport script from \"./DosageResults.vue?vue&type=script&lang=js&\"\nexport * from \"./DosageResults.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DosageResults.vue?vue&type=style&index=0&id=0c11f7c7&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0c11f7c7\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"view-container\">\n    <h1>Dosage Calculator</h1>\n    <NumberInput\n      id=\"glucose\"\n      title=\"Blood Glucose\"\n      color=\"blue\"\n      :unit=\"BGUnit.name\"\n      :step=\"0.1\"\n      :value=\"glucose\"\n      @input=\"updateNumberInput\"\n    />\n    <NumberInput\n      id=\"carbs\"\n      title=\"Carbohydrates\"\n      color=\"green\"\n      :unit=\"carbUnit.name\"\n      :step=\"1\"\n      :value=\"carbs\"\n      @input=\"updateNumberInput\"\n    />\n    <DosageResults\n      :carb-ratio=\"carbRatio\"\n      :target=\"target\"\n      :correction-result=\"correctionResult\"\n      :ratio-result=\"ratioResult\"\n      :result-total=\"resultTotal\"\n    />\n  </div>\n</template>\n\n<script>\nimport NumberInput from \"../components/NumberInput\";\nimport DosageResults from \"../components/DosageResults\";\nimport { createNamespacedHelpers } from \"vuex\";\n\nconst { mapState, mapGetters, mapActions } =\n  createNamespacedHelpers(\"dosecalc\");\n\nexport default {\n  name: \"DoseCalc\",\n  components: {\n    NumberInput,\n    DosageResults,\n  },\n  data: function () {\n    return {\n      carbRatio: this.$store.state.settings.carbRatio,\n      target: this.$store.state.settings.target,\n    };\n  },\n  computed: {\n    carbUnit: function () {\n      return this.$store.getters[\"settings/carbUnit\"];\n    },\n    BGUnit: function () {\n      return this.$store.getters[\"settings/BGUnit\"];\n    },\n    ...mapState([\"glucose\", \"carbs\"]),\n    ...mapGetters([\"ratioResult\", \"correctionResult\", \"resultTotal\"]),\n  },\n  methods: {\n    ...mapActions([\"updateNumberInput\"]),\n  },\n};\n</script>\n\n<style></style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DoseCalc.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DoseCalc.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DoseCalc.vue?vue&type=template&id=28939e14&\"\nimport script from \"./DoseCalc.vue?vue&type=script&lang=js&\"\nexport * from \"./DoseCalc.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"view-container settings\"},[_c('h1',[_vm._v(\"Settings\")]),_c('RatioInput',{attrs:{\"id\":\"carbRatio\",\"title\":\"Insulin to Carb Ratio\",\"step\":1,\"value\":_vm.carbRatio},on:{\"input\":_vm.updateRatioInput,\"blur\":function($event){return _vm.carbRatio.simplify()}}}),_c('SelectInput',{attrs:{\"id\":\"carbUnit\",\"title\":\"Carbohydrate Unit\",\"options\":_vm.carbUnitOptions,\"value\":_vm.carbUnitIndex},on:{\"change\":_vm.updateSelectInput}}),_c('SelectInput',{attrs:{\"id\":\"BGUnit\",\"title\":\"Blood Glucose Unit\",\"options\":_vm.BGUnitOptions,\"value\":_vm.BGUnitIndex},on:{\"change\":_vm.updateSelectInput}}),_c('NumberInput',{attrs:{\"id\":\"target\",\"title\":\"Target Value\",\"unit\":_vm.BGUnit.name,\"step\":0.1,\"value\":_vm.target},on:{\"input\":_vm.updateNumberInput}}),_c('NumberInput',{attrs:{\"id\":\"correctionFactor\",\"title\":\"Correction Factor\",\"unit\":_vm.correctionNumber + ' &#58; TDI',\"step\":1,\"value\":_vm.correctionFactor},on:{\"input\":_vm.updateNumberInput}}),_c('SubmitButton',{attrs:{\"title\":\"Save Settings\",\"saved\":_vm.saved},on:{\"click\":_vm.saveSettings}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('fieldset',[_c('legend',{class:'text-' + _vm.color},[_vm._v(\" \"+_vm._s(_vm.title)+\" \")]),_c('div',{staticClass:\"input-wrapper\"},[_c('input',{ref:\"leftInput\",attrs:{\"id\":\"leftInput\",\"aria-label\":\"Left Ratio\",\"type\":\"number\",\"step\":_vm.step},domProps:{\"value\":_vm.left},on:{\"input\":_vm.input,\"blur\":_vm.blur}}),_c('span',{staticClass:\"colon\"},[_vm._v(\":\")]),_c('input',{ref:\"rightInput\",attrs:{\"id\":\"rightInput\",\"aria-label\":\"Right Ratio\",\"type\":\"number\",\"step\":_vm.step},domProps:{\"value\":_vm.right},on:{\"input\":_vm.input,\"blur\":_vm.blur}})])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container\">\n    <fieldset>\n      <legend :class=\"'text-' + color\">\n        {{ title }}\n      </legend>\n      <div class=\"input-wrapper\">\n        <input\n          id=\"leftInput\"\n          ref=\"leftInput\"\n          aria-label=\"Left Ratio\"\n          type=\"number\"\n          :step=\"step\"\n          :value=\"left\"\n          @input=\"input\"\n          @blur=\"blur\"\n        />\n        <span class=\"colon\">&#58;</span>\n        <input\n          id=\"rightInput\"\n          ref=\"rightInput\"\n          aria-label=\"Right Ratio\"\n          type=\"number\"\n          :step=\"step\"\n          :value=\"right\"\n          @input=\"input\"\n          @blur=\"blur\"\n        />\n      </div>\n    </fieldset>\n  </div>\n</template>\n\n<script>\nimport CarbRatio from \"../classes/CarbRatio\";\nexport default {\n  name: \"RatioInput\",\n  props: {\n    title: {\n      type: String,\n      default: \"Label\",\n    },\n    color: {\n      default: \"\",\n      validator: function (value) {\n        return value === \"\" || [\"blue\", \"green\", \"pink\"].indexOf(value) !== -1;\n      },\n    },\n    id: {\n      type: String,\n      default: \"\",\n    },\n    step: {\n      type: Number,\n      default: 1,\n    },\n    value: CarbRatio,\n  },\n  computed: {\n    left: function () {\n      return this.value.insulin;\n    },\n    right: function () {\n      return this.value.carbs;\n    },\n  },\n  methods: {\n    input: function () {\n      const leftValue = this.$refs.leftInput.value,\n        rightValue = this.$refs.rightInput.value;\n\n      const ratio = new CarbRatio(leftValue, rightValue);\n\n      this.$emit(\"input\", {\n        id: this.id,\n        value: ratio,\n      });\n    },\n    blur: function () {\n      this.$emit(\"blur\");\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/scss/variables.scss\";\n\n.container {\n  background: #fff;\n  padding: 0.5rem;\n  margin: 1rem auto;\n}\n\n.input-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.colon {\n  font-weight: bold;\n  margin: 0.5rem 0.5rem 0 0.5rem;\n  white-space: nowrap;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RatioInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./RatioInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RatioInput.vue?vue&type=template&id=7b08ddd0&scoped=true&\"\nimport script from \"./RatioInput.vue?vue&type=script&lang=js&\"\nexport * from \"./RatioInput.vue?vue&type=script&lang=js&\"\nimport style0 from \"./RatioInput.vue?vue&type=style&index=0&id=7b08ddd0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7b08ddd0\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('label',{class:_vm.color ? 'text-' + _vm.color : '',attrs:{\"for\":\"this.id\"}},[_vm._v(_vm._s(_vm.title))]),_c('div',{staticClass:\"input-wrapper\"},[_c('select',{attrs:{\"id\":\"this.id\"},domProps:{\"value\":_vm.value},on:{\"change\":_vm.change}},_vm._l((_vm.options),function(option,index){return _c('option',{key:option.name,domProps:{\"value\":index}},[_vm._v(\" \"+_vm._s(option.name)+\" \")])}),0)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container\">\n    <label :class=\"color ? 'text-' + color : ''\" for=\"this.id\">{{\n      title\n    }}</label>\n    <div class=\"input-wrapper\">\n      <select id=\"this.id\" :value=\"value\" @change=\"change\">\n        <option\n          v-for=\"(option, index) in options\"\n          :key=\"option.name\"\n          :value=\"index\"\n        >\n          {{ option.name }}\n        </option>\n      </select>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"SelectInput\",\n  model: {\n    prop: \"value\",\n    event: \"change\",\n  },\n  props: {\n    title: { type: String, default: \"Label\" },\n    color: {\n      default: \"\",\n      validator: function (value) {\n        return value === \"\" || [\"blue\", \"green\", \"pink\"].indexOf(value) !== -1;\n      },\n    },\n    id: { type: String, default: \"\" },\n    options: { type: Array, default: () => [] },\n  },\n  data: function () {\n    return {\n      value: this.$attrs.value,\n    };\n  },\n  methods: {\n    change: function ($event) {\n      this.$emit(\"change\", {\n        id: this.id,\n        value: $event.target.value,\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/scss/variables.scss\";\n\n.container {\n  background: #fff;\n  padding: 0.5rem;\n  margin: 1rem auto;\n}\n\n.input-wrapper {\n  display: flex;\n  align-items: center;\n}\n\n.unit {\n  font-weight: bold;\n  margin: 0.5rem 0 0 0.5rem;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SelectInput.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SelectInput.vue?vue&type=template&id=570744c8&scoped=true&\"\nimport script from \"./SelectInput.vue?vue&type=script&lang=js&\"\nexport * from \"./SelectInput.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SelectInput.vue?vue&type=style&index=0&id=570744c8&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"570744c8\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('button',{ref:\"button\",staticClass:\"bg-green\",on:{\"click\":_vm.click}},[_vm._v(_vm._s(_vm.title))]),(_vm.saved)?_c('p',[_vm._v(\"Your settings have been saved!\")]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <button ref=\"button\" class=\"bg-green\" @click=\"click\">{{ title }}</button>\n    <p v-if=\"saved\">Your settings have been saved!</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"SubmitButton\",\n  props: {\n    title: {\n      type: String,\n      default: \"Submit\",\n    },\n    saved: Boolean,\n  },\n  methods: {\n    click: function () {\n      this.$emit(\"click\");\n      this.$refs.button.blur();\n    },\n  },\n};\n</script>\n\n<style></style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SubmitButton.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SubmitButton.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SubmitButton.vue?vue&type=template&id=91ade978&\"\nimport script from \"./SubmitButton.vue?vue&type=script&lang=js&\"\nexport * from \"./SubmitButton.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"view-container settings\">\n    <h1>Settings</h1>\n    <RatioInput\n      id=\"carbRatio\"\n      title=\"Insulin to Carb Ratio\"\n      :step=\"1\"\n      :value=\"carbRatio\"\n      @input=\"updateRatioInput\"\n      @blur=\"carbRatio.simplify()\"\n    />\n    <SelectInput\n      id=\"carbUnit\"\n      title=\"Carbohydrate Unit\"\n      :options=\"carbUnitOptions\"\n      :value=\"carbUnitIndex\"\n      @change=\"updateSelectInput\"\n    />\n    <SelectInput\n      id=\"BGUnit\"\n      title=\"Blood Glucose Unit\"\n      :options=\"BGUnitOptions\"\n      :value=\"BGUnitIndex\"\n      @change=\"updateSelectInput\"\n    />\n    <NumberInput\n      id=\"target\"\n      title=\"Target Value\"\n      :unit=\"BGUnit.name\"\n      :step=\"0.1\"\n      :value=\"target\"\n      @input=\"updateNumberInput\"\n    />\n    <NumberInput\n      id=\"correctionFactor\"\n      title=\"Correction Factor\"\n      :unit=\"correctionNumber + ' &#58; TDI'\"\n      :step=\"1\"\n      :value=\"correctionFactor\"\n      @input=\"updateNumberInput\"\n    />\n    <SubmitButton title=\"Save Settings\" :saved=\"saved\" @click=\"saveSettings\" />\n  </div>\n</template>\n\n<script>\nimport RatioInput from \"../components/RatioInput.vue\";\nimport NumberInput from \"../components/NumberInput.vue\";\nimport SelectInput from \"../components/SelectInput.vue\";\nimport SubmitButton from \"../components/SubmitButton.vue\";\nimport { createNamespacedHelpers } from \"vuex\";\n\nconst { mapState, mapGetters, mapActions } =\n  createNamespacedHelpers(\"settings\");\n\nexport default {\n  name: \"AppSettings\",\n  components: {\n    RatioInput,\n    SelectInput,\n    NumberInput,\n    SubmitButton,\n  },\n  computed: {\n    ...mapState([\n      \"carbRatio\",\n      \"carbUnitIndex\",\n      \"carbUnitOptions\",\n      \"BGUnitIndex\",\n      \"BGUnitOptions\",\n      \"target\",\n      \"correctionFactor\",\n      \"correctionNumber\",\n      \"saved\",\n    ]),\n    ...mapGetters([\"BGUnit\"]),\n  },\n  methods: {\n    ...mapActions([\n      \"updateRatioInput\",\n      \"updateNumberInput\",\n      \"updateSelectInput\",\n      \"saveSettings\",\n    ]),\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=6b19f61e&scoped=true&\"\nimport script from \"./Settings.vue?vue&type=script&lang=js&\"\nexport * from \"./Settings.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b19f61e\",\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport Router from \"vue-router\";\nimport AppHome from \"./views/AppHome.vue\";\nimport CarbCalc from \"./views/CarbCalc.vue\";\nimport DoseCalc from \"./views/DoseCalc.vue\";\nimport Settings from \"./views/Settings.vue\";\n\nVue.use(Router);\n\nexport default new Router({\n  routes: [\n    {\n      path: \"/\",\n      name: \"Home\",\n      component: AppHome,\n    },\n    {\n      path: \"/carbcalc\",\n      name: \"CarbCalc\",\n      component: CarbCalc,\n    },\n    {\n      path: \"/dosecalc\",\n      name: \"DoseCalc\",\n      component: DoseCalc,\n    },\n    {\n      path: \"/settings\",\n      name: \"Settings\",\n      component: Settings,\n    },\n    // {\n    //   path: \"/about\",\n    //   name: \"about\",\n    //   // route level code-splitting\n    //   // this generates a separate chunk (about.[hash].js) for this route\n    //   // which is lazy-loaded when the route is visited.\n    //   component: () =>\n    //     import(/* webpackChunkName: \"about\" */ \"./views/About.vue\")\n    // }\n  ],\n});\n","export default [\n  /** Bakery Products */\n  {\n    name: \"Bagels\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"white, plain, toasted\",\n        carb: 49.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bagel (3.3 x 9.6cm diameter)\", value: 0.889 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Biscuits\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"Afghan\",\n        variant: \"\",\n        carb: 64.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (1.3 x 5.5cm diameter)\", value: 0.176 },\n        ],\n      },\n      {\n        name: \"Arrowroot\",\n        variant: \"\",\n        carb: 76.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit\", value: 0.08 },\n        ],\n      },\n      {\n        name: \"Chocolate Chip Fudge, Farmbake\",\n        variant: \"Arnott's\",\n        carb: 68.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (1.0 x 5.8cm diameter)\", value: 0.127 },\n        ],\n      },\n      {\n        name: \"Chocolate Chip\",\n        variant: \"Cookie Time\",\n        carb: 61.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (1.7 x 11.0cm diameter)\", value: 0.961 },\n        ],\n      },\n      {\n        name: \"Classic Dark, Tim Tam\",\n        variant: \"Arnott's\",\n        carb: 63.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (6.2 x 3.2 x 1.3cm)\", value: 0.19 },\n        ],\n      },\n      {\n        name: \"Dark Chocolate, Digestive\",\n        variant: \"Arnott's\",\n        carb: 61.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (0.7 x 7.5cm diameter)\", value: 0.18 },\n        ],\n      },\n      {\n        name: \"Dark Chocolate, Wheaten\",\n        variant: \"Griffin's\",\n        carb: 55.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (0.5 x 5.4cm diameter)\", value: 0.103 },\n        ],\n      },\n      {\n        name: \"Double Deck Dark Chocolate Delight, Chit Chat\",\n        variant: \"Griffin's\",\n        carb: 65,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (6.5 x 2.9 x 1.3cm)\", value: 0.191 },\n        ],\n      },\n      {\n        name: \"Gingernuts\",\n        variant: \"\",\n        carb: 77.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (0.8 x 5.2cm diameter)\", value: 0.09 },\n          { name: \"1 biscuit (0.9 x 5.4cm diameter)\", value: 0.13 },\n        ],\n      },\n      {\n        name: \"MallowPuffs\",\n        variant: \"Griffin's\",\n        carb: 63.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (2.7 x 4.5cm diameter)\", value: 0.215 },\n        ],\n      },\n      {\n        name: \"Malt\",\n        variant: \"\",\n        carb: 71.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (6.6 x 4.4 x 0.6cm)\", value: 0.075 },\n        ],\n      },\n      {\n        name: \"Milk Chocolate, Digestive\",\n        variant: \"Arnott's\",\n        carb: 65.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (0.7 x 7.5cm diameter)\", value: 0.176 },\n        ],\n      },\n      {\n        name: \"White & Dark Chocolate, Farmbake\",\n        carb: 70,\n        variant: \"Arnott's\",\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (1.0 x 5.2cm diameter)\", value: 0.126 },\n        ],\n      },\n      {\n        name: \"Milk Chocolate, Double Chocolate, Cookies\",\n        variant: \"Ernest Adams\",\n        carb: 66.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (1.3 x 5.3cm diameter)\", value: 13.3 },\n        ],\n      },\n      {\n        name: \"Milk Chocolate, Double Coat, Tim Tam\",\n        variant: \"Arnott's\",\n        carb: 68.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (6.2 x 3.3 x 1.5cm)\", value: 0.228 },\n        ],\n      },\n      {\n        name: \"Milk Chocolate, Original, Tim Tam\",\n        variant: \"Arnott's\",\n        carb: 68.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (6.2 x 3.2 x 1.3cm)\", value: 0.185 },\n        ],\n      },\n      {\n        name: \"Milk Chocolate, Wheaten\",\n        variant: \"Griffin's\",\n        carb: 60,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (0.8 x 5.5cm diameter)\", value: 0.108 },\n        ],\n      },\n      {\n        name: \"Peanut Brownie\",\n        variant: \"\",\n        carb: 64.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (1.2 x 5.4cm diameter)\", value: 0.12 },\n          { name: \"1 biscuit (1.6 x 5.5cm diameter)\", value: 0.22 },\n        ],\n      },\n      {\n        name: \"Shortbread\",\n        variant: \"\",\n        carb: 59.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (1.1 x 5.0cm diameter)\", value: 0.125 },\n          { name: \"1 biscuit (1.6 x 5.3cm diameter)\", value: 0.205 },\n        ],\n      },\n      {\n        name: \"Wafer, Raspberry, Cream Filled\",\n        variant: \"\",\n        carb: 71,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (2.6 x 8.0 x 1.0cm)\", value: 0.09 },\n        ],\n      },\n      {\n        name: \"With coconut, Krispie\",\n        variant: \"Griffin's\",\n        carb: 65.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (0.6 x 6.0cm diameter)\", value: 0.088 },\n        ],\n      },\n      {\n        name: \"With cream filling\",\n        variant: \"\",\n        carb: 66,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit\", value: 0.15 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Bread Rolls or buns\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"White, Fortified\",\n        variant: \"\",\n        carb: 45.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bun medium (8.1cm diameter)\", value: 0.515 },\n          { name: \"1 bun large (11.6cm diameter)\", value: 0.624 },\n          { name: \"1 long roll (14.1 x 5.5cm diameter)\", value: 0.665 },\n        ],\n      },\n      {\n        name: \"Wholemeal, Fortified\",\n        variant: \"\",\n        carb: 37.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bun medium (8.2cm diameter)\", value: 0.544 },\n          { name: \"1 bun large (10.4cm diameter)\", value: 0.777 },\n          { name: \"1 long roll (9.1 x 7.6cm diameter)\", value: 0.628 },\n        ],\n      },\n      {\n        name: \"Currant, Commercial\",\n        variant: \"\",\n        carb: 57.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (11.6 x 9.2 x 1.0cm)\", value: 0.27 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Bread\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"Grain & Seed Toast, Fortified vitamins E & Folate\",\n        variant: \"Tip Top\",\n        carb: 35,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (10.9 x 11.1 x 1.2cm)\", value: 0.378 },\n        ],\n      },\n      {\n        name: \"Gluten Free Ancient Grain & Seeds\",\n        variant: \"Burgen\",\n        carb: 33,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (8.7 x 8.6 x 1.1cm)\", value: 0.448 },\n        ],\n      },\n      {\n        name: \"Gluten Free White,\",\n        variant: \"Burgen\",\n        carb: 44.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (8.9 x 8.6 x 1.1cm)\", value: 0.411 },\n        ],\n      },\n      {\n        name: \"Gluten free 6 Seed\",\n        variant: \"Vogel's\",\n        carb: 30.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (9.8 x 9.7 x 1.3cm)\", value: 0.357 },\n        ],\n      },\n      {\n        name: \"Mixed Grain & Toasted Sesame Toast\",\n        variant: \"Vogel's\",\n        carb: 30.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice toast (9.5 x 10.3 x 1.2cm)\", value: 0.425 },\n        ],\n      },\n      {\n        name: \"Nature's Grain, fortified\",\n        variant: \"River Mill\",\n        carb: 41.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (10.5 x 11.9 x 1.2cm)\", value: 0.333 },\n        ],\n      },\n      {\n        name: \"Salba Traditional European Rye,\",\n        variant: \"Yarrows\",\n        carb: 32,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (10.7 x 11.5 x 1.6cm)\", value: 0.465 },\n        ],\n      },\n      {\n        name: \"Salba Traditional Wholegrain,\",\n        variant: \"Yarrows\",\n        carb: 32.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (10.7 x 11.7 x 1.6cm)\", value: 0.149 },\n        ],\n      },\n      {\n        name: \"Soy & Linseed\",\n        variant: \"Vogel's\",\n        carb: 30.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (9.4 x 9.4 x 1.1cm)\", value: 0.37 },\n        ],\n      },\n      {\n        name: \"Soy & Linseed\",\n        variant: \"Burgen\",\n        carb: 30.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (9.4 x 9.4 x 1.1cm)\", value: 0.37 },\n        ],\n      },\n      {\n        name: \"Station Seed & Grain,\",\n        variant: \"Mackenzie\",\n        carb: 31,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (9.2 x 14.8 x 1.8cm)\", value: 18.2 },\n        ],\n      },\n      {\n        name: \"Swiss Bake Grains Plus\",\n        variant: \"Molenberg\",\n        carb: 35.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice toast (10.5 x 11.3 x 1.2cm)\", value: 0.377 },\n        ],\n      },\n      {\n        name: \"Swiss Bake Grains Plus\",\n        variant: \"Quality Bakers\",\n        carb: 35.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice toast (10.5 x 11.3 x 1.2cm)\", value: 0.377 },\n        ],\n      },\n      {\n        name: \"Tuscan Mixed Grain\",\n        variant: \"Freya's\",\n        carb: 39.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (9.2 x 12.3 x 1.3cm)\", value: 0.408 },\n        ],\n      },\n      {\n        name: \"Chapatti or Roti, Wholemeal\",\n        variant: \"Restaurant\",\n        carb: 42.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 chapatti or roti (0.4 x 20cm diameter)\", value: 0.988 },\n        ],\n      },\n      {\n        name: \"Gluten free, Mixed Grain, Sliced, Prepacked\",\n        variant: \"\",\n        carb: 39.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (8.6 x 7.8 x 1.1cm)\", value: 0.425 },\n        ],\n      },\n      {\n        name: \"Gluten free, White, Sliced & Unsliced, Prepacked\",\n        variant: \"\",\n        carb: 43.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (8.8 x 7.7 x 1.0cm)\", value: 0.348 },\n        ],\n      },\n      {\n        name: \"Mixed Grain, Ancient Grains\",\n        variant: \"Vogel's\",\n        carb: 32.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice sandwich (10 x 8.7 x 0.8cm)\", value: 0.347 },\n          { name: \"1 slice toast (10.0 x 9.0 x 1.0cm)\", value: 0.436 },\n        ],\n      },\n      {\n        name: \"Mixed grain, Heavy, Sliced, Prepacked\",\n        variant: \"\",\n        carb: 42.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice sandwich (10.1 x 8.6 x 0.9cm)\", value: 0.373 },\n          { name: \"1 slice toast (10 x 8.9 x 0.9cm)\", value: 0.417 },\n        ],\n      },\n      {\n        name: \"Mixed Grain, Light, Sliced, prepacked\",\n        variant: \"\",\n        carb: 40.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice sandwich (11.4 x 10.3 x 1.1cm)\", value: 0.317 },\n          { name: \"1 slice toast (11.1 x 10.5 x 1.3cm)\", value: 0.383 },\n        ],\n      },\n      {\n        name: \"Naan, White, Plain\",\n        variant: \"Restaurant\",\n        carb: 44.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 naan bread triangle (29 x 20 x 1cm)\", value: 1.45 },\n        ],\n      },\n      {\n        name: \"Pita, White\",\n        variant: \"\",\n        carb: 49.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small pocket (11cm diameter)\", value: 0.48 },\n          { name: \"1 large pocket (15cm diameter)\", value: 0.82 },\n        ],\n      },\n      {\n        name: \"Plain, Panini, prepacked\",\n        variant: \"\",\n        carb: 46.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 panini (2.1 x 9.9 x 17.1)\", value: 0.92 },\n        ],\n      },\n      {\n        name: \"Wheatmeal, Sliced, Prepacked\",\n        variant: \"\",\n        carb: 36.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice sandwich (11.5 x 10.3 x 1.0cm)\", value: 0.305 },\n          { name: \"1 slice toast (11.4 x 10.0 x 1.2cm)\", value: 0.375 },\n        ],\n      },\n      {\n        name: \"White, Sliced, Prepacked\",\n        variant: \"\",\n        carb: 43.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice sandwich (11.2 x 10.8 x 1.0cm)\", value: 0.32 },\n          { name: \"1 slice toast (11.1 x 10.8 x 1.4cm)\", value: 0.385 },\n          { name: \"1 slice thick toast (11.1 x 11.2 x 1.6cm)\", value: 0.465 },\n        ],\n      },\n      {\n        name: \"Wholemeal, Pita\",\n        variant: \"\",\n        carb: 41.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pita (1.1 x 15.7cm diameter)\", value: 0.85 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Buns\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"Currant\",\n        variant: \"\",\n        carb: 49.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bun\", value: 0.8 },\n        ],\n      },\n      {\n        name: \"Iced\",\n        variant: \"\",\n        carb: 63.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bun\", value: 0.8 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Cake\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"Fruitcake\",\n        variant: \"\",\n        carb: 55.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (7.5 x 5.0 x 1.5cm)\", value: 0.4 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Crackers\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"Corn, Cruskits\",\n        variant: \"Arnott's\",\n        carb: 73.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (12 x 5.6 x 0.5cm)\", value: 0.064 },\n        ],\n      },\n      {\n        name: \"Mixed grain, Cruskits, Light\",\n        variant: \"Arnott's\",\n        carb: 65.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (11.8 x 5.7 x 0.4cm)\", value: 0.06 },\n        ],\n      },\n      {\n        name: \"Mixed grain, Litebread, Original Crispbread,\",\n        variant: \"Huntley & Palmers\",\n        carb: 66.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (12 x 5.9 x 0.4cm)\", value: 0.067 },\n        ],\n      },\n      {\n        name: \"Rice, Barbecue flavoured\",\n        variant: \"\",\n        carb: 80.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (4.7cm diameter)\", value: 0.019 },\n        ],\n      },\n      {\n        name: \"Rice, Plain\",\n        variant: \"\",\n        carb: 75.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (4.7cm diameter)\", value: 0.021 },\n        ],\n      },\n      {\n        name: \"Rice, Seaweed flavoured\",\n        variant: \"Sakata\",\n        carb: 72.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (5.0cm diameter)\", value: 0.02 },\n        ],\n      },\n      {\n        name: \"Rye, Crispbread\",\n        variant: \"Ryvita\",\n        carb: 67.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cracker\", value: 0.1 },\n        ],\n      },\n      {\n        name: \"Wheat, Cream Crackers, Reduced Fat\",\n        variant: \"Huntley & Palmers\",\n        carb: 66.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (6.4 x 6.0 x 0.3cm)\", value: 0.79 },\n        ],\n      },\n      {\n        name: \"Wheat, Meal Mates\",\n        variant: \"Griffin's\",\n        carb: 49.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (0.4 x 6.3cm diameter)\", value: 0.58 },\n        ],\n      },\n      {\n        name: \"Wheat, Salada, Light, Original\",\n        variant: \"Arnott's\",\n        carb: 66.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (10 x 8.7 x 0.4cm)\", value: 0.148 },\n        ],\n      },\n      {\n        name: \"Wheat, Snax\",\n        variant: \"Griffin's\",\n        carb: 54.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (0.5 x 5.0cm diameter)\", value: 2 },\n        ],\n      },\n      {\n        name: \"Wheat, Water Cracker\",\n        variant: \"Arnott's\",\n        carb: 73.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit (0.4 x 5.5cm diameter)\", value: 0.032 },\n        ],\n      },\n      {\n        name: \"Wheat, Cheese flavoured\",\n        variant: \"\",\n        carb: 58,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit Cheddar (4.4 x 2.6 x 0.4cm)\", value: 0.023 },\n          { name: \"1 biscuit Cheds (6.9 x 5.3 x 0.5cm)\", value: 0.083 },\n        ],\n      },\n      {\n        name: \"Wheat, Sesame\",\n        variant: \"\",\n        carb: 54.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 biscuit Sesame Wheat (6.0 x 5.9 x 0.5cm)\", value: 0.067 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Garlic Bread\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"Garlic bread, made with butter\",\n        variant: \"La Famiglia, Signature Range\",\n        carb: 41.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice\", value: 0.25 },\n          { name: \"1 loaf (25.4 x 6 x 4.5cm)\", value: 2.228 },\n        ],\n      },\n      {\n        name: \"Garlic bread, made with margarine,\",\n        variant: \"Pams, Mamma Fiorelli's\",\n        carb: 41.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice\", value: 0.25 },\n          { name: \"1 loaf (25.6 x 5.7 x 5.5cm)\", value: 2.18 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Muffins\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"blueberry\",\n        variant: \"\",\n        carb: 45.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 muffin (6.0cm top diameter x 4.0cm height)\", value: 0.6 },\n        ],\n      },\n      {\n        name: \"bran\",\n        variant: \"\",\n        carb: 40.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          {\n            name: \"1 medium muffin (7.5cm top diameter x 6.0cm height)\",\n            value: 1.05,\n          },\n        ],\n      },\n      {\n        name: \"chocolate\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 muffin (6.0cm top diameter x 4.0cm height)\", value: 53.1 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Scones\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"Scone, white, plain\",\n        variant: \"\",\n        carb: 45.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 scone (10.4 x 9.5 x 4.8cm)\", value: 1.261 },\n        ],\n      },\n      {\n        name: \"Scone, white, with cheese\",\n        variant: \"\",\n        carb: 34.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 scone (9.5 x 8.3 x 5.0cm)\", value: 1.393 },\n        ],\n      },\n      {\n        name: \"Scone, white, with dates\",\n        variant: \"\",\n        carb: 47.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 scone (8.8 x 7.1 x 5.0cm)\", value: 0.343 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Other\",\n    category: \"Bakery Products\",\n    carbs: [\n      {\n        name: \"Croissant, Plain\",\n        variant: \"\",\n        carb: 38.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small (7-12cm long)\", value: 0.5 },\n          { name: \"1 large ( >15cm long)\", value: 0.75 },\n        ],\n      },\n      {\n        name: \"Crumpet, White, Toasted\",\n        variant: \"\",\n        carb: 34.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 crumpet round (1.4 x 9.2cm diameter)\", value: 0.485 },\n          { name: \"1 crumpet square (10.9 x 10.5 x 1.5cm)\", value: 0.698 },\n        ],\n      },\n      {\n        name: \"Doughnut, Sugar & Cinnamon\",\n        variant: \"\",\n        carb: 43.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 doughnut (2.5 x 8.5cm diameter)\", value: 0.42 },\n        ],\n      },\n      {\n        name: \"English muffin, Bread-like, Assorted flavours, Toasted\",\n        variant: \"\",\n        carb: 40.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 muffin\", value: 0.8 },\n        ],\n      },\n      {\n        name: \"Pizza base, no topping\",\n        variant: \"\",\n        carb: 48.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece (1/8 of 22.0cm diameter)\", value: 2.01 },\n        ],\n      },\n      {\n        name: \"Stuffing, from chicken, deli cooked\",\n        variant: \"\",\n        carb: 25.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.077 },\n          { name: \"1 cup (250mL)\", value: 0.376 },\n        ],\n      },\n    ],\n  },\n  /** Beverages, Alcoholic */\n  {\n    name: \"Beer\",\n    category: \"Beverages, Alcoholic\",\n    carbs: [\n      {\n        name: \"full-strength (5% alcohol by volume)\",\n        variant: \"\",\n        carb: 0.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (280mL, 1.0 standard drink)\", value: 2.814 },\n          {\n            name: \"1 regular bottle or can (330mL, 1.2 standard drink)\",\n            value: 3.317,\n          },\n          { name: \"1 large can (440mL, 1.6 standard drink)\", value: 4.422 },\n          { name: \"1 large glass (450mL, 1.7 standard drinks)\", value: 4.523 },\n          { name: \"1 large bottle (500mL, 1.8 standard drink)\", value: 5.025 },\n        ],\n      },\n      {\n        name: \"high-strength (>5% alcohol by volume)\",\n        variant: \"\",\n        carb: 0.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (280mL, 1.3 standard drink)\", value: 2.825 },\n          {\n            name: \"1 regular bottle or can (330mL, 1.5 standard drink)\",\n            value: 3.33,\n          },\n          { name: \"1 large can (440mL, 2.0 standard drink)\", value: 4.44 },\n          { name: \"1 large glass (450mL, 2.1 standard drinks)\", value: 4.541 },\n          { name: \"1 large bottle (500mL, 2.3 standard drink)\", value: 5.045 },\n        ],\n      },\n      {\n        name: \"low alcohol\",\n        variant: \"\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (280mL, 0.3 standard drinks)\", value: 2.688 },\n          {\n            name: \"1 regular bottle or can (330mL, 0.3 standard drinks)\",\n            value: 3.168,\n          },\n          { name: \"1 large can (440mL, 0.4 standard drinks)\", value: 4.224 },\n          { name: \"1 large glass (450mL, 0.4 standard drinks)\", value: 4.32 },\n          { name: \"1 large bottle (500mL, 0.5 standard drinks)\", value: 4.8 },\n        ],\n      },\n      {\n        name: \"low-strength (2.5% alcohol by volume)\",\n        variant: \"\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (280mL, 0.6 standard drink)\", value: 2.822 },\n          {\n            name: \"1 regular bottle or can (330mL, 0.7 standard drink)\",\n            value: 3.326,\n          },\n          { name: \"1 large can (440mL, 0.9 standard drink)\", value: 4.435 },\n          { name: \"1 large glass (450mL, 0.9 standard drinks)\", value: 4.536 },\n          { name: \"1 large bottle (500mL, 1.0 standard drink)\", value: 5.04 },\n        ],\n      },\n      {\n        name: \"mid-strength (4% alcohol by volume)\",\n        variant: \"\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (280mL, 0.9 standard drink)\", value: 2.827 },\n          {\n            name: \"1 regular bottle or can (330mL, 1.0 standard drink)\",\n            value: 3.32,\n          },\n          { name: \"1 large can (440mL, 1.3 standard drink)\", value: 4.426 },\n          { name: \"1 large glass (450mL, 1.4 standard drinks)\", value: 4.527 },\n          { name: \"1 large bottle (500mL, 1.5 standard drink)\", value: 5.03 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Cider\",\n    category: \"Beverages, Alcoholic\",\n    carbs: [\n      {\n        name: \"apple, (5% alcohol by volume)\",\n        variant: \"\",\n        carb: 5.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (280mL, 1.1 standard drinks)\", value: 2.836 },\n          {\n            name: \"1 regular bottle (330mL, 1.3 standard drinks)\",\n            value: 3.343,\n          },\n          { name: \"1 large glass (450mL, 1.8 standard drinks)\", value: 4.559 },\n          { name: \"1 large bottle (500mL, 2.0 standard drinks)\", value: 5.065 },\n        ],\n      },\n      {\n        name: \"sweet\",\n        variant: \"\",\n        carb: 2.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (280mL, 1.0 standard drinks)\", value: 2.828 },\n          {\n            name: \"1 regular bottle (330mL, 1.2 standard drinks)\",\n            value: 3.333,\n          },\n          { name: \"1 large glass (450mL, 1.7 standard drinks)\", value: 4.545 },\n          { name: \"1 large bottle (500mL, 1.9 standard drinks)\", value: 5.05 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Wine\",\n    category: \"Beverages, Alcoholic\",\n    carbs: [\n      {\n        name: \"Port, fortified\",\n        variant: \"\",\n        carb: 12.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.6 standard drinks)\", value: 1.03 },\n          {\n            name: \"1 average glass (150mL, 2.5 standard drinks)\",\n            value: 1.545,\n          },\n        ],\n      },\n      {\n        name: \"Sherry, dry\",\n        variant: \"\",\n        carb: 1.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.6 standard drinks)\", value: 0.99 },\n          {\n            name: \"1 average glass (150mL, 2.3 standard drinks)\",\n            value: 1.485,\n          },\n        ],\n      },\n      {\n        name: \"Sherry, sweet\",\n        variant: \"\",\n        carb: 10.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.6 standard drinks)\", value: 10.4 },\n          {\n            name: \"1 average glass (150mL, 2.4 standard drinks)\",\n            value: 1.515,\n          },\n        ],\n      },\n      {\n        name: \"Pinot Noir (13.5% alcohol by volume)\",\n        variant: \"red\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.1 standard drinks)\", value: 0.994 },\n          {\n            name: \"1 average glass (150mL, 1.6 standard drinks)\",\n            value: 1.491,\n          },\n        ],\n      },\n      {\n        name: \"Cabernet Sauvignon (14% alcohol by volume)\",\n        variant: \"red\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.1 standard drinks)\", value: 0.995 },\n          {\n            name: \"1 average glass (150mL, 1.7 standard drinks)\",\n            value: 1.493,\n          },\n        ],\n      },\n      {\n        name: \"Merlot (14% alcohol by volume)\",\n        variant: \"red\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.1 standard drinks)\", value: 0.995 },\n          {\n            name: \"1 average glass (150mL, 1.6 standard drinks)\",\n            value: 1.493,\n          },\n        ],\n      },\n      {\n        name: \"Shiraz (14% alcohol by volume)\",\n        variant: \"red\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.1 standard drinks)\", value: 0.994 },\n          {\n            name: \"1 average glass (150mL, 1.7 standard drinks)\",\n            value: 1.491,\n          },\n        ],\n      },\n      {\n        name: \"rose (12% alcohol by volume)\",\n        variant: \"red\",\n        carb: 0.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 0.9 standard drinks)\", value: 0.995 },\n          {\n            name: \"1 average glass (150mL, 1.4 standard drinks)\",\n            value: 1.493,\n          },\n        ],\n      },\n      {\n        name: \"Semillon (11% alcohol by volume)\",\n        variant: \"white\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 0.9 standard drinks)\", value: 0.993 },\n          {\n            name: \"1 average glass (150mL, 1.4 standard drinks)\",\n            value: 1.493,\n          },\n        ],\n      },\n      {\n        name: \"Sauvignon Blanc (12% alcohol by volume)\",\n        variant: \"white\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.0 standard drinks)\", value: 0.992 },\n          {\n            name: \"1 average glass (150mL, 1.5 standard drinks)\",\n            value: 1.488,\n          },\n        ],\n      },\n      {\n        name: \"Chardonnay (13% alcohol by volume)\",\n        variant: \"white\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.0 standard drinks)\", value: 0.992 },\n          {\n            name: \"1 average glass (150mL, 1.5 standard drinks)\",\n            value: 1.488,\n          },\n        ],\n      },\n      {\n        name: \"Riesling (12% alcohol by volume)\",\n        variant: \"white\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.0 standard drinks)\", value: 0.993 },\n          { name: \"1 average glass (150mL, 1.4 standard drinks)\", value: 1.49 },\n        ],\n      },\n      {\n        name: \"Sparkling (12% alcohol by volume)\",\n        variant: \"white\",\n        carb: 1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 1.0 standard drinks)\", value: 0.995 },\n          {\n            name: \"1 average glass (150mL, 1.5 standard drinks)\",\n            value: 1.493,\n          },\n        ],\n      },\n      {\n        name: \"sweet, dessert (11.5% alcohol by volume)\",\n        variant: \"white\",\n        carb: 14.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small glass (100mL, 0.9 standard drinks)\", value: 1.066 },\n          {\n            name: \"1 average glass (150mL, 1.4 standard drinks)\",\n            value: 1.599,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Spirit\",\n    category: \"Beverages, Alcoholic\",\n    carbs: [\n      {\n        name: \"70 proof\",\n        variant: \"\",\n        carb: 0.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 shot (30mL, 0.9 standard drinks)\", value: 0.285 },\n          { name: \"Double shot (60mL, 1.8 standard drinks)\", value: 0.57 },\n        ],\n      },\n      {\n        name: \"gin, 90 proof\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 shot (30mL, 1.1 standard drinks)\", value: 0.282 },\n          { name: \"Double shot (60mL, 2.1 standard drinks)\", value: 0.564 },\n        ],\n      },\n      {\n        name: \"rum, 80 proof\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 shot (30mL, 0.9 standard drinks)\", value: 0.282 },\n          { name: \"Double shot (60mL, 1.9 standard drinks)\", value: 0.564 },\n        ],\n      },\n      {\n        name: \"vodka, 80 proof\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 shot (30mL, 0.9 standard drinks)\", value: 0.282 },\n          { name: \"Double shot (60mL, 1.9 standard drinks)\", value: 0.564 },\n        ],\n      },\n      {\n        name: \"whiskey, 86 proof\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 shot (30mL, 0.9 standard drinks)\", value: 0.282 },\n          { name: \"Double shot (60mL, 1.9 standard drinks)\", value: 0.564 },\n        ],\n      },\n    ],\n  },\n  /** Beverages Non-Alcoholic */\n  {\n    name: \"Coffee\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"brewed from grounds, dripped prepared\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.55 },\n        ],\n      },\n      {\n        name: \"brewed from grounds, plunger prepared\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.55 },\n        ],\n      },\n      {\n        name: \"espresso\",\n        variant: \"Cafe\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 shot (30mL)\", value: 0.3 },\n          { name: \"2 shot (55mL)\", value: 0.55 },\n          { name: \"1 cup short black cafe size (70mL)\", value: 0.7 },\n          { name: \"1 cup short black takeaway size (90mL)\", value: 0.9 },\n        ],\n      },\n      {\n        name: \"flat white, double shot & milk standard 3.3% fat\",\n        variant: \"Cafe\",\n        carb: 3.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup regular takeaway size (285mL)\", value: 2.449 },\n        ],\n      },\n      {\n        name: \"dry powder with water\",\n        variant: \"Instant\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.5 },\n        ],\n      },\n      {\n        name: \"dry powder with water & milk standard 3.3% fat\",\n        variant: \"Instant\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.5 },\n        ],\n      },\n      {\n        name: \"dry powder with water & milk standard 0.5% fat\",\n        variant: \"Instant\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.5 },\n        ],\n      },\n      {\n        name: \"double shot & milk standard 3.3% fat\",\n        variant: \"Cafe\",\n        carb: 3.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup large cafe size (300mL)\", value: 2.194 },\n        ],\n      },\n      {\n        name: \"double shot & milk standard 0.5% fat\",\n        variant: \"Cafe\",\n        carb: 3.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup large cafe size (300mL)\", value: 2.194 },\n        ],\n      },\n      {\n        name: \"long black, double shot\",\n        variant: \"Cafe\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup small cafe size (150mL)\", value: 1.5 },\n          { name: \"1 cup regular takeaway size (285mL)\", value: 2.85 },\n        ],\n      },\n      {\n        name: \"mochaccino, double shot & milk standard 3.3% fat\",\n        variant: \"Cafe\",\n        carb: 3.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup large cafe size (300mL)\", value: 2.239 },\n        ],\n      },\n      {\n        name: \"mochaccino, double shot & milk standard 0.5% fat\",\n        variant: \"Cafe\",\n        carb: 3.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup large cafe size (300mL)\", value: 2.239 },\n        ],\n      },\n      {\n        name: \"dry powder, Cafe Menu Cappuccino\",\n        variant: \"Instant, Nescafe\",\n        carb: 35,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 2.3 },\n        ],\n      },\n      {\n        name: \"dry powder, decaffeinated\",\n        variant: \"Instant\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.017 },\n        ],\n      },\n      {\n        name: \"dry powder\",\n        variant: \"Instant\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.018 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Drinking Chocolate\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"Baking Cocoa, Powder\",\n        variant: \"Cadbury\",\n        carb: 12.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.019 },\n        ],\n      },\n      {\n        name: \"Nesquik, Chocolate\",\n        variant: \"Nestle\",\n        carb: 88.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.027 },\n        ],\n      },\n      {\n        name: \"Chocolatte Frothy Classic & Extreme Choc\",\n        variant: \"Jarrah\",\n        carb: 42.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.02 },\n        ],\n      },\n      {\n        name: \"Drinking Chocolate\",\n        variant: \"Cadbury\",\n        carb: 85.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.031 },\n        ],\n      },\n      {\n        name: \"Milo\",\n        variant: \"Nestle\",\n        carb: 87.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.022 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Energy Drinks\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"V, assorted flavours\",\n        variant: \"Frucor\",\n        carb: 10.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.582 },\n        ],\n      },\n      {\n        name: \"V, sugar free\",\n        variant: \"Frucor\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.65 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Flavored Drink\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"Vitafresh, assorted fruit flavours\",\n        variant: \"\",\n        carb: 92.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.2 },\n        ],\n      },\n      {\n        name: \"Raro, assorted flavours\",\n        variant: \"\",\n        carb: 92.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.135 },\n        ],\n      },\n      {\n        name: \"lemon & barley\",\n        variant: \"\",\n        carb: 9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.59 },\n        ],\n      },\n      {\n        name: \"orange\",\n        variant: \"\",\n        carb: 9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.59 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Fruit Drink\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"orange, sweetened, fortified vitamin C\",\n        variant: \"\",\n        carb: 6.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.574 },\n        ],\n      },\n      {\n        name: \"blackcurrant, sweetened, fortified vitamin C\",\n        variant: \"\",\n        carb: 8.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.574 },\n        ],\n      },\n      {\n        name: \"cranberry, sweetened, fortified vitamin C\",\n        variant: \"\",\n        carb: 9.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.577 },\n        ],\n      },\n      {\n        name: \"cranberry, unsweetened, fortified vitamin C\",\n        variant: \"\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.48 },\n        ],\n      },\n      {\n        name: \"orange, unsweetened, fortified vitamin C\",\n        variant: \"\",\n        carb: 3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.539 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Juice Concentrate\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"Blackcurrant\",\n        variant: \"Baker Halls\",\n        carb: 56.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"100mL\", value: 1.12 },\n        ],\n      },\n      {\n        name: \"Lemon & Barley\",\n        variant: \"Baker Halls\",\n        carb: 43.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"100mL\", value: 1.12 },\n        ],\n      },\n      {\n        name: \"Blackcurrant, frozen\",\n        variant: \"\",\n        carb: 33,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"100mL\", value: 1.28 },\n        ],\n      },\n      {\n        name: \"orange\",\n        variant: \"\",\n        carb: 34.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"100mL\", value: 1.124 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Juice\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"apple\",\n        variant: \"Fresh Up\",\n        carb: 9.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.61 },\n        ],\n      },\n      {\n        name: \"grape\",\n        variant: \"\",\n        carb: 11.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.66 },\n        ],\n      },\n      {\n        name: \"grapefruit, unsweetened\",\n        variant: \"\",\n        carb: 7.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.56 },\n        ],\n      },\n      {\n        name: \"orange with apple base\",\n        variant: \"Just Juice\",\n        carb: 10.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.62 },\n        ],\n      },\n      {\n        name: \"orange, sweetened, ready to drink\",\n        variant: \"\",\n        carb: 7.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.577 },\n        ],\n      },\n      {\n        name: \"orange, unsweetened\",\n        variant: \"\",\n        carb: 7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.553 },\n        ],\n      },\n      {\n        name: \"orange, unsweetened, shelf stable or refrigerated\",\n        variant: \"Arano\",\n        carb: 5.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.567 },\n        ],\n      },\n      {\n        name: \"tomato\",\n        variant: \"McCoy\",\n        carb: 4.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.57 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Liquid Breakfast\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"Fast Start, assorted flavours\",\n        variant: \"Anchor\",\n        carb: 14,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.68 },\n        ],\n      },\n      {\n        name: \"Up&Go, assorted flavours\",\n        variant: \"Sanitarium\",\n        carb: 11.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.669 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Rice Milk\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"Rice Milk\",\n        variant: \"Get Natural\",\n        carb: 4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.75 },\n        ],\n      },\n      {\n        name: \"Organic Rice Lactose Free Drink Original\",\n        variant: \"Signature Range\",\n        carb: 6.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.675 },\n        ],\n      },\n      {\n        name: \"Original Calcium Enriched\",\n        variant: \"Vitasoy\",\n        carb: 8.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.7 },\n        ],\n      },\n      {\n        name: \"Original Lactose Free Beverage Low Fat & Natural\",\n        variant: \"Rice Dream\",\n        carb: 5.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.62 },\n        ],\n      },\n      {\n        name: \"Protein and Calcium Enriched\",\n        variant: \"Vitasoy\",\n        carb: 6.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.675 },\n        ],\n      },\n      {\n        name: \"Rice Drink Original\",\n        variant: \"Rice Dream\",\n        carb: 5.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.7 },\n        ],\n      },\n      {\n        name: \"Rice Drink Vanilla\",\n        variant: \"Rice Dream\",\n        carb: 5.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.7 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Smoothie\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"Feijoa\",\n        variant: \"Simply Squeezed\",\n        carb: 11.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.725 },\n        ],\n      },\n      {\n        name: \"Berry\",\n        variant: \"Multiple Brands\",\n        carb: 10.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.75 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Soft Drink\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"assorted fruit flavours, reduced sugar\",\n        variant: \"Homebrand, Budget\",\n        carb: 6.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.588 },\n        ],\n      },\n      {\n        name: \"assorted tea flavours, artificially-sweetened\",\n        variant: \"Lipton\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.518 },\n        ],\n      },\n      {\n        name: \"assorted tea flavours, reduced sugar\",\n        variant: \"Lipton\",\n        carb: 4.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.528 },\n        ],\n      },\n      {\n        name: \"assorted tea flavours, sugar-sweetened\",\n        variant: \"Teza, Arizona\",\n        carb: 7.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.57 },\n        ],\n      },\n      {\n        name: \"assorted fruit flavours, sugar-sweetened\",\n        variant: \"Fanta, Schweppes\",\n        carb: 9.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.588 },\n        ],\n      },\n      {\n        name: \"cola flavoured, artificially-sweetened, caffeinated\",\n        variant: \"Coca-Cola (Zero, Diet), Pepsi (Max)\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.518 },\n        ],\n      },\n      {\n        name: \"cola flavour, artificially-sweetened, non-caffeinated\",\n        variant: \"Coca-Cola (Diet)\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.503 },\n        ],\n      },\n      {\n        name: \"lemon flavour, artificially-sweetened\",\n        variant: \"Sprite (Zero), Schweppes, Lift\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.515 },\n        ],\n      },\n      {\n        name: \"lemon flavour, sugarsweetened\",\n        variant:\n          \"Sprite, Schweppes, Signature Range, 7UP, L&P, Lift, Spree, Frank, Endeavour\",\n        carb: 9.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.568 },\n        ],\n      },\n      {\n        name: \"cola flavour, reduced sugar, caffeinated\",\n        variant: \"Coca-Cola (Life), Pepsi (Next), Homebrand, Pams\",\n        carb: 6.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.573 },\n        ],\n      },\n      {\n        name: \"cola flavour, sugar-sweetened, caffeinated\",\n        variant: \"Coca-Cola, Pepsi\",\n        carb: 7.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.535 },\n        ],\n      },\n      {\n        name: \"lemon flavour, reduced sugar\",\n        variant: \"360 degrees, Homebrand, Budget, Charlies\",\n        carb: 7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.56 },\n        ],\n      },\n      {\n        name: \"soda water\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.5 },\n        ],\n      },\n      {\n        name: \"tonic water\",\n        variant: \"\",\n        carb: 8.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.58 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Soy Milk\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"So Good Essential\",\n        variant: \"Sanitarium\",\n        carb: 4.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.6 },\n        ],\n      },\n      {\n        name: \"So Good Lite Soy Milk\",\n        variant: \"Sanitarium\",\n        carb: 3.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.6 },\n        ],\n      },\n      {\n        name: \"So Good Regular Soy Milk\",\n        variant: \"Sanitarium\",\n        carb: 4.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.55 },\n        ],\n      },\n      {\n        name: \"So Good, Vanilla Flavoured\",\n        variant: \"Sanitarium\",\n        carb: 6.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.55 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Sports Drink\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"assorted flavours, Isopower, Low Carb\",\n        variant: \"Mizone\",\n        carb: 3.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.55 },\n        ],\n      },\n      {\n        name: \"assorted flavours, Isopower\",\n        variant: \"Mizone\",\n        carb: 6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.566 },\n        ],\n      },\n      {\n        name: \"Lucozade\",\n        variant: \"Lucozade\",\n        carb: 14,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.65 },\n        ],\n      },\n      {\n        name: \"Gatorade\",\n        variant: \"Gatorade\",\n        carb: 6.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.56 },\n        ],\n      },\n      {\n        name: \"Powerade\",\n        variant: \"Powerade\",\n        carb: 8.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.554 },\n        ],\n      },\n      {\n        name: \"assorted flavours\",\n        variant: \"Mizone\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.6 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Other\",\n    category: \"Beverages, Non-Alcoholic\",\n    carbs: [\n      {\n        name: \"Kava\",\n        variant: \"\",\n        carb: 0.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.443 },\n        ],\n      },\n    ],\n  },\n  /** Breakfast Cereals */\n  {\n    name: \"Breakfast Cereals\",\n    category: \"Breakfast Cereals\",\n    carbs: [\n      {\n        name: \"All Bran Original\",\n        variant: \"Kellogg's\",\n        carb: 62.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.789 },\n        ],\n      },\n      {\n        name: \"rice puffed, cocoa coated\",\n        variant: \"Generic\",\n        carb: 80.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.629 },\n        ],\n      },\n      {\n        name: \"Cluster Crisp, Manuka Honey with Roasted Cashew\",\n        variant: \"Sanitarium\",\n        carb: 56.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.926 },\n        ],\n      },\n      {\n        name: \"Cluster Crisp\",\n        variant: \"Sanitarium\",\n        carb: 56.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.928 },\n        ],\n      },\n      {\n        name: \"Cluster Crisp, Vanilla Almond\",\n        variant: \"Sanitarium\",\n        carb: 56.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.929 },\n        ],\n      },\n      {\n        name: \"Coco Pops\",\n        variant: \"Kellogg's\",\n        carb: 84.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.524 },\n        ],\n      },\n      {\n        name: \"Crunchy Nut Corn Flakes\",\n        variant: \"Kellogg's\",\n        carb: 79.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.44 },\n        ],\n      },\n      {\n        name: \"Fruitful Breakfast\",\n        variant: \"Hubbards\",\n        carb: 59.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.475 },\n        ],\n      },\n      {\n        name: \"Just Right\",\n        variant: \"Kellogg's\",\n        carb: 76.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.531 },\n        ],\n      },\n      {\n        name: \"Light 'n' Tasty, Apricot\",\n        variant: \"Sanitarium\",\n        carb: 69.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.775 },\n        ],\n      },\n      {\n        name: \"Light 'n' Tasty, Berry\",\n        variant: \"Sanitarium\",\n        carb: 69.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.824 },\n        ],\n      },\n      {\n        name: \"Light 'n' Tasty, Peach & Raspberry\",\n        variant: \"Sanitarium\",\n        carb: 67.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.747 },\n        ],\n      },\n      {\n        name: \"Nutri-Grain\",\n        variant: \"Kellogg's\",\n        carb: 67.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.368 },\n        ],\n      },\n      {\n        name: \"Porridge, prepared with water, salt added\",\n        variant: \"\",\n        carb: 8.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.26 },\n        ],\n      },\n      {\n        name: \"Puffed Wheat\",\n        variant: \"Sanitarium\",\n        carb: 77.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.3 },\n        ],\n      },\n      {\n        name: \"Rice Bubbles\",\n        variant: \"Kellogg's\",\n        carb: 82.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.3 },\n        ],\n      },\n      {\n        name: \"Ricies\",\n        variant: \"Sanitarium\",\n        carb: 77.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.32 },\n        ],\n      },\n      {\n        name: \"San Bran\",\n        variant: \"Sanitarium\",\n        carb: 41.4,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Simply Toasted Muesli Apricot\",\n        variant: \"Hubbards\",\n        carb: 58.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.427 },\n        ],\n      },\n      {\n        name: \"Skippy Cornflakes\",\n        variant: \"Sanitarium\",\n        carb: 76.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.334 },\n        ],\n      },\n      {\n        name: \"Special K, Forest Berries\",\n        variant: \"Kellogg's\",\n        carb: 70.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.4 },\n        ],\n      },\n      {\n        name: \"Special K, Original\",\n        variant: \"Kellogg's\",\n        carb: 64.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.415 },\n        ],\n      },\n      {\n        name: \"Sultana Bran\",\n        variant: \"Kellogg's\",\n        carb: 63.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.45 },\n        ],\n      },\n      {\n        name: \"Sustain\",\n        variant: \"Kellogg's\",\n        carb: 68.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.6 },\n        ],\n      },\n      {\n        name: \"Toasted Muesli Golden Oats & Fruit\",\n        variant: \"Sanitarium\",\n        carb: 60,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.288 },\n        ],\n      },\n      {\n        name: \"Toasted Muesli Super Fruity\",\n        variant: \"Sanitarium\",\n        carb: 64.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.334 },\n        ],\n      },\n      {\n        name: \"Toasted Strawberry and Rhubarb\",\n        variant: \"Sanitarium\",\n        carb: 55.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.258 },\n        ],\n      },\n      {\n        name: \"Weet-Bix Oat Bran\",\n        variant: \"Sanitarium\",\n        carb: 72.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.222 },\n        ],\n      },\n      {\n        name: \"Weet-Bix\",\n        variant: \"Sanitarium\",\n        carb: 58.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.168 },\n        ],\n      },\n      {\n        name: \"Weeties\",\n        variant: \"Sanitarium\",\n        carb: 61.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.515 },\n        ],\n      },\n    ],\n  },\n  /** Cereals and Pseudo-Cereals */\n  {\n    name: \"Cereals\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"Barley, pearl, boiled\",\n        variant: \"\",\n        carb: 25.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.65 },\n        ],\n      },\n      {\n        name: \"Bulgur, boiled\",\n        variant: \"\",\n        carb: 17.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.923 },\n        ],\n      },\n      {\n        name: \"Cornmeal, wholegrain, yellow\",\n        variant: \"\",\n        carb: 63.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.22 },\n        ],\n      },\n      {\n        name: \"Couscous, cooked in water, not drained\",\n        variant: \"\",\n        carb: 32.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.432 },\n        ],\n      },\n      {\n        name: \"Couscous, dry\",\n        variant: \"\",\n        carb: 67.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.112 },\n        ],\n      },\n      {\n        name: \"Custard, dry powder\",\n        variant: \"\",\n        carb: 83.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.086 },\n        ],\n      },\n      {\n        name: \"Semolina, cooked\",\n        variant: \"\",\n        carb: 6.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.45 },\n        ],\n      },\n      {\n        name: \"Wheat bran\",\n        variant: \"\",\n        carb: 23.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.63 },\n        ],\n      },\n      {\n        name: \"Wheat germ\",\n        variant: \"\",\n        carb: 36.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.98 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Flour\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"chickpea, raw\",\n        variant: \"\",\n        carb: 46.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.958 },\n        ],\n      },\n      {\n        name: \"corn\",\n        variant: \"\",\n        carb: 83.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.075 },\n        ],\n      },\n      {\n        name: \"soy, full fat\",\n        variant: \"\",\n        carb: 24.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.68 },\n        ],\n      },\n      {\n        name: \"wheat, white\",\n        variant: \"\",\n        carb: 72.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.082 },\n          { name: \"1 cup (250mL)\", value: 1.373 },\n        ],\n      },\n      {\n        name: \"wheat, wholemeal\",\n        variant: \"\",\n        carb: 60.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.243 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Frozen Meal\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"lasagne, baked\",\n        variant: \"\",\n        carb: 14.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.5 },\n        ],\n      },\n      {\n        name: \"macaroni chese, baked\",\n        variant: \"\",\n        carb: 14.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.325 },\n        ],\n      },\n      {\n        name: \"spaghetti bolognaise, baked\",\n        variant: \"\",\n        carb: 13.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.225 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Noodle\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"instant, boiled, drained\",\n        variant: \"\",\n        carb: 24.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.5 },\n        ],\n      },\n      {\n        name: \"rice flour, dry, boiled, drained\",\n        variant: \"\",\n        carb: 23.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.224 },\n        ],\n      },\n      {\n        name: \"Japanese udon noodles, shelf-fresh, boiled, drained\",\n        variant: \"\",\n        carb: 20.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.864 },\n        ],\n      },\n      {\n        name: \"Japanese udon noodles, shelf-fresh, stir fried\",\n        variant: \"\",\n        carb: 28.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.918 },\n        ],\n      },\n      {\n        name: \"wheat flour with egg, boiled, drained\",\n        variant: \"\",\n        carb: 11.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.69 },\n        ],\n      },\n      {\n        name: \"wheat flour with egg, fried\",\n        variant: \"\",\n        carb: 10.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.69 },\n        ],\n      },\n      {\n        name: \"2 Minutes, wheat flour, assorted flavours, boiled, undrained\",\n        variant: \"Maggi\",\n        carb: 12.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.85 },\n          { name: \"1 cake (11.5 x 8.0 x 2.6cm)\", value: 3.963 },\n        ],\n      },\n      {\n        name: \"wheat, Shin Ramyun noodle soup Hot & Spicy, boiled, undrained\",\n        variant: \"Nong Shim\",\n        carb: 9.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.84 },\n          { name: \"1 cake (11.5 x 8.0 x 2.6cm)\", value: 7.32 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Oats\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"Oat Bran\",\n        variant: \"\",\n        carb: 54.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.2 },\n        ],\n      },\n      {\n        name: \"Oatmeal\",\n        variant: \"\",\n        carb: 66.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 90 },\n        ],\n      },\n      {\n        name: \"Traditional Wholegrain Oats\",\n        variant: \"Harraways\",\n        carb: 58.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.125 },\n        ],\n      },\n      {\n        name: \"rolled, raw\",\n        variant: \"\",\n        carb: 56.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.9 },\n        ],\n      },\n      {\n        name: \"toasted, rolled oats\",\n        variant: \"Harraways\",\n        carb: 61.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.019 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Other\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"Taco shell, corn flour, baked, commercial\",\n        variant: \"\",\n        carb: 58.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 shell small (13.2cm diameter)\", value: 0.11 },\n          { name: \"1 shell standard\", value: 0.14 },\n          { name: \"1 shell jumbo\", value: 0.19 },\n        ],\n      },\n      {\n        name: \"Topper, lasagne, baked\",\n        variant: \"\",\n        carb: 20.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.025 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Pasta\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"Pasta & sauce, dry mix, assorted flavours, prepared with water, milk & butter, boiled\",\n        variant: \"\",\n        carb: 19.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.812 },\n        ],\n      },\n      {\n        name: \"fresh, assorted type, cooked\",\n        variant: \"\",\n        carb: 24.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.5 },\n        ],\n      },\n      {\n        name: \"fresh, fettuccine, herb & garlic, cooked\",\n        variant: \"\",\n        carb: 21.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.48 },\n        ],\n      },\n      {\n        name: \"fresh, ravioli, beef & pork, cooked\",\n        variant: \"\",\n        carb: 24,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.5 },\n        ],\n      },\n      {\n        name: \"wheat flour with egg, boiled, drained\",\n        variant: \"\",\n        carb: 29,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.2 },\n        ],\n      },\n      {\n        name: \"wheat flour with vegetable flavours, boiled, drained\",\n        variant: \"\",\n        carb: 30.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.14 },\n        ],\n      },\n      {\n        name: \"white wheat flour, assorted shapes, regular, boiled, drained, no salt added\",\n        variant: \"\",\n        carb: 25.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup spirals (250mL)\", value: 1.098 },\n          { name: \"1 cup macaroni elbow (250mL)\", value: 1.129 },\n          { name: \"1 cup risoni (250mL)\", value: 2.006 },\n        ],\n      },\n      {\n        name: \"wholemeal wheat flour, assorted shapes, boiled, drained, no salt added\",\n        variant: \"\",\n        carb: 21.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup spirals or penne (250mL)\", value: 1.112 },\n        ],\n      },\n      {\n        name: \"Spaghetti, canned in tomato sauce\",\n        variant: \"\",\n        carb: 12.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.95 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Psuedo-Cereals\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"Quinoa, cooked\",\n        variant: \"\",\n        carb: 17.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.463 },\n        ],\n      },\n      {\n        name: \"Tapioca, pearl, dry\",\n        variant: \"\",\n        carb: 86.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.6 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Rice\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"brown, boiled\",\n        variant: \"\",\n        carb: 29.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.06 },\n        ],\n      },\n      {\n        name: \"brown, creamed, canned\",\n        variant: \"\",\n        carb: 18.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.578 },\n        ],\n      },\n      {\n        name: \"Basmati, white, boiled, undrained\",\n        variant: \"\",\n        carb: 27.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.621 },\n        ],\n      },\n      {\n        name: \"Jasmine, white, boiled\",\n        variant: \"\",\n        carb: 21.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.965 },\n        ],\n      },\n      {\n        name: \"wild, cooked\",\n        variant: \"\",\n        carb: 19.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.733 },\n        ],\n      },\n      {\n        name: \"Whole grain rice wafer\",\n        variant: \"\",\n        carb: 70.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 thin wafer (0.6 x 9.9cm diameter)\", value: 0.073 },\n          { name: \"1 thick wafer (1.1 x 9.9cm diameter)\", value: 0.131 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Soy products\",\n    category: \"Cereals and Pseudo-Cereals\",\n    carbs: [\n      {\n        name: \"Tempeh\",\n        variant: \"\",\n        carb: 7.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.625 },\n        ],\n      },\n      {\n        name: \"Tempeh fried in sunflower oil\",\n        variant: \"\",\n        carb: 12.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.754 },\n        ],\n      },\n      {\n        name: \"Yoghurt, soy\",\n        variant: \"\",\n        carb: 3.8,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n    ],\n  },\n  /** Dairy */\n  {\n    name: \"Butter\",\n    category: \"Dairy\",\n    carbs: [\n      {\n        name: \"salted\",\n        variant: \"\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.046 },\n          { name: \"1 tablespoon (15mL)\", value: 0.132 },\n        ],\n      },\n      {\n        name: \"semisoft\",\n        variant: \"\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.046 },\n          { name: \"1 tablespoon (15mL)\", value: 0.132 },\n        ],\n      },\n      {\n        name: \"unsalted\",\n        variant: \"\",\n        carb: 0.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.046 },\n          { name: \"1 tablespoon (15mL)\", value: 0.132 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Cheese\",\n    category: \"Dairy\",\n    carbs: [\n      {\n        name: \"Cheese spread, light\",\n        variant: \"Philadelphia\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.186 },\n        ],\n      },\n      {\n        name: \"Cream Cheese, reduced fat 16%\",\n        variant: \"Country Goodness\",\n        carb: 15.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.54 },\n        ],\n      },\n      {\n        name: \"Blue vein\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2cm)\", value: 0.035 },\n          { name: \"1 wedge (9 x 5.5 x 1cm)\", value: 0.22 },\n        ],\n      },\n      {\n        name: \"Camembert\",\n        variant: \"\",\n        carb: 0.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2cm)\", value: 0.035 },\n          { name: \"1 round (9 x 5.5 x 1cm)\", value: 0.2 },\n        ],\n      },\n      {\n        name: \"Cheddar\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2cm)\", value: 0.08 },\n          { name: \"1 cup grated (250mL)\", value: 1.18 },\n        ],\n      },\n      {\n        name: \"Cheddar, light\",\n        variant: \"Mainland\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2cm)\", value: 0.08 },\n          { name: \"1 cup grated (250mL)\", value: 1.194 },\n        ],\n      },\n      {\n        name: \"Cheddar, colby\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2cm)\", value: 0.08 },\n          { name: \"1 cup grated (250mL)\", value: 1.194 },\n        ],\n      },\n      {\n        name: \"Cottage\",\n        variant: \"\",\n        carb: 2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespooon (15mL)\", value: 0.167 },\n          { name: \"1 cup (250mL)\", value: 2.78 },\n        ],\n      },\n      {\n        name: \"Cottage, light, 1% fat\",\n        variant: \"\",\n        carb: 2.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespooon (15mL)\", value: 0.161 },\n          { name: \"1 cup (250mL)\", value: 2.687 },\n        ],\n      },\n      {\n        name: \"Cream Cheese\",\n        variant: \"\",\n        carb: 6.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespooon (15mL)\", value: 0.144 },\n        ],\n      },\n      {\n        name: \"Edam\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2cm)\", value: 0.08 },\n          { name: \"1 cup grated (250mL)\", value: 1.194 },\n        ],\n      },\n      {\n        name: \"Feta, from cow's milk, reduced fat\",\n        variant: \"\",\n        carb: 1.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2.5cm)\", value: 0.178 },\n          { name: \"1 block (9.8 x 7.0 x 2.5cm)\", value: 2.002 },\n        ],\n      },\n      {\n        name: \"Feta, from cow's milk, traditional\",\n        variant: \"\",\n        carb: 1.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2.5cm)\", value: 0.178 },\n          { name: \"1 block (9.3 x 7.2 x 2.7cm)\", value: 2.047 },\n        ],\n      },\n      {\n        name: \"Feta, from goat's milk\",\n        variant: \"\",\n        carb: 0.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2.5cm)\", value: 0.176 },\n          { name: \"1 cup (250mL)\", value: 1.823 },\n        ],\n      },\n      {\n        name: \"Haloumi, from cow's milk\",\n        variant: \"\",\n        carb: 1.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2.5cm)\", value: 0.17 },\n          { name: \"1 cup (250mL)\", value: 1.777 },\n        ],\n      },\n      {\n        name: \"Mozzarella\",\n        variant: \"\",\n        carb: 0.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2cm)\", value: 0.08 },\n          { name: \"1 cup grated (250mL)\", value: 1.014 },\n        ],\n      },\n      {\n        name: \"Parmesan, from cow's milk, ungrated\",\n        variant: \"\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup grated or shaved (250mL)\", value: 0.824 },\n        ],\n      },\n      {\n        name: \"Parmesan, powder\",\n        variant: \"\",\n        carb: 0.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.06 },\n          { name: \"1 cup (250mL)\", value: 1.08 },\n        ],\n      },\n      {\n        name: \"Processed\",\n        variant: \"\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (8.4 x 8.4 x 0.25cm)\", value: 0.207 },\n        ],\n      },\n      {\n        name: \"Processed, sliced, reduced fat\",\n        variant: \"\",\n        carb: 4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (8.4 x 8.4 x 0.25cm)\", value: 0.207 },\n        ],\n      },\n      {\n        name: \"Ricotta, from cow's milk\",\n        variant: \"\",\n        carb: 3.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.16 },\n          { name: \"100mL\", value: 1.065 },\n        ],\n      },\n      {\n        name: \"Fromage frais, assorted fruits & flavours\",\n        variant: \"Fruche\",\n        carb: 14.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"100mL\", value: 1.04 },\n        ],\n      },\n      {\n        name: \"Fromage frais, vanilla\",\n        variant: \"Fruche\",\n        carb: 14.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"100mL\", value: 1.05 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Cream\",\n    category: \"Dairy\",\n    carbs: [\n      {\n        name: \"Reduced fat\",\n        variant: \"\",\n        carb: 3.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.15 },\n        ],\n      },\n      {\n        name: \"Sour\",\n        variant: \"\",\n        carb: 2.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n          { name: \"1 cup (250mL)\", value: 2.325 },\n        ],\n      },\n      {\n        name: \"Standard\",\n        variant: \"\",\n        carb: 2.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.15 },\n        ],\n      },\n      {\n        name: \"Whipping, ultra-high-temperature processed\",\n        variant: \"\",\n        carb: 2.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.152 },\n          { name: \"1 cup (250mL)\", value: 2.533 },\n        ],\n      },\n      {\n        name: \"Creme fraiche\",\n        variant: \"\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.144 },\n        ],\n      },\n      {\n        name: \"Creme fraiche, light\",\n        variant: \"\",\n        carb: 3.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.15 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Dessert\",\n    category: \"Dairy\",\n    carbs: [\n      {\n        name: \"vanilla, 99% fat free, frozen\",\n        variant: \"Weight Watchers\",\n        carb: 18.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.38 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Ice Cream\",\n    category: \"Dairy\",\n    carbs: [\n      {\n        name: \"Hokey pokey\",\n        variant: \"\",\n        carb: 22.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.57 },\n        ],\n      },\n      {\n        name: \"Jelly Tip\",\n        variant: \"Tip Top\",\n        carb: 25.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.006 },\n        ],\n      },\n      {\n        name: \"Chocolate\",\n        variant: \"Paddle Pop\",\n        carb: 22.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 ice-block\", value: 0.906 },\n        ],\n      },\n      {\n        name: \"Assorted berry flavours, standard\",\n        variant: \"\",\n        carb: 26,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 scoop (22mL)\", value: 0.216 },\n          { name: \"1 scoop (64mL)\", value: 0.563 },\n        ],\n      },\n      {\n        name: \"Chocolate\",\n        variant: \"\",\n        carb: 21,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.52 },\n        ],\n      },\n      {\n        name: \"Fruit Ripple, creamy\",\n        variant: \"\",\n        carb: 22.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.69 },\n        ],\n      },\n      {\n        name: \"Soft serve\",\n        variant: \"\",\n        carb: 20,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.4 },\n        ],\n      },\n      {\n        name: \"Vanilla, low fat\",\n        variant: \"\",\n        carb: 20.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.33 },\n        ],\n      },\n      {\n        name: \"Vanilla, premium\",\n        variant: \"\",\n        carb: 17.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.41 },\n        ],\n      },\n      {\n        name: \"Vanilla, standard\",\n        variant: \"\",\n        carb: 19.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.43 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Milk\",\n    category: \"Dairy\",\n    carbs: [\n      {\n        name: \"Condensed, sweetened, skim\",\n        variant: \"\",\n        carb: 57.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.2 },\n        ],\n      },\n      {\n        name: \"Condensed, sweetened, whole\",\n        variant: \"\",\n        carb: 54.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.19 },\n        ],\n      },\n      {\n        name: \"Cow, high calcium 0.1% fat, fluid\",\n        variant: \"\",\n        carb: 4.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.59 },\n        ],\n      },\n      {\n        name: \"Cow, lite 1.5% fat, fluid\",\n        variant: \"\",\n        carb: 4.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.59 },\n        ],\n      },\n      {\n        name: \"Cow, low fat 0.2% fat, fluid\",\n        variant: \"Sun Latte\",\n        carb: 3.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.58 },\n        ],\n      },\n      {\n        name: \"Cow, powder, instant, skim\",\n        variant: \"\",\n        carb: 45.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.076 },\n        ],\n      },\n      {\n        name: \"Cow, powder, instant, whole\",\n        variant: \"\",\n        carb: 33,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.081 },\n        ],\n      },\n      {\n        name: \"Cow, standard 3.3% fat, fluid\",\n        variant: \"\",\n        carb: 4.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.58 },\n        ],\n      },\n      {\n        name: \"Cow, standard, fluid, ultra-high-temperature processed\",\n        variant: \"\",\n        carb: 4.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.58 },\n        ],\n      },\n      {\n        name: \"Cow, trim 0.5% fat, fluid\",\n        variant: \"\",\n        carb: 5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.59 },\n        ],\n      },\n      {\n        name: \"Cow, whole 4% fat, fluid, non-homogenised\",\n        variant: \"\",\n        carb: 4.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.605 },\n        ],\n      },\n      {\n        name: \"Cow, whole, evaporated, fluid\",\n        variant: \"\",\n        carb: 9.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.66 },\n        ],\n      },\n      {\n        name: \"Goat, whole, fluid\",\n        variant: \"\",\n        carb: 4.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.58 },\n        ],\n      },\n      {\n        name: \"Human, transistional, fluid\",\n        variant: \"\",\n        carb: 6.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.6 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Protein powder\",\n    category: \"Dairy\",\n    carbs: [\n      {\n        name: \"whey & vanilla flavoured, 100% Whey Protein WPC/WPI, Balance\",\n        variant: \"\",\n        carb: 4.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.053 },\n          { name: \"1 cup (250mL)\", value: 0.875 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Yoghurt\",\n    category: \"Dairy\",\n    carbs: [\n      {\n        name: \"Yoghurt dessert, greek style, chocolate, sweetened, premium\",\n        variant: \"\",\n        carb: 8.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.609 },\n        ],\n      },\n      {\n        name: \"Yoghurt smoothie, assorted fruits, sweetened\",\n        variant: \"\",\n        carb: 11.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.716 },\n        ],\n      },\n      {\n        name: \"Lite, assorted fruits, non-fat, sweetened, fortified\",\n        variant: \"Fresh 'n Fruity\",\n        carb: 3.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.581 },\n        ],\n      },\n      {\n        name: \"Lite, assorted fruits, regular fat, sweetened, fortified\",\n        variant: \"Fresh 'n Fruity\",\n        carb: 13,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.607 },\n        ],\n      },\n      {\n        name: \"Greek style, full-fat\",\n        variant: \"\",\n        carb: 3.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.625 },\n        ],\n      },\n      {\n        name: \"Greek style, low fat\",\n        variant: \"Fresh 'n Fruity\",\n        carb: 4.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.733 },\n        ],\n      },\n      {\n        name: \"Greek style, low fat\",\n        variant: \"Cyclops\",\n        carb: 3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.603 },\n        ],\n      },\n      {\n        name: \"Live lite, assorted fruits, non-fat\",\n        variant: \"Meadow Fresh\",\n        carb: 8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.595 },\n        ],\n      },\n      {\n        name: \"low fat, assorted fruits\",\n        variant: \"Meadow Fresh\",\n        carb: 12.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.596 },\n        ],\n      },\n      {\n        name: \"Symbio Probalance, assorted fruits, low fat\",\n        variant: \"Symbio\",\n        carb: 13,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.607 },\n        ],\n      },\n      {\n        name: \"Delite, assorted fruits, low fat\",\n        variant: \"Yoplait\",\n        carb: 10.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.598 },\n        ],\n      },\n      {\n        name: \"assorted fruits, regular fat\",\n        variant: \"Yoplait\",\n        carb: 10.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.61 },\n        ],\n      },\n      {\n        name: \"apricot, frozen\",\n        variant: \"Tip Top\",\n        carb: 17.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.04 },\n        ],\n      },\n      {\n        name: \"plain, low fat, unsweetened\",\n        variant: \"\",\n        carb: 4.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.57 },\n        ],\n      },\n      {\n        name: \"plain, unsweetened\",\n        variant: \"\",\n        carb: 3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.41 },\n        ],\n      },\n      {\n        name: \"premium, assorted fruits\",\n        variant: \"\",\n        carb: 13.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.611 },\n        ],\n      },\n    ],\n  },\n  /** Eggs */\n  {\n    name: \"Eggs\",\n    category: \"Eggs\",\n    carbs: [\n      {\n        name: \"chicken, white & yolk, boiled\",\n        variant: \"\",\n        carb: 0.6,\n        amounts: [\n          { name: \"1 egg (size 5, 51.3g)\", value: 0.442 },\n          { name: \"1 egg (size 5, 59.7g)\", value: 0.535 },\n          { name: \"1 egg (size 7, 66.0g)\", value: 0.583 },\n        ],\n      },\n      {\n        name: \"chicken, white & yolk, fried in butter\",\n        variant: \"\",\n        carb: 0.01,\n        amounts: [\n          { name: \"1 egg (size 5, 51.3g)\", value: 0.412 },\n          { name: \"1 egg (size 7, 66.0g)\", value: 0.437 },\n          { name: \"1 egg (size 6, 59.7g)\", value: 0.442 },\n        ],\n      },\n      {\n        name: \"chicken, white & yolk, fried in vegetable oil\",\n        variant: \"\",\n        carb: 0.6,\n        amounts: [\n          { name: \"1 egg (size 5, 51.3g)\", value: 0.399 },\n          { name: \"1 egg (size 6, 59.7g)\", value: 0.455 },\n          { name: \"1 egg (size 7, 66.0g)\", value: 0.525 },\n        ],\n      },\n      {\n        name: \"chicken, white & yolk, milk added, scrambled\",\n        variant: \"\",\n        carb: 0.05,\n        amounts: [{ name: \"1 cup (250mL)\", value: 2.325 }],\n      },\n      {\n        name: \"chicken, white & yolk, poached\",\n        variant: \"\",\n        carb: 0.6,\n        amounts: [\n          { name: \"1 egg (size 5, 51.3g)\", value: 0.47 },\n          { name: \"1 egg (size 6, 59.7g)\", value: 0.524 },\n          { name: \"1 egg (size 7, 66.0g)\", value: 0.595 },\n        ],\n      },\n      {\n        name: \"chicken, white & yolk, raw\",\n        variant: \"\",\n        carb: 0.7,\n        amounts: [\n          { name: \"1 egg (size 5, 51.3g)\", value: 0.45 },\n          { name: \"1 egg (size 6, 59.7g)\", value: 0.513 },\n          { name: \"1 egg (size 7, 66.0g)\", value: 0.567 },\n        ],\n      },\n      {\n        name: \"chicken, white, raw\",\n        variant: \"\",\n        carb: 0.4,\n        amounts: [\n          { name: \"1 egg (size 5, 51.3g)\", value: 0.315 },\n          { name: \"1 egg (size 6, 59.7g)\", value: 0.343 },\n          { name: \"1 egg (size 7, 66.0g)\", value: 0.402 },\n          { name: \"1 cup (250mL)\", value: 2.225 },\n        ],\n      },\n      {\n        name: \"chicken, yolk, raw\",\n        variant: \"\",\n        carb: 0.2,\n        amounts: [\n          { name: \"1 egg (size 5, 51.3g)\", value: 0.128 },\n          { name: \"1 egg (size 6, 59.7g)\", value: 0.15 },\n          { name: \"1 egg (size 7, 66.0g)\", value: 0.161 },\n          { name: \"1 cup (250mL)\", value: 2.339 },\n        ],\n      },\n    ],\n  },\n  /** Fast Food */\n  {\n    name: \"Asian\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Fries, potato, Burger King\",\n        variant: \"Fries\",\n        carb: 36,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 fries\", value: 0.69 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Burger King\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Fries, potato, Burger King\",\n        variant: \"Fries\",\n        carb: 36,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 fries\", value: 0.69 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Chinese\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"black bean, stir fry\",\n        variant: \"Beef\",\n        carb: 2.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.47 },\n        ],\n      },\n      {\n        name: \"Chicken and cashew, stir fry\",\n        variant: \"Chicken\",\n        carb: 2.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.05 },\n        ],\n      },\n      {\n        name: \"Chop suey, chicken, lean & fat, stir fried\",\n        variant: \"Chicken\",\n        carb: 5.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.53 },\n        ],\n      },\n      {\n        name: \"Chop suey, pork\",\n        variant: \"Pork\",\n        carb: 2.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.53 },\n        ],\n      },\n      {\n        name: \"Chow mein, beef, lean & fat, stir fried\",\n        variant: \"Beef\",\n        carb: 4.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.53 },\n        ],\n      },\n      {\n        name: \"Chow mein, chicken\",\n        variant: \"Chicken\",\n        carb: 13.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.325 },\n        ],\n      },\n      {\n        name: \"Chow mein, prawn\",\n        variant: \"Prawn\",\n        carb: 6.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.53 },\n        ],\n      },\n      {\n        name: \"Egg foo young with chicken, omelette, takeaway\",\n        variant: \"Omelette\",\n        carb: 1.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.46 },\n        ],\n      },\n      {\n        name: \"Fried rice, combination, Chinese, takeaway\",\n        variant: \"Fried rice\",\n        carb: 14.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.57 },\n        ],\n      },\n      {\n        name: \"Noodle, chow mein, combination, Chinese\",\n        variant: \"Noodle\",\n        carb: 1.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.94 },\n        ],\n      },\n      {\n        name: \"Pork, sweet & sour, Chinese, takeaway\",\n        variant: \"Pork\",\n        carb: 20.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.95 },\n        ],\n      },\n      {\n        name: \"Soup, chicken and sweet corn, Chinese, takeaway\",\n        variant: \"Soup\",\n        carb: 4.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.64 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Fish\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Fish, battered, deep fried, Independent Shops\",\n        variant: \"Battered\",\n        carb: 14.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 1.46 },\n        ],\n      },\n      {\n        name: \"Fish, cake, baked\",\n        variant: \"Fish Cake\",\n        carb: 19.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cake\", value: 0.76 },\n        ],\n      },\n      {\n        name: \"Fish, cake, deep fried in peanut oil\",\n        variant: \"Fish Cake\",\n        carb: 14.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cake (1.5 x 7cm diameter)\", value: 0.8 },\n        ],\n      },\n      {\n        name: \"Fish, fingers, baked\",\n        variant: \"Fish Fingers\",\n        carb: 20.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 finger (8.3 x 2.2 x 1.3cm)\", value: 0.25 },\n        ],\n      },\n      {\n        name: \"Fish, fingers, deep fried in peanut oil\",\n        variant: \"Fish Fingers\",\n        carb: 23.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 finger (8.3 x 2.2 x 1.3cm)\", value: 0.25 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Frozen Foods\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Fish, fillet, crumbed, frozen, fried\",\n        variant: \"Crumbed fish\",\n        carb: 12.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fillet\", value: 0.65 },\n        ],\n      },\n      {\n        name: \"Fish, fillet, crumbed, frozen, baked\",\n        variant: \"Crumbed fish\",\n        carb: 11.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fillet\", value: 0.7 },\n        ],\n      },\n      {\n        name: \"Pizza, frozen, Hawaiian & Combination, individual size, baked\",\n        variant: \"Pizza\",\n        carb: 30.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pizza  (1.8 x 12.2cm diameter)\", value: 1.16 },\n        ],\n      },\n      {\n        name: \"Pizza, frozen, Hawaiian & House special, premium, baked\",\n        variant: \"Pizza\",\n        carb: 24.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pizza (2.5 x 24.6cm diameter)\", value: 6.54 },\n        ],\n      },\n      {\n        name: \"Pizza, frozen, meat lovers, premium, baked\",\n        variant: \"Pizza\",\n        carb: 22.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pizza (2.5 x 24.6cm diameter)\", value: 6.75 },\n        ],\n      },\n      {\n        name: \"Spring roll, traditional with meat, baked, Highmark\",\n        variant: \"Highmark, Spring Rolls\",\n        carb: 22,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 roll (8.5 x 3 x 2.5cm)\", value: 0.429 },\n          { name: \"1 roll (12.2 x 4.5 x 3cm)\", value: 1.214 },\n        ],\n      },\n      {\n        name: \"Spring roll, traditional, with meat, deep fried, Highmark\",\n        variant: \"Highmark, Spring Rolls\",\n        carb: 22.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 roll (8.4 x 3.1 x 2.5cm)\", value: 0.431 },\n          { name: \"1 roll (12.2 x 4.5 x 3cm)\", value: 1.21 },\n        ],\n      },\n      {\n        name: \"Spring roll, vegetarian, baked, Highmark\",\n        variant: \"Highmark, Spring Rolls\",\n        carb: 19.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 roll (11.8 x 6 x 2.8cm)\", value: 1.084 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Indian\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Beef korma, takeaway\",\n        variant: \"Curry\",\n        carb: 5.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.479 },\n        ],\n      },\n      {\n        name: \"Beef madras, takeaway\",\n        variant: \"Curry\",\n        carb: 4.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.521 },\n        ],\n      },\n      {\n        name: \"Butter chicken, takeaway\",\n        variant: \"Curry\",\n        carb: 5.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.582 },\n        ],\n      },\n      {\n        name: \"Chicken masala, takeaway\",\n        variant: \"Curry\",\n        carb: 5.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.488 },\n        ],\n      },\n      {\n        name: \"Dhal makani, Indian, takeaway\",\n        variant: \"Curry\",\n        carb: 8.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.596 },\n        ],\n      },\n      {\n        name: \"Rogan josh, Indian, takeaway\",\n        variant: \"Curry\",\n        carb: 3.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.669 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Kentucky Fried Chicken\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Chicken, crumbed, breast, deep fried\",\n        variant: \"Chicken\",\n        carb: 6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.89 },\n        ],\n      },\n      {\n        name: \"Chicken, crumbed, drumstick, deep fried\",\n        variant: \"Chicken\",\n        carb: 8.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.775 },\n        ],\n      },\n      {\n        name: \"Chicken, crumbed, thigh, deep fried\",\n        variant: \"Chicken\",\n        carb: 5.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.82 },\n        ],\n      },\n      {\n        name: \"Chicken, crumbed, wing, deep fried\",\n        variant: \"Chicken\",\n        carb: 6.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.37 },\n        ],\n      },\n      {\n        name: \"Coleslaw, Kentucky Fried Chicken\",\n        variant: \"Coleslaw\",\n        carb: 13.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2 },\n        ],\n      },\n      {\n        name: \"Fries, potato, Kentucky Fried Chicken\",\n        variant: \"Fries\",\n        carb: 32,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 fries\", value: 0.69 },\n        ],\n      },\n      {\n        name: \"Potato & gravy, Kentucky Fried Chicken\",\n        variant: \"name\",\n        carb: 12.1,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n    ],\n  },\n  {\n    name: \"McDonald's\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Big Mac\",\n        variant: \"Burger\",\n        carb: 19.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 burger\", value: 2.04 },\n        ],\n      },\n      {\n        name: \"Filet-o-Fish\",\n        variant: \"Burger\",\n        carb: 24.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 burger\", value: 1.36 },\n        ],\n      },\n      {\n        name: \"Quarter Pounder with cheese\",\n        variant: \"Burger\",\n        carb: 16.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 burger\", value: 1.85 },\n        ],\n      },\n      {\n        name: \"cheeseburger\",\n        variant: \"Burger\",\n        carb: 25.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 burger\", value: 1.37 },\n        ],\n      },\n      {\n        name: \"hamburger\",\n        variant: \"Burger\",\n        carb: 27.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 burger\", value: 0.98 },\n        ],\n      },\n      {\n        name: \"Chicken, nugget, deep fried\",\n        variant: \"Burger\",\n        carb: 6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.89 },\n        ],\n      },\n      {\n        name: \"Fries, potato, McDonald's\",\n        variant: \"Fries\",\n        carb: 37.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 fries\", value: 0.69 },\n        ],\n      },\n      {\n        name: \"Pancake, McDonald's\",\n        variant: \"Breakfast\",\n        carb: 28.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pancake\", value: 0.49 },\n        ],\n      },\n      {\n        name: \"Pie, apple, McDonald's\",\n        variant: \"Pie\",\n        carb: 28.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pie\", value: 0.85 },\n        ],\n      },\n      {\n        name: \"Potato, hash brown, McDonald's\",\n        variant: \"Breakfast\",\n        carb: 25.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.68 },\n        ],\n      },\n      {\n        name: \"Sundae, ice cream, chocolate topping, McDonald's\",\n        variant: \"name\",\n        carb: 30.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.75 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Meat Pies\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Pie, mince, family size\",\n        variant: \"Mince\",\n        carb: 19.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pie (4 x 18.5cm diameter)\", value: 6.35 },\n        ],\n      },\n      {\n        name: \"Pie, savoury, chicken, individual size, ready to eat\",\n        variant: \"Chicken\",\n        carb: 20.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          {\n            name: \"1 pie (3.7 x bottom 9.2 x top 11.3cm diameters)\",\n            value: 2.29,\n          },\n        ],\n      },\n      {\n        name: \"Pie, savoury, egg & bacon, individual size, ready to eat\",\n        variant: \"Bacon & Egg\",\n        carb: 19,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          {\n            name: \"1 pie (3.9 x bottom 8.9 x top 11.0cm diameters)\",\n            value: 1.954,\n          },\n        ],\n      },\n      {\n        name: \"Pie, savoury, mince & cheese, individual size, ready to eat\",\n        variant: \"Mince & Cheese\",\n        carb: 19.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          {\n            name: \"1 pie (3.6 x bottom 8.9 x top 11.1cm diameters)\",\n            value: 2.208,\n          },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Savouries\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Sausage roll, individual size, microwaved\",\n        variant: \"Sausage Roll\",\n        carb: 28.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage roll (9.5 x 4.5 x 2.9cm)\", value: 1.096 },\n        ],\n      },\n      {\n        name: \"Sausage roll, party size, baked\",\n        variant: \"Sausage Roll\",\n        carb: 25.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage roll (5.2 x 3.9 x 3.3cm)\", value: 0.408 },\n        ],\n      },\n      {\n        name: \"Sausage roll, with cheese, baked\",\n        variant: \"Sausage Roll\",\n        carb: 24.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage roll (5.1 x 4 x 3.6cm)\", value: 0.368 },\n        ],\n      },\n      {\n        name: \"Savoury, bacon & egg, baked\",\n        variant: \"Savoury\",\n        carb: 17.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 savoury (2.3 x 5.3cm diameter)\", value: 0.449 },\n        ],\n      },\n      {\n        name: \"Savoury, mince & cheese, heated\",\n        variant: \"Savoury\",\n        carb: 23.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 savoury (2.7 x 5.1cm diameter)\", value: 0.594 },\n        ],\n      },\n      {\n        name: \"Savoury, mince, heated\",\n        variant: \"Savoury\",\n        carb: 22.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 savoury (2.6 x 5.6cm diameter)\", value: 0.532 },\n        ],\n      },\n      {\n        name: \"Savoury, potato top, heated\",\n        variant: \"Savoury\",\n        carb: 21.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 savoury (2.8 x 5.6cm diameter)\", value: 0.592 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Pizza\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Hawaiian, thick crust\",\n        variant: \"name\",\n        carb: 33.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pizza (2.25 x 28.3cm diameter)\", value: 7.42 },\n        ],\n      },\n      {\n        name: \"barbeque chicken, thick crust\",\n        variant: \"name\",\n        carb: 33.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pizza (2.35 x 28.2cm diameter)\", value: 7.15 },\n        ],\n      },\n      {\n        name: \"meat, thick crust\",\n        variant: \"name\",\n        carb: 33.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pizza (2.35 x 27.8cm diameter)\", value: 7 },\n        ],\n      },\n      {\n        name: \"supreme, thin crust, Pizza Hut\",\n        variant: \"name\",\n        carb: 22.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pizza\", value: 3.84 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Thai\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"Beef salad, takeaway\",\n        variant: \"Beef\",\n        carb: 7.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.14 },\n        ],\n      },\n      {\n        name: \"Chicken, green, Thai, takeaway\",\n        variant: \"Chicken Curries\",\n        carb: 5.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.49 },\n        ],\n      },\n      {\n        name: \"Noodle, pad thai with chicken & egg, Thai, takeaway\",\n        variant: \"Noodle\",\n        carb: 16,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.32 },\n        ],\n      },\n      {\n        name: \"Soup, tom yam gai, chicken, Thai, takeaway\",\n        variant: \"Soup\",\n        carb: 1.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.35 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Other\",\n    category: \"Fast Food\",\n    carbs: [\n      {\n        name: \"cheeseburger\",\n        variant: \"Burger\",\n        carb: 21.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 burger\", value: 2.55 },\n        ],\n      },\n      {\n        name: \"hamburger\",\n        variant: \"Burger\",\n        carb: 22.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 burger\", value: 1.72 },\n        ],\n      },\n      {\n        name: \"Fries, potato, straight cut, Independent Shops\",\n        variant: \"Fries\",\n        carb: 26.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 fries\", value: 0.69 },\n        ],\n      },\n      {\n        name: \"Saveloy, battered, fried, Independent Shops\",\n        variant: \"name\",\n        carb: 18.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage\", value: 1.38 },\n        ],\n      },\n    ],\n  },\n  /** Fats and Oils */\n  {\n    name: \"Zero Carbs\",\n    category: \"Fats and Oils\",\n    carbs: [\n      {\n        name: \"Coconut oil\",\n        variant: \"name\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.138 },\n        ],\n      },\n      {\n        name: \"Dripping, beef, Farmland\",\n        variant: \"name\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.035 },\n        ],\n      },\n      {\n        name: \"Lard\",\n        variant: \"name\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.12 },\n        ],\n      },\n      {\n        name: \"Margarine, canola, monounsaturated, 50% fat\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, canola, monounsaturated, 70% fat\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, catering, Choice\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, light, Logical\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.049 },\n        ],\n      },\n      {\n        name: \"Margarine, light, monounsaturated, 55% fat, Olivani\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.047 },\n        ],\n      },\n      {\n        name: \"Margarine, light, polyunsaturated, 50% fat, Flora, fortified\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, monounsaturated, 75% fat, Olivani\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.047 },\n        ],\n      },\n      {\n        name: \"Margarine, original, Flora, fortified\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.045 },\n        ],\n      },\n      {\n        name: \"Margarine, polyunsaturated, 60% fat, Sunrise\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, polyunsaturated, 70% fat, fortified\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, polyunsaturated, 70% fat, reduced salt, fortified\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, rice bran, Alfa One\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, rice bran, light, Alfa One\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, summer gold, canola, monounsaturated, 70% fat, Pams\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Margarine, summer gold, lite, canola, monounsaturated, 50% fat, Pams\",\n        variant: \"Margarine\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Oil, avocado\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.145 },\n        ],\n      },\n      {\n        name: \"Oil, canola\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.141 },\n        ],\n      },\n      {\n        name: \"Oil, corn\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n      {\n        name: \"Oil, flaxseed\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n      {\n        name: \"Oil, rice bran\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n      {\n        name: \"Oil, safflower\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n      {\n        name: \"Oil, sesame\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.143 },\n        ],\n      },\n      {\n        name: \"Oil, soya bean\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.142 },\n        ],\n      },\n      {\n        name: \"Oil, sunflower\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.139 },\n        ],\n      },\n      {\n        name: \"Oil, vegetable, blend\",\n        variant: \"Oil\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n      {\n        name: \"Shortening, Chefade\",\n        variant: \"Shortening\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.12 },\n        ],\n      },\n      {\n        name: \"Shortening, vegetable, Kremelta\",\n        variant: \"Shortening\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.042 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Small amount of Carbs\",\n    category: \"Fats and Oils\",\n    carbs: [\n      {\n        name: \"Oil, olive\",\n        variant: \"Oil\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n      {\n        name: \"Semi soft butter, butter & canola oil, spreadable\",\n        variant: \"Spreadable butter\",\n        carb: 1.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.048 },\n        ],\n      },\n      {\n        name: \"Shortening, suet, Shreddo\",\n        variant: \"Shortening\",\n        carb: 11.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.026 },\n        ],\n      },\n    ],\n  },\n  /** Fin Fishes */\n  {\n    name: \"Zero carbs\",\n    category: \"Fin Fishes\",\n    carbs: [\n      {\n        name: \"Basa, fillet, frozen, flesh, pan-fried with oil, no salt added\",\n        variant: \"Catfish\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fillet (19.6 x 8.2 x 1cm)\", value: 1.593 },\n        ],\n      },\n      {\n        name: \"Eel, smoked\",\n        variant: \"Eel\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Hoki, fillet, frozen, flesh, pan-fried with oil, no salt added\",\n        variant: \"Hoki\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fillet (9.6 x 5.6 x 1.6cm)\", value: 1.593 },\n        ],\n      },\n      {\n        name: \"Salmon, king, fillet, flesh, cold or hot  smoked, New Zealand\",\n        variant: \"Salmon\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup pieces (250mL)\", value: 1.704 },\n          { name: \"1 cup flaked (250mL)\", value: 1.963 },\n          { name: \"1 fillet (15.8 x 6.1 x 2.1cm)\", value: 1.635 },\n        ],\n      },\n      {\n        name: \"Salmon, king, fillet, skin & bones removed, fresh, baked without fat, no salt added, New Zealand\",\n        variant: \"Salmon\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fillet (14.7 x 6.6 x 2.8cm)\", value: 1.992 },\n        ],\n      },\n      {\n        name: \"Salmon, king, fillet, skin & bones removed, fresh, pan-fried with oil, New Zealand\",\n        variant: \"Salmon\",\n        carb: 0.01,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fillet (15.1 x 5.0 x 2.7cm)\", value: 1.722 },\n        ],\n      },\n      {\n        name: \"Salmon, king, fillet, skin & bones removed, fresh, raw, New Zealand\",\n        variant: \"Salmon\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fillet (18.2 x 7.0 x 2.8cm)\", value: 1.882 },\n        ],\n      },\n      {\n        name: \"Salmon, king, fillet, skin & bones removed, fresh, steamed, New Zealand\",\n        variant: \"Salmon\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fillet (15.2 x 5.1 x 2.9cm)\", value: 1.447 },\n        ],\n      },\n      {\n        name: \"Salmon, pink or red, flesh, canned in spring water, drained\",\n        variant: \"Salmon\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.506 },\n        ],\n      },\n      {\n        name: \"Tuna, canned in assorted oil, plain, undrained\",\n        variant: \"Canned Tuna\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.284 },\n        ],\n      },\n      {\n        name: \"Tuna, canned in assorted oils, plain, drained\",\n        variant: \"Canned Tuna\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.544 },\n        ],\n      },\n      {\n        name: \"Tuna, canned in brine, plain, drained\",\n        variant: \"Canned Tuna\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.514 },\n        ],\n      },\n      {\n        name: \"Tuna, canned in spring water, plain, salt added, drained\",\n        variant: \"Canned Tuna\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.549 },\n        ],\n      },\n      {\n        name: \"Tuna, canned in spring water, plain, salt added, undrained\",\n        variant: \"Canned Tuna\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.495 },\n        ],\n      },\n      {\n        name: \"Tuna, in brine, plain, canned, undrained\",\n        variant: \"Canned Tuna\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.508 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Small amount of carbs\",\n    category: \"Fin Fishes\",\n    carbs: [\n      {\n        name: \"Flounder, flesh, baked\",\n        variant: \"Flounder\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Hoki, flesh, baked\",\n        variant: \"Hoki\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Hoki, flesh, deep fried\",\n        variant: \"Hoki\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Kahawai, flesh, baked\",\n        variant: \"Kahawai\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Kahawai, flesh, deep fried\",\n        variant: \"Kahawai\",\n        carb: 0.3,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Orange roughy, flesh, baked\",\n        variant: \"Orange roughy\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Orange roughy, flesh, deep fried\",\n        variant: \"Orange roughy\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Sardines, canned, drained\",\n        variant: \"Sardines\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sardine\", value: 0.12 },\n          { name: \"1 cup (250mL)\", value: 2.012 },\n        ],\n      },\n      {\n        name: \"Snapper, flesh, baked\",\n        variant: \"Snapper\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Snapper, flesh, deep fried\",\n        variant: \"Snapper\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Snapper, flesh, microwaved\",\n        variant: \"Snapper\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Tarakihi, flesh, baked\",\n        variant: \"Tarakihi\",\n        carb: 0.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n      {\n        name: \"Tarakihi, flesh, deep fried\",\n        variant: \"Tarakihi\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup flaked (250mL)\", value: 1.44 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Noticeable amount of carbs\",\n    category: \"Fin Fishes\",\n    carbs: [\n      {\n        name: \"Tuna, canned in oil, assorted flavours, undrained\",\n        variant: \"Canned Tuna\",\n        carb: 2.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.542 },\n        ],\n      },\n      {\n        name: \"Tuna, canned in water, assorted flavours, undrained\",\n        variant: \"Canned Tuna\",\n        carb: 4.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.532 },\n        ],\n      },\n      {\n        name: \"Salmon, assorted flavours, canned, undrained\",\n        variant: \"Canned Salmon\",\n        carb: 1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.543 },\n        ],\n      },\n    ],\n  },\n  /** Fruits */\n  {\n    name: \"Brined Fruit\",\n    category: \"Fruits\",\n    carbs: [\n      {\n        name: \"Olive, in brine\",\n        variant: \"Olive\",\n        carb: 1.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 olive\", value: 0.028 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Canned Fruit\",\n    category: \"Fruits\",\n    carbs: [\n      {\n        name: \"Apricot, canned in juice, undrained\",\n        variant: \"Apricot\",\n        carb: 9.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup halves (250mL)\", value: 2.613 },\n        ],\n      },\n      {\n        name: \"Apricot, canned in syrup, drained\",\n        variant: \"Apricot\",\n        carb: 13.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 half\", value: 0.123 },\n          { name: \"1 cup halves (250mL)\", value: 2.547 },\n        ],\n      },\n      {\n        name: \"Apricot, canned in syrup, undrained\",\n        variant: \"Apricot\",\n        carb: 14.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup halves (250mL)\", value: 2.635 },\n        ],\n      },\n      {\n        name: \"Fruit salad, canned in syrup, undrained\",\n        variant: \"Fruit salad\",\n        carb: 16.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.707 },\n        ],\n      },\n      {\n        name: \"Lychee, canned in syrup, undrained\",\n        variant: \"Lychee\",\n        carb: 17.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.67 },\n        ],\n      },\n      {\n        name: \"Mango, canned in syrup, undrained\",\n        variant: \"Mango\",\n        carb: 16.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.6 },\n        ],\n      },\n      {\n        name: \"Peach, canned in juice, undrained\",\n        variant: \"Peach\",\n        carb: 10.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 2.834 },\n        ],\n      },\n      {\n        name: \"Pear, canned in juice, undrained\",\n        variant: \"Pear\",\n        carb: 8.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.58 },\n        ],\n      },\n      {\n        name: \"Pineapple, canned in juice, drained\",\n        variant: \"Pineapple\",\n        carb: 12.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chunk or pieces (250mL)\", value: 2.176 },\n          { name: \"1 cup crushed (250mL)\", value: 2.514 },\n        ],\n      },\n      {\n        name: \"Pineapple, canned in syrup, drained\",\n        variant: \"Pineapple\",\n        carb: 16.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chunk or pieces (250mL)\", value: 2.176 },\n          { name: \"1 slice (0.8 x 7.4cm diameter)\", value: 0.349 },\n          { name: \"1 cup crushed (250mL)\", value: 2.514 },\n        ],\n      },\n      {\n        name: \"Pineapple, canned in syrup, undrained\",\n        variant: \"Pineapple\",\n        carb: 16.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.767 },\n        ],\n      },\n      {\n        name: \"Plum, canned in syrup, drained\",\n        variant: \"Plum\",\n        carb: 29.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 plum\", value: 0.49 },\n          { name: \"1 cup (250mL)\", value: 1.69 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Cooked Fruit\",\n    category: \"Fruits\",\n    carbs: [\n      {\n        name: \"Apple, cooking, flesh, stewed\",\n        variant: \"Apple\",\n        carb: 8.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.8 },\n        ],\n      },\n      {\n        name: \"Banana, cooking, boiled\",\n        variant: \"Banana\",\n        carb: 26.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.01 },\n        ],\n      },\n      {\n        name: \"Plum, cooking, stewed\",\n        variant: \"Plum\",\n        carb: 6.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.63 },\n        ],\n      },\n      {\n        name: \"Rhubarb, stewed with sugar\",\n        variant: \"Rhubarb\",\n        carb: 10.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.7 },\n        ],\n      },\n      {\n        name: \"Rhubarb, stewed without sugar\",\n        variant: \"Rhubarb\",\n        carb: 1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.65 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Dried Fruit\",\n    category: \"Fruits\",\n    carbs: [\n      {\n        name: \"Apricot, dried, composite\",\n        variant: \"Apricot\",\n        carb: 35.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"5 halves\", value: 0.383 },\n          { name: \"1 cup halves (250mL)\", value: 2.291 },\n        ],\n      },\n      {\n        name: \"Cranberry, dried, sweetened\",\n        variant: \"Cranberry\",\n        carb: 65,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.281 },\n        ],\n      },\n      {\n        name: \"Currant, dried\",\n        variant: \"Currant\",\n        carb: 66.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.54 },\n        ],\n      },\n      {\n        name: \"Date, dried\",\n        variant: \"Date\",\n        carb: 67.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 dates pitted\", value: 0.83 },\n          { name: \"1 cup (250mL)\", value: 1.88 },\n        ],\n      },\n      {\n        name: \"Fig, dried\",\n        variant: \"Fig\",\n        carb: 54.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fig\", value: 0.16 },\n          { name: \"1 cup (250mL)\", value: 2.1 },\n        ],\n      },\n      {\n        name: \"Prune, dried\",\n        variant: \"Prune\",\n        carb: 32.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 prunes\", value: 0.84 },\n        ],\n      },\n      {\n        name: \"Prune, dried, stewed\",\n        variant: \"Prune\",\n        carb: 19.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.24 },\n        ],\n      },\n      {\n        name: \"Raisin, seedless\",\n        variant: \"Raisin\",\n        carb: 66.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"20 raisins\", value: 0.087 },\n          { name: \"1 cup (250mL)\", value: 1.373 },\n        ],\n      },\n      {\n        name: \"Sultana\",\n        carb: 75,\n        variant: \"Sultana\",\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.53 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Frozen Berries\",\n    category: \"Fruits\",\n    carbs: [\n      {\n        name: \"Blackcurrant, Ben Ard, frozen\",\n        variant: \"Blackcurrant\",\n        carb: 8.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.57 },\n        ],\n      },\n      {\n        name: \"Blackcurrant, puree, frozen\",\n        variant: \"Blackcurrant\",\n        carb: 7.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.821 },\n        ],\n      },\n      {\n        name: \"Blueberry, frozen\",\n        variant: \"Blueberry\",\n        carb: 9.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.593 },\n        ],\n      },\n      {\n        name: \"Boysenberry, frozen\",\n        variant: \"Boysenberry\",\n        carb: 6.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.72 },\n        ],\n      },\n      {\n        name: \"Fruit mix, dried\",\n        variant: \"Fruit mix\",\n        carb: 67.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.74 },\n        ],\n      },\n      {\n        name: \"Raspberry, Meeker, frozen\",\n        variant: \"Raspberry\",\n        carb: 5.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.707 },\n        ],\n      },\n      {\n        name: \"Raspberry, Wakefield, frozen\",\n        variant: \"Raspberry\",\n        carb: 5.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.664 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Fruit\",\n    category: \"Fruits\",\n    carbs: [\n      {\n        name: \"Apple, flesh & skin, raw, combined varieties\",\n        variant: \"Apple\",\n        carb: 10.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit (7.0cm diameter)\", value: 1.632 },\n        ],\n      },\n      {\n        name: \"Apple, flesh, raw, combined varieties\",\n        variant: \"Apple\",\n        carb: 10.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit (7.0cm diameter)\", value: 1.436 },\n        ],\n      },\n      {\n        name: \"Apricot, flesh & skin, raw\",\n        variant: \"Apricot\",\n        carb: 8.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 apricot\", value: 0.54 },\n        ],\n      },\n      {\n        name: \"Apricot, flesh & skin, stewed\",\n        variant: \"Apricot\",\n        carb: 5.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.6 },\n        ],\n      },\n      {\n        name: \"Avocado, Hass, New Zealand\",\n        variant: \"Avocado\",\n        carb: 0.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit small (7.8 x 5.7cm diameter)\", value: 1.22 },\n          { name: \"1 fruit large\", value: 1.731 },\n          { name: \"1 cup puree (250mL)\", value: 2.477 },\n        ],\n      },\n      {\n        name: \"Banana, yellow, ripened, raw\",\n        variant: \"Banana\",\n        carb: 20.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit medium (19-20cm long)\", value: 1.108 },\n        ],\n      },\n      {\n        name: \"Blackberry, raw\",\n        variant: \"Blackberry\",\n        carb: 10.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.23 },\n        ],\n      },\n      {\n        name: \"Blackcurrant, raw\",\n        variant: \"Blackcurrant\",\n        carb: 14.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.18 },\n        ],\n      },\n      {\n        name: \"Blueberry, raw\",\n        variant: \"Blueberry\",\n        carb: 9.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.569 },\n        ],\n      },\n      {\n        name: \"Boysenberry, puree, seedless, frozen\",\n        variant: \"Boysenberry\",\n        carb: 7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.647 },\n        ],\n      },\n      {\n        name: \"Boysenberry, raw\",\n        variant: \"Boysenberry\",\n        carb: 7.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.33 },\n        ],\n      },\n      {\n        name: \"Cherry, flesh & skin, raw\",\n        variant: \"Cherry\",\n        carb: 14,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 cherries\", value: 0.67 },\n          { name: \"1 cup (250mL)\", value: 1.5 },\n        ],\n      },\n      {\n        name: \"Feijoa, flesh, raw\",\n        variant: \"Feijoa\",\n        carb: 8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 feijoa (7.0 x 4.4cm diameter)\", value: 0.422 },\n          { name: \"1 cup (250mL)\", value: 2.6 },\n        ],\n      },\n      {\n        name: \"Gooseberry, flesh, skin & seeds, raw\",\n        variant: \"Gooseberry\",\n        carb: 9.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.58 },\n        ],\n      },\n      {\n        name: \"Grape, black, flesh, raw\",\n        variant: \"Grape\",\n        carb: 15.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 grapes\", value: 0.54 },\n          { name: \"1 cup (250mL)\", value: 1.72 },\n        ],\n      },\n      {\n        name: \"Grape, white, flesh & skin, raw\",\n        variant: \"Grape\",\n        carb: 16.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 grapes\", value: 0.764 },\n          { name: \"1 cup (250mL)\", value: 1.69 },\n        ],\n      },\n      {\n        name: \"Grape, red or green, seedless, raw, European type\",\n        variant: \"Grape\",\n        carb: 15.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 grapes\", value: 0.5 },\n        ],\n      },\n      {\n        name: \"Grapefruit, flesh, raw\",\n        variant: \"Grapefruit\",\n        carb: 5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 grapefruit (6.8cm diameter)\", value: 2.36 },\n        ],\n      },\n      {\n        name: \"Juice, lemon, raw\",\n        variant: \"Juice\",\n        carb: 1.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.16 },\n        ],\n      },\n      {\n        name: \"Juice, orange, raw\",\n        variant: \"Juice\",\n        carb: 9.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.58 },\n        ],\n      },\n      {\n        name: \"Kiwifruit, Zespri Gold (Hort16A) Kiwifruit, Zespri, raw\",\n        variant: \"Kiwifruit\",\n        carb: 11.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 0.83 },\n        ],\n      },\n      {\n        name: \"Kiwifruit, Zespri Green (Hayward) Kiwifruit, Zespri, raw\",\n        variant: \"Kiwifruit\",\n        carb: 9.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 0.741 },\n        ],\n      },\n      {\n        name: \"Kiwifruit, Zespri Organic Green (Hayward) Kiwifruit, Zespri, raw\",\n        variant: \"Kiwifruit\",\n        carb: 10.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 kiwifruit\", value: 0.79 },\n        ],\n      },\n      {\n        name: \"Kiwifruit, Zespri SunGold Kiwifruit (Gold3), Zespri, raw\",\n        variant: \"Kiwifruit\",\n        carb: 12.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 0.808 },\n        ],\n      },\n      {\n        name: \"Kiwifruit, Zespri Sweet Green Kiwifruit (Green14), Zespri, raw\",\n        variant: \"Kiwifruit\",\n        carb: 12.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 0.809 },\n        ],\n      },\n      {\n        name: \"Lemon, flesh, raw\",\n        variant: \"Lemon\",\n        carb: 2.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 lemon (4.7cm diameter)\", value: 0.645 },\n        ],\n      },\n      {\n        name: \"Mandarin, flesh, raw\",\n        variant: \"Mandarin\",\n        carb: 9.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mandarin (5-6 cm diameter)\", value: 0.86 },\n        ],\n      },\n      {\n        name: \"Mango, flesh, raw\",\n        variant: \"Mango\",\n        carb: 14.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.76 },\n          { name: \"1 mango\", value: 2.867 },\n        ],\n      },\n      {\n        name: \"Melon, Honeydew, flesh, raw\",\n        variant: \"Melon\",\n        carb: 9.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup diced (250mL)\", value: 1.72 },\n        ],\n      },\n      {\n        name: \"Melon, rock, flesh, raw\",\n        variant: \"Melon\",\n        carb: 6.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup diced (250mL)\", value: 1.68 },\n        ],\n      },\n      {\n        name: \"Nectarine, flesh & skin, raw\",\n        variant: \"Nectarine\",\n        carb: 7.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 1.43 },\n        ],\n      },\n      {\n        name: \"Orange, flesh, raw, USA\",\n        variant: \"Orange\",\n        carb: 8.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit (7.3cm diameter)\", value: 1.494 },\n        ],\n      },\n      {\n        name: \"Passion fruit, flesh & seed, raw\",\n        variant: \"Passion fruit\",\n        carb: 7.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 passionfruit\", value: 0.18 },\n        ],\n      },\n      {\n        name: \"Peach, flesh & skin, raw\",\n        variant: \"Peach\",\n        carb: 7.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 1.38 },\n        ],\n      },\n      {\n        name: \"Pear, nashi, flesh, raw\",\n        variant: \"Pear\",\n        carb: 9.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 nashi pear (7cm diameter)\", value: 2.033 },\n        ],\n      },\n      {\n        name: \"Pear, flesh & skin, raw\",\n        variant: \"Pear\",\n        carb: 10,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 1.22 },\n        ],\n      },\n      {\n        name: \"Persimmon, flesh, raw\",\n        variant: \"Persimmon\",\n        carb: 15.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 persimmon\", value: 0.75 },\n        ],\n      },\n      {\n        name: \"Pineapple, flesh, raw\",\n        variant: \"Pineapple\",\n        carb: 11.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (1.5 x 9.0cm diameter)\", value: 1.1 },\n          { name: \"1 cup chopped (250mL)\", value: 1.64 },\n        ],\n      },\n      {\n        name: \"Plum, Royal Star, flesh, raw\",\n        variant: \"Plum\",\n        carb: 10.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 0.951 },\n        ],\n      },\n      {\n        name: \"Plum, flesh & skin, raw\",\n        variant: \"Plum\",\n        carb: 13.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.74 },\n        ],\n      },\n      {\n        name: \"Strawberry, raw, New Zealand\",\n        variant: \"Strawberry\",\n        carb: 6.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 0.12 },\n          { name: \"1 cup (250mL)\", value: 1.754 },\n        ],\n      },\n      {\n        name: \"Tamarillo, red, flesh & seed, raw\",\n        variant: \"Tamarillo\",\n        carb: 3.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 0.6 },\n        ],\n      },\n      {\n        name: \"Tangelo, flesh, raw\",\n        variant: \"Tangelo\",\n        carb: 7.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 0.9 },\n        ],\n      },\n      {\n        name: \"Tangerine, flesh, raw\",\n        variant: \"Tangerine\",\n        carb: 7.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit large\", value: 0.84 },\n        ],\n      },\n      {\n        name: \"Watermelon, flesh, raw\",\n        variant: \"Watermelon\",\n        carb: 7.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup cubed (250mL)\", value: 2.011 },\n          { name: \"1 wedge (1/12 of fruit)\", value: 2.668 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Bacon & Pork\",\n    category: \"Meat Products\",\n    carbs: [\n      {\n        name: \"Bacon rasher, rindless, pan fried with no added fat, assorted types\",\n        variant: \"Bacon rasher\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 rasher (streaky bacon)\", value: 0.085 },\n          { name: \"1 rasher (middle or shoulder bacon)\", value: 0.238 },\n        ],\n      },\n      {\n        name: \"Ham, sliced\",\n        variant: \"Ham\",\n        carb: 1.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (10.0 x 10.0 x 0.3cm)\", value: 0.29 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Beef\",\n    category: \"Meat Products\",\n    carbs: [\n      {\n        name: \"Beef, pastrami\",\n        variant: \"pastrami\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice\", value: 0.28 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Nugget\",\n    category: \"Meat Products\",\n    carbs: [\n      {\n        name: \"Chicken, nugget, crumbed, baked\",\n        variant: \"Chicken\",\n        carb: 16,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.206 },\n        ],\n      },\n      {\n        name: \"Chicken, nugget, crumbed, deep fried\",\n        variant: \"Chicken\",\n        carb: 14.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 nugget (5.5 x 3.6 x 1.5cm)\", value: 0.175 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Frozen Meal\",\n    category: \"Meat Products\",\n    carbs: [\n      {\n        name: \"roast beef with mashed potato & vegetables, microwaved, Wattie's\",\n        variant: \"Frozen meal\",\n        carb: 12.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 single meal\", value: 4.253 },\n        ],\n      },\n      {\n        name: \"roast beef with roast potato & vegetables, microwaved\",\n        variant: \"Frozen meal\",\n        carb: 12.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 single meal\", value: 3.953 },\n        ],\n      },\n      {\n        name: \"roast lamb with roast potato & vegetables, microwaved\",\n        variant: \"Frozen meal\",\n        carb: 8.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 single meal\", value: 3.835 },\n        ],\n      },\n      {\n        name: \"roast pork with mashed potato & vegetables, microwaved, Wattie's\",\n        variant: \"Frozen meal\",\n        carb: 10.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 single meal\", value: 4.402 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Pate\",\n    category: \"Meat Products\",\n    carbs: [\n      {\n        name: \"chicken liver\",\n        variant: \"chicken liver\",\n        carb: 1.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n      {\n        name: \"pork liver\",\n        variant: \"pork liver\",\n        carb: 0.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Pie\",\n    category: \"Meat Products\",\n    carbs: [\n      {\n        name: \"Cornish pasty\",\n        variant: \"Cornish pasty\",\n        carb: 28.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pasty\", value: 1.4 },\n        ],\n      },\n      {\n        name: \"pork\",\n        variant: \"Pie\",\n        carb: 22.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pie (3 x 10cm diameter)\", value: 1.9 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Sausage\",\n    category: \"Meat Products\",\n    carbs: [\n      {\n        name: \"assorted meats & flavours, dry fried\",\n        variant: \"assorted meats & flavours\",\n        carb: 7.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (11.8 x 3.0cm)\", value: 0.78 },\n        ],\n      },\n      {\n        name: \"assorted meats & flavours, grilled\",\n        variant: \"assorted meats & flavours\",\n        carb: 9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage\", value: 0.78 },\n        ],\n      },\n      {\n        name: \"assorted meats & flavours, precooked, grilled\",\n        variant: \"assorted meats & flavours\",\n        carb: 9.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage\", value: 0.7 },\n        ],\n      },\n      {\n        name: \"beef, barbecued, with no added fat\",\n        variant: \"beef\",\n        carb: 2.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (8.3 x 2.2cm diameter)\", value: 0.299 },\n          { name: \"1 sausage (10.1 x 2.8cm diameter)\", value: 0.619 },\n        ],\n      },\n      {\n        name: \"beef, boiled, drained\",\n        variant: \"beef\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (8.8 x 1.9cm diameter)\", value: 0.572 },\n          { name: \"1 sausage (10.3 x 3.1cm diameter)\", value: 0.722 },\n        ],\n      },\n      {\n        name: \"beef, grilled, with no added fat\",\n        variant: \"beef\",\n        carb: 2.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (8.3 x 2.2cm diameter)\", value: 0.299 },\n          { name: \"1 sausage (10.1 x 2.8cm diameter)\", value: 0.619 },\n        ],\n      },\n      {\n        name: \"beef, pan fried, with no added fat\",\n        variant: \"beef\",\n        carb: 2.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (8.3 x 2.2cm diameter)\", value: 0.299 },\n          { name: \"1 sausage (10.1 x 2.8cm diameter)\", value: 0.619 },\n        ],\n      },\n      {\n        name: \"black pudding, fried\",\n        variant: \"black pudding\",\n        carb: 13.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (4 x 2cm diameter)\", value: 0.3 },\n        ],\n      },\n      {\n        name: \"chicken, barbecued, with no added fat\",\n        variant: \"chicken\",\n        carb: 5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (8.4 x 1.7cm diameter)\", value: 0.232 },\n          { name: \"1 sausage (12.2 x 2.6cm diameter)\", value: 0.706 },\n        ],\n      },\n      {\n        name: \"chicken, boiled, drained\",\n        variant: \"chicken\",\n        carb: 4.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (8.5 x 1.9cm diameter)\", value: 0.26 },\n          { name: \"1 sausage (12.1 x 2.7cm diameter)\", value: 0.712 },\n        ],\n      },\n      {\n        name: \"chicken, grilled, with no added fat\",\n        variant: \"chicken\",\n        carb: 5.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (8.4 x 1.7cm diameter)\", value: 0.232 },\n          { name: \"1 sausage (12.2 x 2.6cm diameter)\", value: 0.706 },\n        ],\n      },\n      {\n        name: \"chicken, pan fried, with no added fat\",\n        variant: \"chicken\",\n        carb: 4.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (8.4 x 1.7cm diameter)\", value: 0.232 },\n          { name: \"1 sausage (12.2 x 2.6cm diameter)\", value: 0.706 },\n        ],\n      },\n      {\n        name: \"frankfurters, precooked\",\n        variant: \"frankfurters\",\n        carb: 2.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 frankfurter (12.5 x 2.5cm diameter)\", value: 0.57 },\n        ],\n      },\n      {\n        name: \"lamb, barbecued, with no added fat\",\n        variant: \"lamb\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (11.3 x 2.8cm diameter)\", value: 0.751 },\n        ],\n      },\n      {\n        name: \"lamb, boiled, drained\",\n        variant: \"lamb\",\n        carb: 2.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (11.3 x 3.0cm diameter)\", value: 0.824 },\n        ],\n      },\n      {\n        name: \"lamb, grilled, with no added fat\",\n        variant: \"lamb\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (11.3 x 2.8cm diameter)\", value: 0.751 },\n        ],\n      },\n      {\n        name: \"lamb, pan fried, with no added fat\",\n        variant: \"lamb\",\n        carb: 2.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (11.3 x 2.8cm diameter)\", value: 0.751 },\n        ],\n      },\n      {\n        name: \"pork, barbecued, with no added fat\",\n        variant: \"pork\",\n        carb: 2.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (10.5 x 2.8cm diameter)\", value: 0.696 },\n        ],\n      },\n      {\n        name: \"pork, boiled, drained\",\n        variant: \"pork\",\n        carb: 2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (10.4 x 3.0cm diameter)\", value: 0.756 },\n        ],\n      },\n      {\n        name: \"pork, grilled, with no added fat\",\n        variant: \"pork\",\n        carb: 2.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (10.5 x 2.8cm diameter)\", value: 0.696 },\n        ],\n      },\n      {\n        name: \"pork, pan fried, with no added fat\",\n        variant: \"pork\",\n        carb: 2.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 sausage (10.5 x 2.8cm diameter)\", value: 0.696 },\n        ],\n      },\n      {\n        name: \"salami assorted meats & flavours\",\n        variant: \"salami assorted meats & flavours\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (0.2 x 7.4cm diameter)\", value: 0.079 },\n        ],\n      },\n      {\n        name: \"salami assorted meats & flavours, acidulated, heat treated\",\n        variant: \"salami assorted meats & flavours\",\n        carb: 0.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (0.2 x 7.8cm diameter)\", value: 0.083 },\n        ],\n      },\n      {\n        name: \"saveloy, boiled\",\n        variant: \"saveloy\",\n        carb: 5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 saveloy\", value: 0.85 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Miscellaneous\",\n    category: \"Miscellaneous\",\n    carbs: [\n      {\n        name: \"Coffee whitener, powder\",\n        variant: \"Coffee whitener\",\n        carb: 54.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.081 },\n        ],\n      },\n      {\n        name: \"Salt, table, iodised\",\n        variant: \"Salt\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.054 },\n        ],\n      },\n      {\n        name: \"Salt, table, uniodised\",\n        variant: \"Salt\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.054 },\n        ],\n      },\n      {\n        name: \"Seed, poppy\",\n        variant: \"Seed\",\n        carb: 3.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.03 },\n        ],\n      },\n      {\n        name: \"Spread, yeast extract, Marmite, Sanitarium, fortified\",\n        variant: \"Spread\",\n        carb: 14.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.058 },\n        ],\n      },\n      {\n        name: \"Spread, yeast extract, Vegemite, Kraft, fortified\",\n        variant: \"Spread\",\n        carb: 3.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.051 },\n        ],\n      },\n      {\n        name: \"Stock, Oxo cubes\",\n        variant: \"Stock\",\n        carb: 11.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (2cm)\", value: 0.063 },\n        ],\n      },\n      {\n        name: \"Vinegar\",\n        variant: \"Vinegar\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.153 },\n        ],\n      },\n      {\n        name: \"Vinegar, cider\",\n        variant: \"Vinegar\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.15 },\n        ],\n      },\n      {\n        name: \"Yeast, baker's, dried\",\n        variant: \"Yeast\",\n        carb: 3.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.041 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Coconut\",\n    category: \"Nuts and Seeds\",\n    carbs: [\n      {\n        name: \"cream, premium\",\n        variant: \"cream\",\n        carb: 1.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.552 },\n        ],\n      },\n      {\n        name: \"desiccated\",\n        variant: \"desiccated\",\n        carb: 6.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.066 },\n          { name: \"1 cup (250mL)\", value: 1.106 },\n        ],\n      },\n      {\n        name: \"flesh, raw\",\n        variant: \"flesh\",\n        carb: 3.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL) grated\", value: 0.94 },\n        ],\n      },\n      {\n        name: \"milk, standard\",\n        variant: \"milk\",\n        carb: 1.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.502 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Nuts\",\n    category: \"Nuts and Seeds\",\n    carbs: [\n      {\n        name: \"almond, dry roasted, salt added\",\n        variant: \"almond\",\n        carb: 5.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 almonds\", value: 0.129 },\n        ],\n      },\n      {\n        name: \"almond, dry roasted, unblanched, no salt added\",\n        variant: \"almond\",\n        carb: 5.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 almonds\", value: 0.118 },\n        ],\n      },\n      {\n        name: \"almond, kernels, dried, raw, unblanched\",\n        variant: \"almond\",\n        carb: 5.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 almonds\", value: 0.112 },\n        ],\n      },\n      {\n        name: \"brazilnut, raw\",\n        variant: \"brazilnut\",\n        carb: 3.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 brazilnuts\", value: 0.38 },\n        ],\n      },\n      {\n        name: \"cashew, raw\",\n        variant: \"cashew\",\n        carb: 16.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 nuts\", value: 0.125 },\n        ],\n      },\n      {\n        name: \"cashew, roasted, no salt added\",\n        variant: \"cashew\",\n        carb: 26.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 nuts\", value: 0.124 },\n        ],\n      },\n      {\n        name: \"cashew, roasted, salt added\",\n        variant: \"cashew\",\n        carb: 26.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 nuts\", value: 0.125 },\n        ],\n      },\n      {\n        name: \"hazelnut, whole, skin on, raw\",\n        variant: \"hazelnut\",\n        carb: 4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 kernels\", value: 0.11 },\n        ],\n      },\n      {\n        name: \"macadamia, raw\",\n        variant: \"macadamia\",\n        carb: 4.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 nuts\", value: 0.196 },\n        ],\n      },\n      {\n        name: \"macadamia, roasted with oil, salt added\",\n        variant: \"macadamia\",\n        carb: 10.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 nuts\", value: 0.196 },\n        ],\n      },\n      {\n        name: \"mixed, salted\",\n        variant: \"mixed\",\n        carb: 10.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.5 },\n        ],\n      },\n      {\n        name: \"peanut, all types, dry roasted, no salt added\",\n        variant: \"peanut\",\n        carb: 13.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 peanuts\", value: 0.065 },\n        ],\n      },\n      {\n        name: \"peanut, all types, roasted with oil, no salt added\",\n        variant: \"peanut\",\n        carb: 13.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 peanuts\", value: 0.065 },\n        ],\n      },\n      {\n        name: \"pecan, dried, raw\",\n        variant: \"pecan\",\n        carb: 13.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 whole nuts\", value: 0.211 },\n        ],\n      },\n      {\n        name: \"pine, raw\",\n        variant: \"pine\",\n        carb: 12.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 nuts\", value: 0.016 },\n          { name: \"1 tablespoon (15mL)\", value: 0.1 },\n        ],\n      },\n      {\n        name: \"pistachio, raw\",\n        variant: \"pistachio\",\n        carb: 7.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 kernels\", value: 0.064 },\n        ],\n      },\n      {\n        name: \"walnut, kernel, halves & pieces, raw\",\n        variant: \"walnut\",\n        carb: 2.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup halves (250mL)\", value: 1.148 },\n          { name: \"1 cup pieces (250mL)\", value: 1.336 },\n        ],\n      },\n      {\n        name: \"almond, roasted with oil, unblanched, no salt added\",\n        variant: \"almond\",\n        carb: 5.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 almonds\", value: 0.129 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Peanut butter\",\n    category: \"Nuts and Seeds\",\n    carbs: [\n      {\n        name: \"smooth & crunchy, no sugar or salt added\",\n        variant: \"no sugar or salt added\",\n        carb: 10.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.064 },\n          { name: \"1 tablespoon (15mL)\", value: 0.192 },\n        ],\n      },\n      {\n        name: \"smooth & crunchy, salt & sugar added\",\n        variant: \"salt & sugar added\",\n        carb: 16.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.062 },\n          { name: \"1 tablespoon (15mL)\", value: 0.186 },\n        ],\n      },\n      {\n        name: \"smooth & crunchy, salt added, no sugar added\",\n        variant: \"salt added, no sugar added\",\n        carb: 10.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.061 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Seeds\",\n    category: \"Nuts and Seeds\",\n    carbs: [\n      {\n        name: \"pumpkin & squash, kernel, dried\",\n        variant: \"pumpkin & squash\",\n        carb: 4.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.38 },\n        ],\n      },\n      {\n        name: \"sesame butter, tahini\",\n        variant: \"sesame butter\",\n        carb: 1.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.16 },\n        ],\n      },\n      {\n        name: \"sesame, dried, raw\",\n        variant: \"sesame\",\n        carb: 8.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.086 },\n        ],\n      },\n      {\n        name: \"sunflower, kernel, dried\",\n        variant: \"sunflower\",\n        carb: 10.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon ground (15mL)\", value: 0.069 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Recipes\",\n    category: \"Recipes\",\n    carbs: [\n      {\n        name: \"Cake, chocolate, baked, iced with butter icing\",\n        variant: \"Cake\",\n        carb: 54.7,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Cake, sponge, fat added, baked\",\n        variant: \"Cake\",\n        carb: 46,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Cake, sponge, no fat added, baked\",\n        variant: \"Cake\",\n        carb: 48.6,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Custard square, baked\",\n        variant: \"Custard square\",\n        carb: 17.6,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Dip, guacamole\",\n        variant: \"Dip\",\n        carb: 1.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.147 },\n          { name: \"1 cup (250mL)\", value: 2.45 },\n        ],\n      },\n      {\n        name: \"Lemon curd, cooked\",\n        variant: \"Lemon curd\",\n        carb: 29.4,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Meringue, baked\",\n        variant: \"Meringue\",\n        carb: 69.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 meringue (7.5cm diameter)\", value: 0.3 },\n        ],\n      },\n      {\n        name: \"Mincemeat, fruit, Christmas\",\n        variant: \"Mincemeat\",\n        carb: 42.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.436 },\n        ],\n      },\n      {\n        name: \"Omelette, cheese, cooked\",\n        variant: \"Omelette\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 egg omelette\", value: 0.78 },\n          { name: \"1 cup (250mL)\", value: 2.56 },\n        ],\n      },\n      {\n        name: \"Omelette, plain, cooked\",\n        variant: \"Omelette\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 egg omelette\", value: 0.64 },\n        ],\n      },\n      {\n        name: \"Pastry, short, butter, baked\",\n        variant: \"Pastry\",\n        carb: 47.6,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Pie, lemon meringue, baked\",\n        variant: \"Pie\",\n        carb: 36.6,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Pudding, rice, cocoa & coconut, cooked\",\n        variant: \"Pudding\",\n        carb: 20.8,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Pudding, sponge, fruit, steamed\",\n        variant: \"Pudding\",\n        carb: 47.7,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Quiche, spinach, baked\",\n        variant: \"Quiche\",\n        carb: 14.2,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Scone, wholemeal, baked\",\n        variant: \"Scone\",\n        carb: 37.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"whole\", value: 0.5 },\n        ],\n      },\n      {\n        name: \"Shortbread, homemade, baked\",\n        variant: \"Shortbread\",\n        carb: 56.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.13 },\n        ],\n      },\n      {\n        name: \"Tart, jam, baked\",\n        variant: \"Tart\",\n        carb: 53.4,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n    ],\n  },\n  {\n    name: \"Dip\",\n    category: \"Sauces & Condiments\",\n    carbs: [\n      {\n        name: \"sour cream, assorted flavours, 30% fat, La Bonne\",\n        variant: \"sour cream\",\n        carb: 5.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.142 },\n        ],\n      },\n      {\n        name: \"sour cream, lite, assorted flavours, 7% fat\",\n        variant: \"sour cream\",\n        carb: 7.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.158 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Dressings\",\n    category: \"Sauces & Condiments\",\n    carbs: [\n      {\n        name: \"coleslaw, Lite, Eta\",\n        variant: \"coleslaw\",\n        carb: 20.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.152 },\n        ],\n      },\n      {\n        name: \"French, Kraft\",\n        variant: \"French\",\n        carb: 8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.15 },\n        ],\n      },\n      {\n        name: \"Italian, Kraft\",\n        variant: \"Italian\",\n        carb: 5.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.147 },\n        ],\n      },\n      {\n        name: \"mayonnaise, commercial\",\n        variant: \"mayonnaise\",\n        carb: 18.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.147 },\n        ],\n      },\n      {\n        name: \"mayonnaise, reduced fat, commercial\",\n        variant: \"mayonnaise\",\n        carb: 23.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.138 },\n        ],\n      },\n      {\n        name: \"thousand island, Eta\",\n        variant: \"thousand island\",\n        carb: 15.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.156 },\n        ],\n      },\n      {\n        name: \"vinaigrette\",\n        variant: \"vinaigrette\",\n        carb: 10,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.16 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Gravy\",\n    category: \"Sauces & Condiments\",\n    carbs: [\n      {\n        name: \"dry powder mix, assorted flavours, prepared with water\",\n        variant: \"dry powder mix\",\n        carb: 4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.514 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Hummus\",\n    category: \"Sauces & Condiments\",\n    carbs: [\n      {\n        name: \"original, 6.5% fat\",\n        variant: \"original\",\n        carb: 11.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.156 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Pickle\",\n    category: \"Sauces & Condiments\",\n    carbs: [\n      {\n        name: \"sweet\",\n        variant: \"sweet\",\n        carb: 34,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.17 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Sauces\",\n    category: \"Sauces & Condiments\",\n    carbs: [\n      {\n        name: \"chilli\",\n        variant: \"chilli\",\n        carb: 17.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.17 },\n        ],\n      },\n      {\n        name: \"chilli, sweet, commercial\",\n        variant: \"chilli\",\n        carb: 45.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.184 },\n        ],\n      },\n      {\n        name: \"fish\",\n        variant: \"fish\",\n        carb: 4.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.182 },\n        ],\n      },\n      {\n        name: \"pasta, chunky vegetable, tomato based, heated\",\n        variant: \"pasta\",\n        carb: 10.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.734 },\n        ],\n      },\n      {\n        name: \"simmer, butter chicken, heated\",\n        variant: \"simmer\",\n        carb: 9.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.676 },\n        ],\n      },\n      {\n        name: \"simmer, korma, cream & coconut base\",\n        variant: \"simmer\",\n        carb: 6.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.662 },\n        ],\n      },\n      {\n        name: \"simmer, satay, heated\",\n        variant: \"simmer\",\n        carb: 12,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.71 },\n        ],\n      },\n      {\n        name: \"simmer, sweet & sour, heated\",\n        variant: \"simmer\",\n        carb: 27,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.827 },\n        ],\n      },\n      {\n        name: \"soy, commercial\",\n        variant: \"soy\",\n        carb: 4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.176 },\n        ],\n      },\n      {\n        name: \"soy, reduced salt, commercial\",\n        variant: \"soy\",\n        carb: 3.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.172 },\n        ],\n      },\n      {\n        name: \"tartar, Eta\",\n        variant: \"tartar\",\n        carb: 7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.146 },\n        ],\n      },\n      {\n        name: \"tomato\",\n        variant: \"tomato\",\n        carb: 24.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.165 },\n        ],\n      },\n      {\n        name: \"tomato, ketchup\",\n        variant: \"tomato\",\n        carb: 24.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.063 },\n        ],\n      },\n      {\n        name: \"Worcestershire\",\n        variant: \"Worcestershire\",\n        carb: 17.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.18 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Shellfishes\",\n    category: \"Shellfishes\",\n    carbs: [\n      {\n        name: \"Cockle, boiled\",\n        variant: \"Cockle\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.5 },\n        ],\n      },\n      {\n        name: \"Crab, meat stick, surimi\",\n        variant: \"Crab\",\n        carb: 6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 stick\", value: 0.41 },\n          { name: \"1 cup chunks or flakes (250mL)\", value: 1.33 },\n        ],\n      },\n      {\n        name: \"Kina, roe, raw\",\n        variant: \"Kina\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n      {\n        name: \"Mussel, green, meat, boiled\",\n        variant: \"Mussel\",\n        carb: 5.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mussel\", value: 0.152 },\n          { name: \"1 cup (250mL)\", value: 2.16 },\n        ],\n      },\n      {\n        name: \"Mussel, green, meat, fresh, raw\",\n        variant: \"Mussel\",\n        carb: 3.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mussel\", value: 0.247 },\n          { name: \"1 cup (250mL)\", value: 2.39 },\n        ],\n      },\n      {\n        name: \"Mussel, green, meat, marinated, assorted flavoured, drained, ready to eat, Sealord\",\n        variant: \"Mussel\",\n        carb: 8.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mussel\", value: 0.16 },\n          { name: \"1 cup (250mL)\", value: 2.812 },\n        ],\n      },\n      {\n        name: \"Mussel, green, meat, marinated, drained, ready to eat, Talley's\",\n        variant: \"Mussel\",\n        carb: 6.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mussel\", value: 0.16 },\n          { name: \"1 cup (250mL)\", value: 2.5 },\n        ],\n      },\n      {\n        name: \"Mussel, green, meat, smoked, flavoured, ready to eat, Garlic, Aqua Fresh\",\n        variant: \"Mussel\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mussel\", value: 0.096 },\n          { name: \"1 cup (250mL)\", value: 2.793 },\n        ],\n      },\n      {\n        name: \"Mussel, green, meat, smoked, ready to eat, Natural, Aqua Fresh\",\n        variant: \"Mussel\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mussel\", value: 0.098 },\n          { name: \"1 cup (250mL)\", value: 2.85 },\n        ],\n      },\n      {\n        name: \"Oyster, dredge, raw\",\n        variant: \"Oyster\",\n        carb: 1.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 oyster\", value: 0.15 },\n        ],\n      },\n      {\n        name: \"Oyster, battered, deep fried in peanut oil\",\n        variant: \"Oyster\",\n        carb: 9.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 oyster\", value: 0.23 },\n        ],\n      },\n      {\n        name: \"Paua, fritter, deep fried\",\n        variant: \"Paua\",\n        carb: 27.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 paua fritter\", value: 1.84 },\n        ],\n      },\n      {\n        name: \"Pipi, flesh, raw\",\n        variant: \"Pipi\",\n        carb: 0.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 pipi\", value: 0.05 },\n        ],\n      },\n      {\n        name: \"Prawn, king, flesh, cooked\",\n        variant: \"Prawn\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 prawn\", value: 0.16 },\n        ],\n      },\n      {\n        name: \"Prawn, king, flesh, raw\",\n        variant: \"Prawn\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 prawn\", value: 0.19 },\n        ],\n      },\n      {\n        name: \"Scallop, battered, deep fried\",\n        variant: \"Scallop\",\n        carb: 9.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 scallop\", value: 0.24 },\n          { name: \"1 cup (250mL)\", value: 1.42 },\n        ],\n      },\n      {\n        name: \"Scallop, raw\",\n        variant: \"Scallop\",\n        carb: 2.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 scallop\", value: 0.14 },\n        ],\n      },\n      {\n        name: \"Shrimp, canned, drained\",\n        variant: \"Shrimp\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.35 },\n        ],\n      },\n      {\n        name: \"Squid, in flour, fried\",\n        variant: \"Squid\",\n        carb: 6.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 squid ring\", value: 0.2 },\n          { name: \"1 cup (250mL)\", value: 1.58 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Snack Foods\",\n    category: \"Snack Foods\",\n    carbs: [\n      {\n        name: \"Corn chip, assorted flavours, salted, fried in assorted oils\",\n        variant: \"Corn chip\",\n        carb: 58.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or crisps\", value: 0.252 },\n        ],\n      },\n      {\n        name: \"Corn snack, extruded, assorted shapes, cheese flavour, salted\",\n        variant: \"Corn snack\",\n        carb: 49,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or crisps\", value: 0.144 },\n        ],\n      },\n      {\n        name: \"Fruit bar, wholemeal, assorted flavours, Mother Earth\",\n        variant: \"Fruit bar\",\n        carb: 64.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar\", value: 0.5 },\n        ],\n      },\n      {\n        name: \"Fruit leather, apricot\",\n        variant: \"Fruit leather\",\n        carb: 58.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 leather\", value: 0.4 },\n        ],\n      },\n      {\n        name: \"Fruit roll, strawberry, Uncle Tobys\",\n        variant: \"Fruit roll\",\n        carb: 74.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 roll\", value: 0.21 },\n        ],\n      },\n      {\n        name: \"Muesli bar, chocolate chip\",\n        variant: \"Muesli bar\",\n        carb: 66,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar\", value: 0.32 },\n        ],\n      },\n      {\n        name: \"Muesli bar, chocolate coated, Snacker\",\n        variant: \"Muesli bar\",\n        carb: 65.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar\", value: 0.33 },\n        ],\n      },\n      {\n        name: \"Muesli bar, fruit & nut\",\n        variant: \"Muesli bar\",\n        carb: 53.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar\", value: 0.45 },\n        ],\n      },\n      {\n        name: \"Muesli bar, fruit filled, twisted, assorted flavours\",\n        variant: \"Muesli bar\",\n        carb: 69,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar (9.3 x 3.5 x 1.8cm)\", value: 0.4 },\n        ],\n      },\n      {\n        name: \"Muesli bar, fruit filled, wholemeal, assorted flavours\",\n        variant: \"Muesli bar\",\n        carb: 68.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar\", value: 0.5 },\n        ],\n      },\n      {\n        name: \"Muesli bar, yoghurt coated\",\n        variant: \"Muesli bar\",\n        carb: 67,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar\", value: 0.33 },\n        ],\n      },\n      {\n        name: \"Multigrain chip, assorted flavours, Grainwaves, Bluebird\",\n        variant: \"Multigrain chip\",\n        carb: 63.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.35 },\n        ],\n      },\n      {\n        name: \"Nut bar, peanut & chocolate, Choc Peanut, Tasti\",\n        variant: \"Nut bar\",\n        carb: 33.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar (9.0 x 3.1 x 1.8cm)\", value: 0.383 },\n        ],\n      },\n      {\n        name: \"Nut bar, peanut & chocolate, Chocolate Nut Bar Original, Nice & Natural\",\n        variant: \"Nut bar\",\n        carb: 37.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar (8.8 x 3.3 x 1.4cm)\", value: 0.326 },\n        ],\n      },\n      {\n        name: \"Popcorn, air popped\",\n        variant: \"Popcorn\",\n        carb: 55.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.106 },\n        ],\n      },\n      {\n        name: \"Popcorn, buttered, salted, Pop N Good\",\n        variant: \"Popcorn\",\n        carb: 50.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.1 },\n        ],\n      },\n      {\n        name: \"Potato chip or crisp, assorted flavours, salted, fried in assorted oils\",\n        variant: \"Potato chip or crisp\",\n        carb: 42.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or crisps\", value: 0.236 },\n        ],\n      },\n      {\n        name: \"Potato chip or crisp, plain, salted, fried in assorted oils\",\n        variant: \"Potato chip or crisp\",\n        carb: 44,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or crisps\", value: 0.223 },\n        ],\n      },\n      {\n        name: \"Pretzels, wheat flour, salted, baked\",\n        variant: \"Pretzels\",\n        carb: 64.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.524 },\n        ],\n      },\n      {\n        name: \"Snack, cassava crisps, plain or assorted flavours, salt added\",\n        variant: \"Snack\",\n        carb: 63.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or crisps\", value: 0.115 },\n        ],\n      },\n      {\n        name: \"Snack, kumara chips, plain or assorted flavours\",\n        variant: \"Snack\",\n        carb: 48.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or crisps\", value: 0.251 },\n        ],\n      },\n      {\n        name: \"Snack, popcorn, candied\",\n        variant: \"Snack\",\n        carb: 79.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.216 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Soups\",\n    category: \"Soups\",\n    carbs: [\n      {\n        name: \"beef, instant dry mix, prepared with water, Continental\",\n        variant: \"beef\",\n        carb: 8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.5 },\n        ],\n      },\n      {\n        name: \"bone & vegetable broth\",\n        variant: \"bone & vegetable broth\",\n        carb: 1.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.54 },\n        ],\n      },\n      {\n        name: \"chicken & corn, heated\",\n        variant: \"chicken & corn\",\n        carb: 3.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.707 },\n        ],\n      },\n      {\n        name: \"chicken & corn, heated, Wattie's\",\n        variant: \"chicken & corn\",\n        carb: 3.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.517 },\n        ],\n      },\n      {\n        name: \"chicken & vegetable, heated, Wattie's\",\n        variant: \"chicken & vegetable\",\n        carb: 3.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.706 },\n        ],\n      },\n      {\n        name: \"chicken noodle, instant dry mix, prepared with water, Continental\",\n        variant: \"chicken noodle\",\n        carb: 9.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.75 },\n        ],\n      },\n      {\n        name: \"chicken noodle, instant dry mix, prepared with water, Maggi\",\n        variant: \"chicken noodle\",\n        carb: 2.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.75 },\n        ],\n      },\n      {\n        name: \"cream of chicken, canned\",\n        variant: \"cream of chicken\",\n        carb: 4.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.59 },\n        ],\n      },\n      {\n        name: \"cream of mushroom, canned\",\n        variant: \"cream of mushroom\",\n        carb: 3.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.61 },\n        ],\n      },\n      {\n        name: \"cream of tomato, canned\",\n        variant: \"cream of tomato\",\n        carb: 5.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.6 },\n        ],\n      },\n      {\n        name: \"creme of chicken, instant dry mix, prepared with water, Maggi\",\n        variant: \"creme of chicken\",\n        carb: 3.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.65 },\n        ],\n      },\n      {\n        name: \"creme of vegetable, instant dry mix, prepared with water, Maggi\",\n        variant: \"creme of vegetable\",\n        carb: 3.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.5 },\n        ],\n      },\n      {\n        name: \"lentil & vegetables, heated, Wattie's\",\n        variant: \"lentil & vegetables\",\n        carb: 5.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.704 },\n        ],\n      },\n      {\n        name: \"minestrone, instant dry mix, prepared with water\",\n        variant: \"minestrone\",\n        carb: 3.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.68 },\n        ],\n      },\n      {\n        name: \"mushroom, instant dry mix, prepared with water, Maggi\",\n        variant: \"mushroom\",\n        carb: 3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.5 },\n        ],\n      },\n      {\n        name: \"pumpkin, heated\",\n        variant: \"pumpkin\",\n        carb: 9.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.75 },\n        ],\n      },\n      {\n        name: \"pumpkin, heated, Wattie's\",\n        variant: \"pumpkin\",\n        carb: 3.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.487 },\n        ],\n      },\n      {\n        name: \"seafood chowder, heated\",\n        variant: \"seafood chowder\",\n        carb: 4.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.635 },\n        ],\n      },\n      {\n        name: \"tomato, instant dry mix, prepared with water, Continental\",\n        variant: \"tomato\",\n        carb: 6.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.57 },\n        ],\n      },\n      {\n        name: \"Tuscan tomato, heated, Wattie's\",\n        variant: \"Tuscan tomato\",\n        carb: 4.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.601 },\n        ],\n      },\n      {\n        name: \"vegetable, canned\",\n        variant: \"vegetable\",\n        carb: 6.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.57 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Chocolate\",\n    category: \"Sugars, Confectionaries and Sweet spreads\",\n    carbs: [\n      {\n        name: \"bar & bite size, Moro, Cadbury\",\n        variant: \"Moro\",\n        carb: 58.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 treat size bar (4.5 x 2.2 x 1.6cm)\", value: 0.181 },\n          { name: \"1 bar (11.4 x 3.1 x 1.9cm)\", value: 0.651 },\n        ],\n      },\n      {\n        name: \"bar & block, Dairy Milk Fruit & Nut, Cadbury\",\n        variant: \"Dairy Milk Fruit & Nut\",\n        carb: 52.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar (12.8 x 3.4 x 1.2cm)\", value: 0.515 },\n          { name: \"1 block (20.5 x 9.5 x 1.0cm)\", value: 2.057 },\n        ],\n      },\n      {\n        name: \"bar & block, Dairy Milk with Crunchie, Cadbury\",\n        variant: \"Dairy Milk with Crunchie\",\n        carb: 59.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 block (20.4 x 9.5 x 0.9cm)\", value: 1.981 },\n          { name: \"1 block (20.1 x 16.2 x 1.0cm)\", value: 3.547 },\n        ],\n      },\n      {\n        name: \"bar & block, Energy, Cadbury\",\n        variant: \"Energy\",\n        carb: 53.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar (12.5 x 3.1 x 1.1cm)\", value: 0.512 },\n          { name: \"1 block (20.3 x 9.4 x 0.9cm)\", value: 2.048 },\n        ],\n      },\n      {\n        name: \"bar, Bounty, Mars\",\n        variant: \"Bounty\",\n        carb: 55.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar\", value: 0.5 },\n        ],\n      },\n      {\n        name: \"bar, Gold Totally Nuts Bar, Moro, Cadbury\",\n        variant: \"Gold Totally Nuts Bar\",\n        carb: 43.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar (10.9 x 2.7 x 2.2cm)\", value: 0.628 },\n        ],\n      },\n      {\n        name: \"bar, Mars\",\n        variant: \"Mars\",\n        carb: 63.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 bar\", value: 0.6 },\n        ],\n      },\n      {\n        name: \"bar, milk\",\n        variant: \"milk\",\n        carb: 56.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small bar\", value: 0.5 },\n          { name: \"1 large bar\", value: 1.2 },\n        ],\n      },\n      {\n        name: \"block & slab, Peanut, Whittaker's\",\n        variant: \"Peanut\",\n        carb: 45.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slab (7.4 x 3.6 x 1.7cm)\", value: 0.52 },\n          { name: \"1 block (19.9 x 10.6 x 1.1cm)\", value: 2.594 },\n        ],\n      },\n      {\n        name: \"compound\",\n        variant: \"compound\",\n        carb: 65.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.155 },\n        ],\n      },\n      {\n        name: \"dark\",\n        variant: \"dark\",\n        carb: 62.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup grated (250mL)\", value: 0.88 },\n        ],\n      },\n      {\n        name: \"fancy & filled\",\n        variant: \"fancy & filled\",\n        carb: 69.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 chocolate\", value: 0.05 },\n        ],\n      },\n      {\n        name: \"white\",\n        variant: \"white\",\n        carb: 55.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup grated (250mL)\", value: 0.88 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Gum\",\n    category: \"Sugars, Confectionaries and Sweet spreads\",\n    carbs: [\n      {\n        name: \"Fruit gum\",\n        variant: \"\",\n        carb: 57.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 fruit gum\", value: 0.02 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Sweet Spreads\",\n    category: \"Sugars, Confectionaries and Sweet spreads\",\n    carbs: [\n      {\n        name: \"Honey\",\n        variant: \"\",\n        carb: 79.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.21 },\n        ],\n      },\n      {\n        name: \"Jam, berry fruit\",\n        variant: \"berry fruit\",\n        carb: 69.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.156 },\n        ],\n      },\n      {\n        name: \"Jam, stone fruit\",\n        variant: \"stone fruit\",\n        carb: 66.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.163 },\n        ],\n      },\n      {\n        name: \"Marmalade\",\n        variant: \"\",\n        carb: 67.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.2 },\n        ],\n      },\n      {\n        name: \"Spread, hazelnut, Nutella, Ferrero\",\n        variant: \"hazelnut\",\n        carb: 56.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.14 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Frozen Treats\",\n    category: \"Sugars, Confectionaries and Sweet spreads\",\n    carbs: [\n      {\n        name: \"Ice block, frozen\",\n        variant: \"frozen\",\n        carb: 17.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 ice-block\", value: 0.8 },\n          { name: \"1 cup (250mL)\", value: 1.93 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Lollies\",\n    category: \"Sugars, Confectionaries and Sweet spreads\",\n    carbs: [\n      {\n        name: \"Jellybeans, Jaybees, Pascall\",\n        variant: \"Jaybees\",\n        carb: 91.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 jellybean\", value: 0.02 },\n        ],\n      },\n      {\n        name: \"Liquorice, allsorts\",\n        variant: \"allsorts\",\n        carb: 73.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 stick (1.5 x 1.6cm diameter)\", value: 0.038 },\n        ],\n      },\n      {\n        name: \"Liquorice, black\",\n        variant: \"black\",\n        carb: 75.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.02 },\n        ],\n      },\n      {\n        name: \"Lollies, Minties, Pascall\",\n        variant: \"Minties\",\n        carb: 86.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mintie\", value: 0.07 },\n        ],\n      },\n      {\n        name: \"Lollipop, assorted flavours, Chupa Chup\",\n        variant: \"assorted flavours\",\n        carb: 84.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 lollipop\", value: 0.131 },\n        ],\n      },\n      {\n        name: \"Marshmallow, pink & white\",\n        variant: \"pink & white\",\n        carb: 78.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 marshmallow\", value: 0.04 },\n          { name: \"1 cup chopped (250mL)\", value: 0.82 },\n        ],\n      },\n      {\n        name: \"Sweet, hard, boiled\",\n        variant: \"hard\",\n        carb: 83.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 boiled sweet\", value: 0.05 },\n        ],\n      },\n      {\n        name: \"Sweet, peppermint\",\n        variant: \"peppermint\",\n        carb: 97,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 peppermint\", value: 0.02 },\n        ],\n      },\n      {\n        name: \"Toffees, mixed\",\n        variant: \"mixed\",\n        carb: 67.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 toffee\", value: 0.05 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Sauces & Syrups\",\n    category: \"Sugars, Confectionaries and Sweet spreads\",\n    carbs: [\n      {\n        name: \"Sauce, chocolate\",\n        variant: \"chocolate\",\n        carb: 52.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.15 },\n        ],\n      },\n      {\n        name: \"Syrup, golden\",\n        variant: \"golden\",\n        carb: 76.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.2 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Sugar\",\n    category: \"Sugars, Confectionaries and Sweet spreads\",\n    carbs: [\n      {\n        name: \"brown\",\n        variant: \"brown\",\n        carb: 95.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.037 },\n          { name: \"1 cup (250mL)\", value: 1.855 },\n        ],\n      },\n      {\n        name: \"raw\",\n        variant: \"raw\",\n        carb: 99.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.039 },\n          { name: \"1 cup (250mL)\", value: 1.935 },\n        ],\n      },\n      {\n        name: \"white\",\n        variant: \"white\",\n        carb: 100,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 teaspoon (5mL)\", value: 0.049 },\n          { name: \"1 cup (250mL)\", value: 2.468 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Raw Vegetables\",\n    category: \"Vegetables & Pulses\",\n    carbs: [\n      {\n        name: \"Asparagus, stalk, fresh, raw\",\n        variant: \"Asparagus\",\n        carb: 1.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 spear (16-20cm long)\", value: 0.15 },\n        ],\n      },\n      {\n        name: \"Bean, green runner or dwarf, seeds with pod, fresh, raw\",\n        variant: \"Bean\",\n        carb: 4.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 whole\", value: 0.057 },\n          { name: \"1 cup sliced 2cm long (250mL)\", value: 1.202 },\n        ],\n      },\n      {\n        name: \"Broccoli, raw\",\n        variant: \"Broccoli\",\n        carb: 1.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.83 },\n        ],\n      },\n      {\n        name: \"Cabbage, bok choy, raw\",\n        variant: \"Cabbage\",\n        carb: 1.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.774 },\n        ],\n      },\n      {\n        name: \"Cabbage, choy sum, raw\",\n        variant: \"Cabbage\",\n        carb: 0.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.72 },\n        ],\n      },\n      {\n        name: \"Cabbage, red\",\n        variant: \"Cabbage\",\n        carb: 3.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.9 },\n        ],\n      },\n      {\n        name: \"Cabbage, tat soi, raw\",\n        variant: \"Cabbage\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.841 },\n        ],\n      },\n      {\n        name: \"Cabbage, green drumhead, leaves, raw\",\n        variant: \"Cabbage\",\n        carb: 3.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup shredded (250mL)\", value: 0.635 },\n        ],\n      },\n      {\n        name: \"Capsicum, green, raw\",\n        variant: \"Capsicum\",\n        carb: 2.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 1.25 },\n          { name: \"1 capsicum\", value: 1.315 },\n        ],\n      },\n      {\n        name: \"Capsicum, red, raw\",\n        variant: \"Capsicum\",\n        carb: 5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 1.3 },\n          { name: \"1 capsicum\", value: 1.669 },\n        ],\n      },\n      {\n        name: \"Carrot, flesh, fresh, raw\",\n        variant: \"Carrot\",\n        carb: 6.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup grated (250mL)\", value: 0.944 },\n          { name: \"1 whole (15cm long)\", value: 1.1 },\n          { name: \"1 cup stick 7cm long (250mL)\", value: 1.116 },\n          { name: \"1 cup slices 1cm thick (250mL)\", value: 1.279 },\n        ],\n      },\n      {\n        name: \"Cauliflower, fresh, raw\",\n        variant: \"Cauliflower\",\n        carb: 1.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 floret (7.9cm length)\", value: 0.733 },\n          { name: \"1 cup florets (250mL)\", value: 1.518 },\n        ],\n      },\n      {\n        name: \"Celery, American Green, stalk, raw\",\n        variant: \"Celery\",\n        carb: 1.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 strip (14.2 cm long)\", value: 0.354 },\n          { name: \"1 stalk (24-32cm long)\", value: 0.696 },\n        ],\n      },\n      {\n        name: \"Courgette, green, unpeeled, raw\",\n        variant: \"Courgette\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (3.9 x 3.2cm diameter)\", value: 0.303 },\n          { name: \"1 cup chopped (250mL)\", value: 1.275 },\n        ],\n      },\n      {\n        name: \"Cucumber, lebanese, unpeeled, raw\",\n        variant: \"Cucumber\",\n        carb: 1.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cucumber\", value: 0.95 },\n        ],\n      },\n      {\n        name: \"Cucumber, telegraph, raw, unpeeled\",\n        variant: \"Cucumber\",\n        carb: 1.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (2.3 x 4.5cm diameter)\", value: 0.376 },\n          { name: \"1 cup diced (250mL)\", value: 1.475 },\n        ],\n      },\n      {\n        name: \"Garlic, cloves, raw, peeled\",\n        variant: \"Garlic\",\n        carb: 10.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 clove\", value: 0.03 },\n        ],\n      },\n      {\n        name: \"Ginger, preserved\",\n        variant: \"Ginger\",\n        carb: 21,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.014 },\n        ],\n      },\n      {\n        name: \"Kale, fresh, raw\",\n        variant: \"Kale\",\n        carb: 0.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.426 },\n        ],\n      },\n      {\n        name: \"Kumara, Owairaka Red, flesh, raw\",\n        variant: \"Kumara\",\n        carb: 18.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 kumara\", value: 2.172 },\n        ],\n      },\n      {\n        name: \"Lettuce, hydroponic varieties, raw\",\n        variant: \"Lettuce\",\n        carb: 1.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup torn leaves (250mL)\", value: 0.36 },\n        ],\n      },\n      {\n        name: \"Lettuce, raw\",\n        variant: \"Lettuce\",\n        carb: 1.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.761 },\n        ],\n      },\n      {\n        name: \"Mushroom, Portobello, whole, raw\",\n        variant: \"Mushroom\",\n        carb: 0.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mushroom (7.5 -10.2cm diameter)\", value: 0.621 },\n          { name: \"1 cup sliced (250mL)\", value: 0.788 },\n        ],\n      },\n      {\n        name: \"Mushroom, raw\",\n        variant: \"Mushroom\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.68 },\n        ],\n      },\n      {\n        name: \"Onion, brown, flesh, fresh, raw\",\n        variant: \"Onion\",\n        carb: 5.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 onion (6.9cm diameter)\", value: 1.74 },\n        ],\n      },\n      {\n        name: \"Parsley, raw\",\n        variant: \"Parsley\",\n        carb: 0.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.037 },\n          { name: \"1 cup chopped (250mL)\", value: 0.64 },\n        ],\n      },\n      {\n        name: \"Pumpkin, Whangaparaoa crown, fresh, raw\",\n        variant: \"Pumpkin\",\n        carb: 6.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced 5 x 2 x 2cm (250mL)\", value: 1.282 },\n        ],\n      },\n      {\n        name: \"Puwha, leaves, raw, Prickly Sow Thistle\",\n        variant: \"Puwha\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.4 },\n        ],\n      },\n      {\n        name: \"Radish, flesh & skin, raw\",\n        variant: \"Radish\",\n        carb: 2.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 radish\", value: 0.15 },\n        ],\n      },\n      {\n        name: \"Rocket, leaves, raw\",\n        variant: \"Rocket\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.375 },\n        ],\n      },\n      {\n        name: \"Salad, Mesclun, leaves, raw\",\n        variant: \"Salad\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.375 },\n        ],\n      },\n      {\n        name: \"Silverbeet, leaves & stems, fresh, raw\",\n        variant: \"Silverbeet\",\n        carb: 1.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.332 },\n        ],\n      },\n      {\n        name: \"Spinach, English, raw\",\n        variant: \"Spinach\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.429 },\n        ],\n      },\n      {\n        name: \"Spring onion, bulb and stalk, fresh, raw\",\n        variant: \"Spring onion\",\n        carb: 2.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.045 },\n          { name: \"1 cup chopped (250mL)\", value: 0.695 },\n        ],\n      },\n      {\n        name: \"Sprout, alfalfa, raw\",\n        variant: \"Sprout\",\n        carb: 0,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Sprout, mung bean, raw\",\n        variant: \"Sprout\",\n        carb: 1.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.04 },\n        ],\n      },\n      {\n        name: \"Taro, corm, flesh, raw\",\n        variant: \"Taro\",\n        carb: 24.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cube (3cm)\", value: 0.3 },\n        ],\n      },\n      {\n        name: \"Tomato, whole, raw\",\n        variant: \"Tomato\",\n        carb: 2.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 medium whole (6.6cm diameter)\", value: 1.23 },\n          { name: \"1 cup chopped (250mL)\", value: 1.675 },\n        ],\n      },\n      {\n        name: \"Watercress, raw\",\n        variant: \"Watercress\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.35 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Canned Vegetables\",\n    category: \"Vegetables & Pulses\",\n    carbs: [\n      {\n        name: \"Asparagus, canned, drained\",\n        variant: \"Asparagus\",\n        carb: 2.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup spears (250mL)\", value: 2.56 },\n        ],\n      },\n      {\n        name: \"Baked beans, canned in tomato sauce\",\n        variant: \"Baked beans\",\n        carb: 12,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.684 },\n        ],\n      },\n      {\n        name: \"Bean, mixed beans, canned in brine, drained\",\n        variant: \"Bean\",\n        carb: 8.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.169 },\n        ],\n      },\n      {\n        name: \"Beetroot, canned in water, sliced, drained\",\n        variant: \"Beetroot\",\n        carb: 10.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (0.5 x 4.6cm diameter)\", value: 0.102 },\n          { name: \"1 cup sliced (250mL)\", value: 1.764 },\n        ],\n      },\n      {\n        name: \"Beetroot, peeled, fresh, raw\",\n        variant: \"Beetroot\",\n        carb: 5.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup grated (250mL)\", value: 1.703 },\n          { name: \"1 cup sliced (250mL)\", value: 1.652 },\n          { name: \"1 beetroot (7.4cm)\", value: 1.958 },\n        ],\n      },\n      {\n        name: \"Cannellini bean, canned in brine, drained\",\n        variant: \"Cannellini bean\",\n        carb: 8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.189 },\n        ],\n      },\n      {\n        name: \"Chickpea, canned in brine, drained\",\n        variant: \"Chickpea\",\n        carb: 11.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.128 },\n        ],\n      },\n      {\n        name: \"Chilli bean, canned in chilli sauce, undrained\",\n        variant: \"Chilli bean\",\n        carb: 12.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.74 },\n        ],\n      },\n      {\n        name: \"Corn, baby sweet corn, canned, drained\",\n        variant: \"Corn\",\n        carb: 1.9,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Red kidney bean, canned in brine, drained\",\n        variant: \"Red kidney bean\",\n        carb: 8.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.149 },\n        ],\n      },\n      {\n        name: \"Sweet corn, creamed, canned\",\n        variant: \"Sweet corn\",\n        carb: 12.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.673 },\n        ],\n      },\n      {\n        name: \"Sweet corn, kernel, canned, drained\",\n        variant: \"Sweet corn\",\n        carb: 10.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup kernel (250mL)\", value: 1.856 },\n        ],\n      },\n      {\n        name: \"Tomato, canned in tomato juice, assorted flavours, canned, undrained, salt added\",\n        variant: \"Tomato\",\n        carb: 2.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.787 },\n        ],\n      },\n      {\n        name: \"Tomato, canned in tomato juice, plain, undrained, no salt added\",\n        variant: \"Tomato\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.805 },\n        ],\n      },\n      {\n        name: \"Tomato, canned in tomato juice, plain, undrained, salt added\",\n        variant: \"Tomato\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.749 },\n        ],\n      },\n      {\n        name: \"Tomato, canned, drained\",\n        variant: \"Tomato\",\n        carb: 4.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.54 },\n        ],\n      },\n      {\n        name: \"Tomato, paste, canned\",\n        variant: \"Tomato\",\n        carb: 10.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.151 },\n        ],\n      },\n      {\n        name: \"Tomato, puree, canned, Wattie's\",\n        variant: \"Tomato\",\n        carb: 6.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.153 },\n          { name: \"1 cup (250mL)\", value: 2.543 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Cooked Vegetables\",\n    category: \"Vegetables & Pulses\",\n    carbs: [\n      {\n        name: \"Artichoke, globe, boiled, drained, no salt added\",\n        variant: \"Artichoke\",\n        carb: 1.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 artichoke\", value: 1.2 },\n        ],\n      },\n      {\n        name: \"Asparagus, stalk, fresh, boiled, drained, no salt added\",\n        variant: \"Asparagus\",\n        carb: 1.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.363 },\n        ],\n      },\n      {\n        name: \"Asparagus, stalk, fresh, steamed\",\n        variant: \"Asparagus\",\n        carb: 1.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.35 },\n        ],\n      },\n      {\n        name: \"Bean, black, boiled, drained, no salt added\",\n        variant: \"Bean\",\n        carb: 14.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.82 },\n        ],\n      },\n      {\n        name: \"Bean, broad, boiled, drained, no salt added\",\n        variant: \"Bean\",\n        carb: 8.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.7 },\n        ],\n      },\n      {\n        name: \"Bean, haricot, boiled, drained\",\n        variant: \"Bean\",\n        carb: 15.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.8 },\n        ],\n      },\n      {\n        name: \"Bean, red kidney, boiled, drained\",\n        variant: \"Bean\",\n        carb: 9.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.8 },\n        ],\n      },\n      {\n        name: \"Bean, butterbean, seeds with pod, boiled, drained, no salt added\",\n        variant: \"Bean\",\n        carb: 2.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.36 },\n        ],\n      },\n      {\n        name: \"Bean, green runner or dwarf, seeds with pod, fresh, boiled, drained, no salt added\",\n        variant: \"Bean\",\n        carb: 4.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.214 },\n        ],\n      },\n      {\n        name: \"Bean, green runner or dwarf, seeds with pod, fresh, steamed\",\n        variant: \"Bean\",\n        carb: 4.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.228 },\n        ],\n      },\n      {\n        name: \"Beetroot, peeled, fresh, roasted, no salt added\",\n        variant: \"Beetroot\",\n        carb: 6.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 beetroot (7.4cm)\", value: 1.656 },\n        ],\n      },\n      {\n        name: \"Broccoli, boiled, drained, no salt added\",\n        variant: \"Broccoli\",\n        carb: 1.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.64 },\n        ],\n      },\n      {\n        name: \"Brussels sprout, boiled, drained, no salt added\",\n        variant: \"Brussels sprout\",\n        carb: 5.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup quartered (250mL)\", value: 1.302 },\n        ],\n      },\n      {\n        name: \"Brussels sprout, steamed\",\n        variant: \"Brussels sprout\",\n        carb: 6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup quartered (250mL)\", value: 1.275 },\n        ],\n      },\n      {\n        name: \"Cabbage, Chinese, cooked\",\n        variant: \"Cabbage\",\n        carb: 1.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 1.45 },\n        ],\n      },\n      {\n        name: \"Cabbage, green drumhead, leaves, boiled, drained, no salt added\",\n        variant: \"Cabbage\",\n        carb: 3.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup shredded (250mL)\", value: 1.044 },\n        ],\n      },\n      {\n        name: \"Cabbage, green drumhead, leaves, steamed\",\n        variant: \"Cabbage\",\n        carb: 3.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup shredded (250mL)\", value: 0.983 },\n        ],\n      },\n      {\n        name: \"Carrot, flesh, fresh, baked with oil\",\n        variant: \"Carrot\",\n        carb: 10.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup slices 5cm thick (250mL)\", value: 1.227 },\n        ],\n      },\n      {\n        name: \"Carrot, flesh, fresh, boiled, drained, no salt added\",\n        variant: \"Carrot\",\n        carb: 7.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced 1cm thick (250mL)\", value: 1.456 },\n        ],\n      },\n      {\n        name: \"Carrot, flesh, fresh, steamed\",\n        variant: \"Carrot\",\n        carb: 7.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced 0.5cm thick (250mL)\", value: 1.357 },\n        ],\n      },\n      {\n        name: \"Carrot, flesh, fresh, stir fried\",\n        variant: \"Carrot\",\n        carb: 8.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup stick 7 cm long (250mL)\", value: 1.165 },\n        ],\n      },\n      {\n        name: \"Cassava, baked in traditional Papua New Guinea oven\",\n        variant: \"Cassava\",\n        carb: 36.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2.27 },\n        ],\n      },\n      {\n        name: \"Cassava, boiled, peeled, drained, no salt added\",\n        variant: \"Cassava\",\n        carb: 33.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup diced (250mL)\", value: 1.39 },\n        ],\n      },\n      {\n        name: \"Cauliflower, boiled, drained, no salt added\",\n        variant: \"Cauliflower\",\n        carb: 1.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 floret (7.9cm length)\", value: 0.734 },\n          { name: \"1 cup florets (250mL)\", value: 1.576 },\n        ],\n      },\n      {\n        name: \"Celery, American Green, stalk, stir fried\",\n        variant: \"Celery\",\n        carb: 1.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup diced (250mL)\", value: 2.233 },\n        ],\n      },\n      {\n        name: \"Chickpea, cooked\",\n        variant: \"Chickpea\",\n        carb: 9.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.73 },\n        ],\n      },\n      {\n        name: \"Choko, flesh, cooked\",\n        variant: \"Choko\",\n        carb: 4.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.4 },\n        ],\n      },\n      {\n        name: \"Eggplant, baked with oil,\",\n        variant: \"Eggplant\",\n        carb: 5.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (1.2 x 6.4cm diameter)\", value: 0.215 },\n          { name: \"1 cup sliced (250mL)\", value: 1.43 },\n        ],\n      },\n      {\n        name: \"Eggplant, boiled, drained, no salt added\",\n        variant: \"Eggplant\",\n        carb: 2.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.883 },\n        ],\n      },\n      {\n        name: \"Eggplant, fried with oil\",\n        variant: \"Eggplant\",\n        carb: 3.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (1.2 x 6.4cm diameter)\", value: 0.299 },\n          { name: \"1 cup sliced (250mL)\", value: 1.85 },\n        ],\n      },\n      {\n        name: \"Eggplant, steamed\",\n        variant: \"Eggplant\",\n        carb: 3.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 slice (0.6 x 6.3cm diameter)\", value: 0.197 },\n          { name: \"1 cup sliced (250mL)\", value: 1.734 },\n        ],\n      },\n      {\n        name: \"Kale, fresh, sauteed with oil, no salt added\",\n        variant: \"Kale\",\n        carb: 1.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.549 },\n        ],\n      },\n      {\n        name: \"Kumara, Owairaka Red, flesh, boiled, drained, no salt added\",\n        variant: \"Kumara\",\n        carb: 18.8,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Kumara, flesh, boiled, drained, no salt added\",\n        variant: \"Kumara\",\n        carb: 13.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup  whole (250mL)\", value: 3.466 },\n        ],\n      },\n      {\n        name: \"Leek, bulb & stalk, fresh, stir-fried, no salt added\",\n        variant: \"Leek\",\n        carb: 3.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 1.213 },\n        ],\n      },\n      {\n        name: \"Lentil, split, boiled, drained, no salt added\",\n        variant: \"Lentil\",\n        carb: 15.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 2 },\n        ],\n      },\n      {\n        name: \"Marrow, flesh, boiled, drained, no salt added\",\n        variant: \"Marrow\",\n        carb: 1.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup diced (250mL)\", value: 2.2 },\n        ],\n      },\n      {\n        name: \"Mushroom, Portobello, whole, baked with oil,\",\n        variant: \"Mushroom\",\n        carb: 1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 mushroom (1.7 x 7.3cm diameter)\", value: 0.458 },\n        ],\n      },\n      {\n        name: \"Mushroom, fried in butter\",\n        variant: \"Mushroom\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.5 },\n        ],\n      },\n      {\n        name: \"Mushroom, fried in oil\",\n        variant: \"Mushroom\",\n        carb: 0.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.41 },\n        ],\n      },\n      {\n        name: \"Onion, brown, flesh, fresh, sauteed\",\n        variant: \"Onion\",\n        carb: 5.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.566 },\n          { name: \"1 cup chopped (250mL)\", value: 1.703 },\n        ],\n      },\n      {\n        name: \"Parsnip, boiled, drained, no salt added\",\n        variant: \"Parsnip\",\n        carb: 10.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.989 },\n        ],\n      },\n      {\n        name: \"Parsnip, flesh, baked without fat\",\n        variant: \"Parsnip\",\n        carb: 14.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.449 },\n        ],\n      },\n      {\n        name: \"Parsnip, flesh, steamed\",\n        variant: \"Parsnip\",\n        carb: 11.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.772 },\n        ],\n      },\n      {\n        name: \"Pea, split, dried, boiled, drained, no salt added\",\n        variant: \"Pea\",\n        carb: 22.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.94 },\n        ],\n      },\n      {\n        name: \"Potato, flesh & skin, floury, baked without oil, no added salt\",\n        variant: \"Potato\",\n        carb: 19.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small (6.3 x 4.4cm diameter)\", value: 0.771 },\n          { name: \"1 medium (9.0 x 4.8cm diameter)\", value: 1.628 },\n          { name: \"1 large (11.5 x 5.7cm diameter)\", value: 2.582 },\n        ],\n      },\n      {\n        name: \"Potato, flesh & skin, waxy, boiled, drained, no salt added\",\n        variant: \"Potato\",\n        carb: 11,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 small (5.5 x 4.4cm diameter)\", value: 0.835 },\n          { name: \"1 medium (7.6 x 4.7cm diameter)\", value: 1.286 },\n          { name: \"1 large (9.7 x 5.4cm diameter)\", value: 2.295 },\n        ],\n      },\n      {\n        name: \"Potato, flesh, floury, boiled, drained, mashed, no salt added\",\n        variant: \"Potato\",\n        carb: 12.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup mashed (250mL)\", value: 2.462 },\n        ],\n      },\n      {\n        name: \"Potato, flesh, floury, fried in canola oil, no salt added\",\n        variant: \"Potato\",\n        carb: 16.6,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.972 },\n        ],\n      },\n      {\n        name: \"Potato, flesh, floury, mashed with 3.3% fat milk & butter, no salt added\",\n        variant: \"Potato\",\n        carb: 10.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup mashed (250mL)\", value: 2.474 },\n        ],\n      },\n      {\n        name: \"Potato, flesh, floury, mashed with 3.3% fat milk & margarine, no salt added\",\n        variant: \"Potato\",\n        carb: 10.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup mashed (250mL)\", value: 2.486 },\n        ],\n      },\n      {\n        name: \"Pumpkin, Kumi Kumi, flesh and skin, fresh, boiled, drained, no salt added\",\n        variant: \"Pumpkin\",\n        carb: 3.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup cubed (250mL)\", value: 1.543 },\n        ],\n      },\n      {\n        name: \"Pumpkin, Whangaparaoa crown, flesh, fresh, steamed, Whangaparaoa crown\",\n        variant: \"Pumpkin\",\n        carb: 7.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced 5 x 2 x 2cm (250mL)\", value: 1.462 },\n        ],\n      },\n      {\n        name: \"Pumpkin, Whangaparaoa crown, fresh, boiled, drained, no salt added\",\n        variant: \"Pumpkin\",\n        carb: 7.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced 5 x 2 x 2cm (250mL)\", value: 1.554 },\n        ],\n      },\n      {\n        name: \"Pumpkin, flesh, Whangaparaoa crown, fresh, baked with oil\",\n        variant: \"Pumpkin\",\n        carb: 11.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced 5 x 2 x 2cm (250mL)\", value: 1.236 },\n        ],\n      },\n      {\n        name: \"Puwha, Sow Thistle, leaves & upper stem, boiled, drained, no salt added\",\n        variant: \"Puwha\",\n        carb: 0.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 1.46 },\n        ],\n      },\n      {\n        name: \"Seaweed, sheet, toasted, nori\",\n        variant: \"Seaweed\",\n        carb: 2.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"5 sheets\", value: 0.113 },\n        ],\n      },\n      {\n        name: \"Silverbeet, leaves & stems, fresh, boiled, drained, no salt added\",\n        variant: \"Silverbeet\",\n        carb: 1.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.724 },\n        ],\n      },\n      {\n        name: \"Silverbeet, leaves & stems, fresh, steamed\",\n        variant: \"Silverbeet\",\n        carb: 1.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup chopped (250mL)\", value: 0.65 },\n        ],\n      },\n      {\n        name: \"Spinach, English, boiled, drained, no salt added\",\n        variant: \"Spinach\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.5 },\n        ],\n      },\n      {\n        name: \"Spring onion, bulb and stalk, fresh, sauteed\",\n        variant: \"Spring onion\",\n        carb: 3.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 tablespoon (15mL)\", value: 0.066 },\n          { name: \"1 cup chopped (250mL)\", value: 1.106 },\n        ],\n      },\n      {\n        name: \"Squash, buttercup, flesh, steamed\",\n        variant: \"Squash\",\n        carb: 18.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup diced (250mL)\", value: 2.22 },\n        ],\n      },\n      {\n        name: \"Swede, peeled, fresh, boiled, drained, no salt added\",\n        variant: \"Swede\",\n        carb: 4.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup cubed (250mL)\", value: 1.868 },\n        ],\n      },\n      {\n        name: \"Sweet corn, kernel, fresh, boiled, drained, no salt added\",\n        variant: \"Sweet corn\",\n        carb: 12.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cob (18.5 x 5.4cm diameter)\", value: 1.656 },\n          { name: \"1 cup kernel (250mL)\", value: 1.847 },\n        ],\n      },\n      {\n        name: \"Sweet corn, kernel, fresh, microwaved, no salt added\",\n        variant: \"Sweet corn\",\n        carb: 16.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cob (17.8 x 5.1cm diameter)\", value: 1.294 },\n          { name: \"1 cup kernel (250mL)\", value: 1.844 },\n        ],\n      },\n      {\n        name: \"Taro, corm, flesh, baked\",\n        variant: \"Taro\",\n        carb: 24.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.475 },\n        ],\n      },\n      {\n        name: \"Taro, corm, flesh, boiled\",\n        variant: \"Taro\",\n        carb: 24.9,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup sliced (250mL)\", value: 1.45 },\n        ],\n      },\n      {\n        name: \"Tofu, soy bean curd, regular, firm, simmered or pouched, no salt added\",\n        variant: \"Tofu\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece\", value: 0.332 },\n        ],\n      },\n      {\n        name: \"Tofu, soy bean curd, regular, firm, stir-fried, no salt added\",\n        variant: \"Tofu\",\n        carb: 0,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 piece (3.5 x 2.2 x 2.6cm)\", value: 0.182 },\n        ],\n      },\n      {\n        name: \"Tomato, sun-dried\",\n        variant: \"Tomato\",\n        carb: 43.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.54 },\n        ],\n      },\n      {\n        name: \"Turnip, root, flesh, boiled, drained, no salt added\",\n        variant: \"Turnip\",\n        carb: 2.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup mashed (250mL)\", value: 1.22 },\n        ],\n      },\n      {\n        name: \"Yams, New Zealand, red, unpeeled, baked without fat\",\n        variant: \"Yams\",\n        carb: 18.8,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n      {\n        name: \"Yams, New Zealand, red, unpeeled, boiled, drained, no salt added\",\n        variant: \"Yams\",\n        carb: 12.5,\n        amounts: [{ name: \"100g\", value: 1 }],\n      },\n    ],\n  },\n  {\n    name: \"Frozen Vegetables\",\n    category: \"Vegetables & Pulses\",\n    carbs: [\n      {\n        name: \"Broccoflower, frozen, raw\",\n        variant: \"Broccoflower\",\n        carb: 2.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 0.95 },\n        ],\n      },\n      {\n        name: \"Broccoflower, frozen, boiled, drained, no salt added\",\n        variant: \"Broccoflower\",\n        carb: 2.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.64 },\n        ],\n      },\n      {\n        name: \"Pea, green, frozen, boiled, drained, no salt added\",\n        variant: \"Pea\",\n        carb: 9.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.806 },\n        ],\n      },\n      {\n        name: \"Potato, fries beer batter, frozen, baked\",\n        variant: \"Potato\",\n        carb: 24.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.561 },\n        ],\n      },\n      {\n        name: \"Potato, fries tempura, frozen, baked, Crunchy Steak Cut Fries, Wattie's\",\n        variant: \"Potato\",\n        carb: 24.1,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.721 },\n        ],\n      },\n      {\n        name: \"Potato, fries, chunky cut, frozen, precooked in canola oil, baked\",\n        variant: \"Potato\",\n        carb: 32.7,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or fries\", value: 0.826 },\n        ],\n      },\n      {\n        name: \"Potato, fries, chunky cut, frozen, precooked in polyunsaturated oil, baked\",\n        variant: \"Potato\",\n        carb: 25.8,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or fries\", value: 0.8 },\n        ],\n      },\n      {\n        name: \"Potato, fries, shoestring cut, frozen, precooked in polyunsaturated oil, baked\",\n        variant: \"Potato\",\n        carb: 33,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or fries\", value: 0.21 },\n        ],\n      },\n      {\n        name: \"Potato, fries, straight cut, frozen, precooked in polyunsaturated oil, baked\",\n        variant: \"Potato\",\n        carb: 26.2,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 chips or fries\", value: 0.588 },\n        ],\n      },\n      {\n        name: \"Potato, wedges lower fat & salt, baked, Wedges Crunchy, Pams\",\n        variant: \"Potato\",\n        carb: 24.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.509 },\n        ],\n      },\n      {\n        name: \"Potato, wedges, frozen, precooked in polyunsaturated oil, baked\",\n        variant: \"Potato\",\n        carb: 28.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"10 wedges\", value: 0.947 },\n        ],\n      },\n      {\n        name: \"Sweet corn, kernel, frozen, boiled, drained, no salt added\",\n        variant: \"Sweet corn\",\n        carb: 8.3,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.826 },\n        ],\n      },\n      {\n        name: \"Vegetables mix, carrots, corn & peas, frozen, boiled, drained, no salt added\",\n        variant: \"Vegetables mix\",\n        carb: 10.4,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 cup (250mL)\", value: 1.45 },\n        ],\n      },\n    ],\n  },\n  {\n    name: \"Pickled Vegetables\",\n    category: \"Vegetables & Pulses\",\n    carbs: [\n      {\n        name: \"Gherkin, pickled, in sweetened brine, drained\",\n        variant: \"Gherkin\",\n        carb: 25.5,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 gherkin (2 x 6cm)\", value: 0.19 },\n        ],\n      },\n      {\n        name: \"Onion, pickled\",\n        variant: \"Onion\",\n        carb: 13,\n        amounts: [\n          { name: \"100g\", value: 1 },\n          { name: \"1 onion\", value: 0.25 },\n        ],\n      },\n    ],\n  },\n];\n","import { v4 as uuidv4 } from \"uuid\";\n\n/**\n * Class representing an amount of carbs\n */\nexport default class CarbAmount {\n  /**\n   * Creates a new CarbAmount\n   * @param {string} name The name of the amount\n   * @param {int} value The value relative to *g* (gram).\n   */\n  constructor(name, value) {\n    this.class = \"CarbAmount\";\n    this.uuid = uuidv4();\n    this.name = name;\n    this.value = value;\n  }\n}\n","import CarbAmount from \"./CarbAmount\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n/**\n * Class representing a carb\n */\nexport default class Carb {\n  /**\n   * Creates a new Carb\n   * @param {string} name The name of the carb\n   * @param {string} [variant] The variant name of the carb\n   * @param {CarbAmount[]} [amounts] A list of carb amounts\n   */\n  constructor(name, carb, variant = \"\", amounts = []) {\n    this.class = \"Carb\";\n    this.uuid = uuidv4();\n    this.name = name;\n    this.carb = carb;\n    this.variant = variant;\n    this.amounts = amounts.map((e) => new CarbAmount(e.name, e.value));\n  }\n}\n","import { v4 as uuidv4 } from \"uuid\";\nimport Carb from \"./Carb\";\n\n/**\n * Class representing a category of carbs\n */\nexport default class CarbCategory {\n  /**\n   * Creates a new CarbCategory\n   * @param {string} name The name of the category.\n   * @param {CarbCategory[]} [subcategories] List of Subcategories.\n   * @param {Carb[]} [carbs] List of carbs in the category.\n   */\n  constructor(name, subcategories = [], carbs = []) {\n    this.class = \"CarbCategory\";\n    this.uuid = uuidv4();\n    this.name = name;\n    this.subcategories = subcategories;\n    this.carbs = carbs.map(\n      (e) => new Carb(e.name, e.carb, e.variant, e.amounts)\n    );\n  }\n  /**\n   * Get this CarbCategory filtered by the provided search term.\n   *\n   * Returns an empty array if nothing matches so it can be removed by array.prototype.flatMap.\n   * @param {string} searchTerm Search term to filter by.\n   * @returns {(CarbCategory|Array)} A filtered CarbCategory or an empty array.\n   */\n  filterBySearchTerm(searchTerm) {\n    if (this.name.toLowerCase().includes(searchTerm)) {\n      return this;\n    }\n\n    const filteredSubcategories = this._filterSubcategories(searchTerm);\n    const filteredCarbs = this._filterCarbs(searchTerm);\n\n    if (filteredSubcategories.length === 0 && filteredCarbs.length === 0) {\n      return [];\n    }\n\n    return new CarbCategory(this.name, filteredSubcategories, filteredCarbs);\n  }\n\n  /**\n   * Filters subcategories by a search term.\n   * @param {string} searchTerm Search term to filter by.\n   * @returns {(CarbCategory[]|Array)} Array of filtered CarbCategory objects or an empty array.\n   */\n  _filterSubcategories(searchTerm) {\n    if (this.subcategories.length === 0) {\n      return this.subcategories;\n    }\n\n    const list = this.subcategories;\n\n    return list.flatMap((item) => item.filterBySearchTerm(searchTerm));\n  }\n\n  /**\n   * Filters Carbs by a search term.\n   * @param {string} searchTerm Search term to filter by.\n   * @returns {(Carb[]|Array)} Array of filtered Carb objects or an empty array.\n   */\n  _filterCarbs(searchTerm) {\n    if (this.carbs.length === 0) {\n      return this.carbs;\n    }\n\n    const list = this.carbs;\n\n    return list.filter((item) => {\n      return (\n        item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        item.variant.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    });\n  }\n}\n","import carbs from \"../../carbs\";\nimport CarbCategory from \"../../classes/CarbCategory\";\n\nfunction initCarbCategories() {\n  const categoriesList = [];\n\n  carbs.forEach((carb) => {\n    const subCategory = new CarbCategory(carb.name, [], carb.carbs);\n\n    const categoryIndex = categoriesList.findIndex(\n      (e) => e.name === carb.category\n    );\n\n    if (categoryIndex !== -1) {\n      categoriesList[categoryIndex].subcategories.push(subCategory);\n    } else {\n      categoriesList.push(new CarbCategory(carb.category, [subCategory]));\n    }\n  });\n\n  return categoriesList;\n}\n\nfunction filterListBySearchTerm(list, searchTerm) {\n  const filteredList = list.flatMap((item) => {\n    if (item instanceof CarbCategory) {\n      return item.filterBySearchTerm(searchTerm);\n    }\n  });\n\n  return filteredList;\n}\n\nconst CarbCategories = initCarbCategories();\n\nexport default {\n  namespaced: true,\n  state: () => ({\n    searchTerm: \"\",\n    selectedItems: [],\n  }),\n  mutations: {\n    addItem(state, payload) {\n      state.selectedItems.push(payload);\n    },\n    removeItem(state, payload) {\n      state.selectedItems.splice(state.selectedItems.indexOf(payload), 1);\n    },\n    search(state, payload) {\n      state.searchTerm = payload;\n    },\n  },\n  actions: {},\n  getters: {\n    searchTerm: function (state) {\n      return state.searchTerm;\n    },\n    categoriesList: function (state) {\n      return filterListBySearchTerm(CarbCategories, state.searchTerm);\n    },\n    total: function (state, getters, rootState, rootGetters) {\n      const reducer = (accumulator, currentValue) => currentValue + accumulator;\n      return state.selectedItems\n        .map(\n          (item) =>\n            (item.carbs * item.amountMultiplier) /\n            rootGetters[\"settings/carbUnit\"].value\n        )\n        .reduce(reducer, 0);\n    },\n  },\n};\n","export default {\n  namespaced: true,\n  state: () => ({\n    glucose: 0,\n    carbs: 0,\n  }),\n  mutations: {\n    update(state, payload) {\n      state[payload.property] = payload.index;\n    },\n    convertGlucose(state, { previousBGUnitValue, newBGUnitValue }) {\n      const glucose = (state.glucose / previousBGUnitValue) * newBGUnitValue;\n\n      state.glucose = glucose;\n    },\n    convertCarbs(state, { previousCarbUnitValue, newCarbUnitValue }) {\n      let carbs = state.carbs;\n\n      if (previousCarbUnitValue === 1) {\n        carbs = state.carbs / newCarbUnitValue;\n      } else {\n        carbs = (state.carbs * previousCarbUnitValue) / newCarbUnitValue;\n      }\n\n      state.carbs = carbs;\n    },\n  },\n  actions: {\n    updateNumberInput: function (context, payload) {\n      context.commit(\"update\", {\n        property: payload.id,\n        index: Number(payload.value),\n      });\n    },\n  },\n  getters: {\n    glucose: (state) => {\n      return state.glucose;\n    },\n    carbs: (state) => {\n      return state.carbs;\n    },\n    ratioResult: function (state, getters, rootState, rootGetters) {\n      let carbs = state.carbs;\n      let carbRatio = rootGetters[\"settings/carbRatio\"].value;\n\n      // Calculate Carb Insulin\n      const carbsum = carbs / carbRatio;\n      let ratioResult = Number(carbsum.toFixed(1));\n\n      if (Number.isNaN(ratioResult) || ratioResult < 0) {\n        ratioResult = 0;\n      }\n\n      return ratioResult;\n    },\n    correctionResult: function (state, getters, rootState, rootGetters) {\n      const glucoseDiff = state.glucose - rootGetters[\"settings/target\"];\n      const correctionFactor = rootGetters[\"settings/correctionFactor\"];\n\n      // Calculate Correctional Insulin\n      const correctionsum = glucoseDiff / correctionFactor;\n      let correctionResult = Number(correctionsum.toFixed(1));\n\n      if (Number.isNaN(correctionResult) || correctionResult < 0) {\n        correctionResult = 0;\n      }\n\n      return correctionResult;\n    },\n    resultTotal: function (state, getters) {\n      const total = getters.correctionResult + getters.ratioResult;\n\n      // Calculate Total Insulin\n      return Number(total.toFixed(1));\n    },\n  },\n};\n","/**\n * Class representing a unit of measurement.\n */\nexport default class Unit {\n  /**\n   * Create a new Unit.\n   * @param {string} name - The symbol of the unit.\n   * @param {number} value - The value of the unit relative to a base unit.\n   */\n  constructor(name, value) {\n    this.name = name;\n    this.value = value;\n  }\n}\n","import Unit from \"./Unit\";\n\n/**\n * Class representing a unit of measurement for carbohydrates\n * @extends Unit\n */\nexport default class CarbUnit extends Unit {\n  /**\n   * Create a new CarbUnit.\n   * @param {string} name - The symbol of the unit.\n   * @param {number} value - The value relative to *g* (gram).\n   */\n  constructor(name, value) {\n    super(name, value);\n  }\n}\n","import Unit from \"./Unit\";\n\n/**\n * Class representing a unit of measurement for blood glucose\n * @extends Unit\n */\nexport default class BGUnit extends Unit {\n  /**\n   * Create a new BGUnit.\n   * @param {string} name - The symbol of the unit.\n   * @param {number} value - The value of the unit relative to *mmol/L* (Millimoles per liter).\n   */\n  constructor(name, value) {\n    super(name, value);\n  }\n}\n","import CarbRatio from \"../../classes/CarbRatio\";\nimport CarbUnit from \"../../classes/CarbUnit\";\nimport BGUnit from \"../../classes/BGUnit\";\n\nexport default {\n  namespaced: true,\n  state: () => ({\n    carbRatio: new CarbRatio(1, 10),\n    carbUnitIndex: 2,\n    carbUnitOptions: [\n      new CarbUnit(\"BU\", 12),\n      new CarbUnit(\"CU\", 15),\n      new CarbUnit(\"g\", 1),\n    ],\n    BGUnitIndex: 0,\n    BGUnitOptions: [new BGUnit(\"mmol/L\", 1), new BGUnit(\"mg/dL\", 18.0182)],\n    target: 6.5,\n    correctionFactor: 2,\n    // Don't pass user data into correctionNumber\n    correctionNumber: 100,\n    saved: false,\n  }),\n  mutations: {\n    update(state, payload) {\n      state[payload.property] = payload.index;\n    },\n    convertTarget(state, newBGUnitIndex) {\n      const previousBGUnitValue = Number(\n        state.BGUnitOptions[state.BGUnitIndex].value\n      );\n      const newBGUnitValue = Number(state.BGUnitOptions[newBGUnitIndex].value);\n\n      const target = (state.target / previousBGUnitValue) * newBGUnitValue;\n      const correctionNumber =\n        (state.correctionNumber / previousBGUnitValue.toFixed(0)) *\n        newBGUnitValue.toFixed(0);\n      const correctionFactor =\n        (state.correctionFactor / previousBGUnitValue.toFixed(0)) *\n        newBGUnitValue.toFixed(0);\n\n      state.target = target;\n      state.correctionNumber = correctionNumber;\n      state.correctionFactor = correctionFactor;\n    },\n    convertCarbRatio(state, newCarbUnitIndex) {\n      const previousCarbUnitValue = Number(\n        state.carbUnitOptions[state.carbUnitIndex].value\n      );\n      const newCarbUnitValue = Number(\n        state.carbUnitOptions[newCarbUnitIndex].value\n      );\n\n      const carbRatio = state.carbRatio.convert(\n        previousCarbUnitValue,\n        newCarbUnitValue\n      );\n\n      state.CarbRatio = carbRatio;\n    },\n  },\n  actions: {\n    updateRatioInput: function (context, payload) {\n      context.commit(\"update\", {\n        property: payload.id,\n        index: payload.value,\n      });\n    },\n    updateNumberInput: function (context, payload) {\n      context.commit(\"update\", {\n        property: payload.id,\n        index: Number(payload.value),\n      });\n    },\n    updateSelectInput: function (context, payload) {\n      if (payload.id === \"BGUnit\") {\n        context.commit(\"convertTarget\", payload.value);\n        context.commit(\n          \"dosecalc/convertGlucose\",\n          {\n            previousBGUnitValue: Number(\n              context.state.BGUnitOptions[context.state.BGUnitIndex].value\n            ),\n            newBGUnitValue: Number(\n              context.state.BGUnitOptions[payload.value].value\n            ),\n          },\n          {\n            root: true,\n          }\n        );\n      }\n\n      if (payload.id === \"carbUnit\") {\n        context.commit(\"convertCarbRatio\", payload.value);\n        context.commit(\n          \"dosecalc/convertCarbs\",\n          {\n            previousCarbUnitValue: Number(\n              context.state.carbUnitOptions[context.state.carbUnitIndex].value\n            ),\n            newCarbUnitValue: Number(\n              context.state.carbUnitOptions[payload.value].value\n            ),\n          },\n          {\n            root: true,\n          }\n        );\n      }\n\n      context.commit(\"update\", {\n        property: payload.id + \"Index\",\n        index: Number(payload.value),\n      });\n    },\n    saveSettings: function (context) {\n      context.state.saved = false;\n      const { ...saveState } = context.state;\n      if (typeof Storage !== \"undefined\") {\n        localStorage.setItem(\"settings\", JSON.stringify({ ...saveState }));\n        context.state.saved = true;\n      }\n\n      setTimeout(function () {\n        context.state.saved = false;\n      }, 3000);\n    },\n  },\n  getters: {\n    carbUnit: (state) => {\n      return state.carbUnitOptions[state.carbUnitIndex];\n    },\n    BGUnit: (state) => {\n      return state.BGUnitOptions[state.BGUnitIndex];\n    },\n    carbRatio: (state) => {\n      return state.carbRatio;\n    },\n    target: (state) => {\n      return state.target;\n    },\n    correctionFactor: (state) => {\n      return state.correctionFactor;\n    },\n  },\n};\n","import Vue from \"vue\";\nimport Vuex from \"vuex\";\nimport carbRatio from \"../classes/CarbRatio\";\nimport carbcalc from \"./carbcalc\";\nimport dosecalc from \"./dosecalc\";\nimport settings from \"./settings\";\n\nVue.use(Vuex);\n\nconst store = new Vuex.Store({\n  mutations: {\n    initialiseStore(state) {\n      if (typeof Storage !== \"undefined\") {\n        if (localStorage.getItem(\"settings\")) {\n          const savedSettings = JSON.parse(localStorage.getItem(\"settings\"));\n          const savedCarbRatio = savedSettings.carbRatio;\n\n          savedSettings.carbRatio = new carbRatio(\n            savedCarbRatio.insulin,\n            savedCarbRatio.carbs\n          );\n\n          this.replaceState({\n            carbcalc: state.carbcalc,\n            dosecalc: state.dosecalc,\n            settings: Object.assign(state.settings, savedSettings),\n          });\n        }\n      }\n    },\n  },\n  modules: {\n    carbcalc,\n    dosecalc,\n    settings,\n  },\n});\n\nexport default store;\n","/* eslint-disable no-console */\n\nimport { register } from \"register-service-worker\";\n\nif (process.env.NODE_ENV === \"production\") {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        \"App is being served from cache by a service worker.\\n\" +\n          \"For more details, visit https://goo.gl/AFskqB\"\n      );\n    },\n    registered() {\n      console.log(\"Service worker has been registered.\");\n    },\n    cached() {\n      console.log(\"Content has been cached for offline use.\");\n    },\n    updatefound() {\n      console.log(\"New content is downloading.\");\n    },\n    updated() {\n      console.log(\"New content is available; please refresh.\");\n    },\n    offline() {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    },\n    error(error) {\n      console.error(\"Error during service worker registration:\", error);\n    },\n  });\n}\n","import Vue from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport \"./registerServiceWorker\";\n\nVue.config.productionTip = false;\n\nnew Vue({\n  router,\n  store,\n  beforeCreate() {\n    this.$store.commit(\"initialiseStore\");\n  },\n  render: (h) => h(App),\n}).$mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/projects/CarbCounterPlusVue/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcarbcounter_plus_vue\"] = self[\"webpackChunkcarbcounter_plus_vue\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5412); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","staticClass","$route","name","on","toggleMenu","_e","ref","_v","methods","component","components","AppHeader","class","colorClass","title","toLowerCase","svg","_s","props","type","default","color","validator","computed","MenuButton","customCarb","domProps","searchTerm","search","selectedCategoryName","categoriesList","selectedCategoryNameChange","selectedCarbName","carbsList","selectedCarbNameChange","selectedAmountName","amountsList","selectedAmountNameChange","directives","rawName","value","expression","$event","target","composing","customCarbName","add","total","list","length","input","emptyString","_l","category","key","uuid","subcategory","item","variant","toFixed","carbUnit","calculateDosage","property","index","items","amount","remove","DropdownInput","CarbTotal","CarbList","data","selectedCategory","selectedCarb","carb","selectedAmount","amountMultiplier","carbs","BGUnit","glucose","updateNumberInput","carbRatio","correctionResult","ratioResult","resultTotal","step","computedValue","unit","id","clamp","view","ratio","returnValue","rounded","constructor","insulin","simplify","numerator","denominator","i","convert","previousCarbUnitValue","newCarbUnitValue","DosageResult","mapState","mapGetters","mapActions","createNamespacedHelpers","NumberInput","DosageResults","updateRatioInput","carbUnitOptions","carbUnitIndex","updateSelectInput","BGUnitOptions","BGUnitIndex","correctionNumber","correctionFactor","saved","saveSettings","left","blur","right","rightValue","change","option","model","prop","event","options","click","RatioInput","SelectInput","SubmitButton","Vue","Router","routes","path","AppHome","CarbCalc","DoseCalc","Settings","amounts","CarbAmount","uuidv4","Carb","map","e","CarbCategory","subcategories","filterBySearchTerm","includes","filteredSubcategories","_filterSubcategories","filteredCarbs","_filterCarbs","flatMap","filter","initCarbCategories","forEach","subCategory","categoryIndex","findIndex","push","filterListBySearchTerm","filteredList","CarbCategories","namespaced","state","selectedItems","mutations","addItem","payload","removeItem","splice","indexOf","actions","getters","rootState","rootGetters","reducer","accumulator","currentValue","reduce","update","convertGlucose","previousBGUnitValue","newBGUnitValue","convertCarbs","context","commit","Number","carbsum","isNaN","glucoseDiff","correctionsum","Unit","CarbUnit","super","CarbRatio","convertTarget","newBGUnitIndex","convertCarbRatio","newCarbUnitIndex","root","saveState","Storage","localStorage","setItem","JSON","stringify","setTimeout","Vuex","store","initialiseStore","getItem","savedSettings","parse","savedCarbRatio","replaceState","carbcalc","dosecalc","settings","Object","assign","modules","register","ready","console","log","registered","cached","updatefound","updated","offline","error","router","beforeCreate","$store","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","r","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","window","obj","prototype","hasOwnProperty","call","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}